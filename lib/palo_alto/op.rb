# frozen_string_literal: true

require 'nokogiri'

module PaloAlto
  class XML
    def op
      Op.new(client: self)
    end

    class Op
      attr_reader :client

      def initialize(client:)
        @client = client
      end

      def execute(cmd, type: nil, location: nil, additional_payload: {})
        payload = build_payload(cmd).merge(additional_payload)

        if type == 'tpl'
          run_with_template_scope(location) { client.execute(payload) }
        elsif type == 'dg'
          client.execute(payload.merge({ vsys: location }))
        elsif !type || type == 'shared'
          client.execute(payload)
        else
          raise(ArgumentError, "invalid type: #{type.inspect}")
        end
      end

      def run_with_template_scope(name)
        if block_given?
          run_with_template_scope(name)
          begin
            return yield
          ensure
            run_with_template_scope(nil)
          end
        end

        cmd = if name
                { set: { system: { setting: { target: { template: { name: name } } } } } }
              else
                { set: { system: { setting: { target: 'none' } } } }
              end

        execute(cmd)
      end

      def build_payload(obj)
        cmd = to_xml(obj)

        if obj == 'commit' || obj.keys.first.to_sym == :commit
          type = 'commit'
          action = 'panorama'
        elsif obj == 'commit-all' || obj.keys.first.to_sym == :'commit-all'
          type = 'commit'
          action = 'all'
        else
          type = 'op'
          action = 'panorama'
        end

        {
          type: type,
          action: action,
          cmd: cmd
        }
      end

      def escape_xpath_tag(tag)
        if tag.to_s.include?('-') # https://stackoverflow.com/questions/48628259/nokogiri-how-to-name-a-node-comment
          tag
        else
          "#{tag}_"
        end
      end

      def xml_builder(xml, ops, obj)
        case obj
        when String
          section = obj
          data = nil
        when Hash
          section = obj.keys.first
          data = obj[section]
        else
          raise obj.pretty_inspect
        end

        unless ops.key?(section.to_s)
          err = "Error #{section} does not exist. Valid: " + ops.keys.pretty_inspect
          raise err
        end

        ops_tree = ops[section.to_s]

        section = escape_xpath_tag(section)

        case ops_tree[:obj]
        when :element
          xml.public_send(section, data)
        when :array
          xml.public_send(section) do
            data.each do |el|
              key = ops_tree.keys.first
              xml.public_send(escape_xpath_tag(key), el)
            end
          end
        when :sequence
          if data.nil?
            xml.send(section)
          elsif data.is_a?(Hash)
            xml.send(section)  do
              xml_builder(xml, ops_tree, data)
            end
          else # array

            if data.is_a?(Array)
              attr = data.find { |child| child.is_a?(Hash) && ops_tree[child.keys.first.to_s][:obj] == :'attr-req' }
              data.delete(attr)
            else
              attr = {}
            end

            xml.public_send(section, attr) do
              data.each do |child|
                xml_builder(xml, ops_tree, child)
              end
            end
          end
        when :union
          k, v = obj.first
          xml.send("#{k}_")  do
            xml_builder(xml, ops_tree, v)
          end
        else
          raise ops_tree[:obj].pretty_inspect
        end
        xml
      end

      def to_xml(obj)
        builder = Nokogiri::XML::Builder.new do |xml|
          xml_builder(xml, @@ops, obj)
        end
        builder.doc.root.to_xml
      end
@@ops={"schedule"=>
  {"export-report"=>
    {"report-job-id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"report-job-id", "max"=>"4294967295", "type"=>"rangedint"}},
     "file-path"=>
      {:obj=>:element,
       :attributes=>{"name"=>"file-path", "type"=>"string", "maxlen"=>"256"}},
     "get-all"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"get-all",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"16"}},
     "export-format"=>
      {:obj=>:element, :attributes=>{"name"=>"export-format", "type"=>"enum"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"export-report",
       "handler"=>"gen_exp_handler",
       "internal"=>"yes"}},
   "uar-report"=>
    {"user"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"user",
         "type"=>"string",
         "regex"=>"^[^;|`<>[:cntrl:]]+$",
         "optional"=>"yes",
         "maxlen"=>"64"}},
     "user-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"user-group",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "optional"=>"yes",
         "maxlen"=>"64"}},
     "dyn-user-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"dyn-user-group",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "optional"=>"yes",
         "maxlen"=>"64"}},
     "skip-detailed-browsing"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"skip-detailed-browsing", "optional"=>"yes", "type"=>"bool"}},
     "title"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"title",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"100"}},
     "filter"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"filter",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>".*",
         "maxlen"=>"2048"}},
     "period"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"period",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^[a-zA-Z0-9-]+$",
         "maxlen"=>"32"}},
     "start-time"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"start-time",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"32"}},
     "end-time"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"end-time",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"32"}},
     "vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys", "optional"=>"yes", "type"=>"string", "maxlen"=>"32"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"uar-report", "handler"=>"gen_uar_handler"}},
   "saas-applications-usage-report"=>
    {"skip-detailed-report"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"skip-detailed-report", "optional"=>"yes", "type"=>"bool"}},
     "period"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"period",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"32"}},
     "vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys", "optional"=>"yes", "type"=>"string", "maxlen"=>"32"}},
     "limit-max-subcat"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"limit-max-subcat",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"32"}},
     "all"=>
      {"entry"=>
        {"include-user-groups-info"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"include-user-groups-info",
             "optional"=>"yes",
             "type"=>"bool",
             "default"=>"no"}},
         "user-groups"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "optional"=>"yes",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"user-groups", "max-count"=>"25"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"all"}},
     "selected-zone"=>
      {"entry"=>
        {"include-user-groups-info"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"include-user-groups-info",
             "optional"=>"yes",
             "type"=>"bool",
             "default"=>"no"}},
         "user-groups"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "optional"=>"yes",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"user-groups", "max-count"=>"25"}},
         "zone"=>
          {:obj=>:element,
           :attributes=>{"name"=>"zone", "type"=>"string", "maxlen"=>"31"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"selected-zone"}},
     "selected-user-group"=>
      {"entry"=>
        {"user-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"user-group",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"63"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"selected-user-group"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"saas-applications-usage-report",
       "handler"=>"gen_saas_report_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"schedule",
     "target"=>"mgmt",
     "help-string"=>"schedule test jobs",
     "prune-on-sdb"=>"cfg.general.feature.disabled['reportd']"}},
 "monitoring"=>
  {"external-input"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     "data"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"data",
         "type"=>"string",
         "help-string"=>"Monitoring data",
         "minlen"=>"0",
         "maxlen"=>"200000",
         "regex"=>"^.*$"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"external-input",
       "target"=>"mgmt",
       "handler"=>"input_external_monitoring_info",
       "help-string"=>"Input external monitoring info"}},
   "cfg-send"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"cfg-send",
       "target"=>"mgmt",
       "handler"=>"send_monitoring_cfg_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"monitoring",
     "target"=>"mgmt",
     "help-string"=>"Device Monitoring Operations"}},
 "clear"=>
  {"audit-comment"=>
    {"xpath"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"xpath",
         "type"=>"string",
         "regex"=>".*",
         "maxlen"=>"1024",
         "help-string"=>"xpath of the node"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"audit-comment",
       "target"=>"mgmt",
       "handler"=>"clear_audit_comment_handler",
       "help-string"=>"Clear audit comment for an xpath"}},
   "policy-app-usage-data"=>
    {"ruleuuid"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"ruleuuid",
         "type"=>"string",
         "maxlen"=>"64",
         "target"=>"mgmt",
         "help-string"=>"rule-uuid"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"policy-app-usage-data",
       "target"=>"mgmt",
       "handler"=>"clear_policy_app_usage_data",
       "help-string"=>"Clear Policy App Usage Data"}},
   "rule-hit-count"=>
    {"device-group"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"device-group name"}},
         "rulebase"=>
          {"entry"=>
            {"name"=>
              {nil=>
                {:obj=>:enum,
                 :attributes=>
                  {"value"=>"sdwan", "help-string"=>"sdwan policy"}},
               :obj=>:"attr-req",
               :attributes=>{"name"=>"name", "type"=>"enum"}},
             "rules"=>
              {"all"=>
                {"device"=>
                  {"entry"=>
                    {"name"=>
                      {:obj=>:"attr-req",
                       :attributes=>
                        {"name"=>"name",
                         "type"=>"string",
                         "help-string"=>"device name"}},
                     "vsys"=>
                      {"all"=>
                        {:obj=>:sequence,
                         :attributes=>
                          {"name"=>"all", "help-string"=>"all vsys"}},
                       "list"=>
                        {"member"=>
                          {:obj=>:element,
                           :attributes=>
                            {"name"=>"member",
                             "type"=>"string",
                             "help-string"=>"vsys name"}},
                         :obj=>:array,
                         :attributes=>{"name"=>"list", "optional"=>"yes"}},
                       :obj=>:union,
                       :attributes=>{"name"=>"vsys", "help-string"=>"vsys"}},
                     :obj=>:sequence,
                     :attributes=>{"name"=>"entry"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"device", "help-string"=>"devices"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"all",
                   "hidden"=>"yes",
                   "help-string"=>"all rules"}},
               "list"=>
                {"entry"=>
                  {"member"=>
                    {:obj=>:element,
                     :attributes=>
                      {"name"=>"member",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:array,
                   :attributes=>
                    {"name"=>"entry", "help-string"=>"rule names"}},
                 "device"=>
                  {"entry"=>
                    {"name"=>
                      {:obj=>:"attr-req",
                       :attributes=>
                        {"name"=>"name",
                         "type"=>"string",
                         "help-string"=>"device name"}},
                     "vsys"=>
                      {"all"=>
                        {:obj=>:sequence,
                         :attributes=>
                          {"name"=>"all", "help-string"=>"all vsys"}},
                       "list"=>
                        {"member"=>
                          {:obj=>:element,
                           :attributes=>
                            {"name"=>"member",
                             "type"=>"string",
                             "help-string"=>"vsys name"}},
                         :obj=>:array,
                         :attributes=>{"name"=>"list", "optional"=>"yes"}},
                       :obj=>:union,
                       :attributes=>{"name"=>"vsys", "help-string"=>"vsys"}},
                     :obj=>:sequence,
                     :attributes=>{"name"=>"entry"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"device", "help-string"=>"devices"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"list",
                   "hidden"=>"yes",
                   "help-string"=>"list of rules"}},
               "rule-name"=>
                {"entry"=>
                  {"name"=>
                    {:obj=>:"attr-req",
                     :attributes=>
                      {"name"=>"name",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   "device"=>
                    {"entry"=>
                      {"name"=>
                        {:obj=>:"attr-req",
                         :attributes=>
                          {"name"=>"name",
                           "type"=>"string",
                           "help-string"=>"device serial"}},
                       "vsys"=>
                        {"all"=>
                          {:obj=>:sequence,
                           :attributes=>
                            {"name"=>"all",
                             "hidden"=>"yes",
                             "help-string"=>"all vsys"}},
                         "list"=>
                          {"member"=>
                            {:obj=>:element,
                             :attributes=>
                              {"name"=>"member",
                               "type"=>"string",
                               "help-string"=>"vsys name"}},
                           :obj=>:array,
                           :attributes=>{"name"=>"list", "optional"=>"yes"}},
                         :obj=>:union,
                         :attributes=>{"name"=>"vsys", "help-string"=>"vsys"}},
                       :obj=>:sequence,
                       :attributes=>{"name"=>"entry"}},
                     :obj=>:sequence,
                     :attributes=>
                      {"name"=>"device", "help-string"=>"devices"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"entry"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"rule-name", "help-string"=>"rule name"}},
               :obj=>:union,
               :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"rulebase", "help-string"=>"rulebase name"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"device-group",
         "help-string"=>"device-group",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"rule-hit-count",
       "target"=>"mgmt",
       "skip-validation"=>"yes",
       "handler"=>"clear_rule_hit_handler",
       "help-string"=>"Clear policy rule hit-count information"}},
   "plugins"=>
    {:obj=>:union,
     :attributes=>
      {"name"=>"plugins",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Clear plugin related data"}},
   "job"=>
    {"id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"id",
         "type"=>"rangedint",
         "max"=>"4294967295",
         "handler"=>"clear_job"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"job", "target"=>"mgmt", "help-string"=>"Download jobs"}},
   "query"=>
    {"all-by-session"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all-by-session",
         "help-string"=>"All queries for this session",
         "handler"=>"clear_session_queries"}},
     "id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"id",
         "type"=>"rangedint",
         "max"=>"4294967295",
         "handler"=>"clear_query"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"query", "target"=>"mgmt", "help-string"=>"Show query jobs"}},
   "report"=>
    {"all-by-session"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all-by-session",
         "help-string"=>"All reports for this session",
         "handler"=>"clear_session_reports"}},
     "cache"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"cache",
         "help-string"=>"All reports cache",
         "handler"=>"clear_report_cache"}},
     "id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"id",
         "type"=>"rangedint",
         "max"=>"4294967295",
         "handler"=>"clear_report"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"report", "target"=>"mgmt", "help-string"=>"report jobs"}},
   "reportd"=>
    {"logging-service"=>
      {"jobs"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"jobs",
           "help-string"=>"All logging-service jobs",
           "handler"=>"clear_logging_service_jobs"}},
       "stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"stats",
           "help-string"=>"All logging-service stats",
           "handler"=>"clear_logging_service_jobs"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"logging-service", "help-string"=>"logging-service related"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"reportd",
       "target"=>"mgmt",
       "help-string"=>"clear reportd jobs or stats"}},
   "log"=>
    {"traffic"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"traffic",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_traffic_handler",
         "help-string"=>"Traffic logs",
         "confirm"=>
          "All traffic logs will be deleted. Do you want to continue?"}},
     "threat"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"threat",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_threat_handler",
         "help-string"=>"Threat logs",
         "confirm"=>
          "All threat logs will be deleted. Do you want to continue?"}},
     "gtp"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"gtp",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_gtp_handler",
         "help-string"=>"Tunnel and GTP logs",
         "confirm"=>
          "All Tunnel and GTP logs will be deleted. Do you want to continue?"}},
     "decryption"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"decryption",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_decryption_handler",
         "help-string"=>"Decryption logs",
         "confirm"=>
          "All decryption logs will be deleted. Do you want to continue?"}},
     "sctp"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"sctp",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_sctp_handler",
         "help-string"=>"SCTP logs",
         "confirm"=>
          "All SCTP logs will be deleted. Do you want to continue?"}},
     "userid"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"userid",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_userid_handler",
         "help-string"=>"User-ID logs",
         "confirm"=>
          "All User-ID logs will be deleted. Do you want to continue?"}},
     "auth"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"auth",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_auth_handler",
         "help-string"=>"Authentication logs",
         "confirm"=>
          "All Authentication logs will be deleted. Do you want to continue?"}},
     "globalprotect"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"globalprotect",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "prune-on-sdb"=>"cfg.cms.mode=panorama",
         "handler"=>"clear_log_globalprotect_handler",
         "help-string"=>"Globalprotect logs",
         "confirm"=>
          "All Globalprotect logs will be deleted. Do you want to continue?"}},
     "config"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"config",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "handler"=>"clear_log_config_handler",
         "help-string"=>"Configuration logs",
         "confirm"=>
          "All config logs will be deleted. Do you want to continue?"}},
     "system"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"system",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "handler"=>"clear_log_system_handler",
         "help-string"=>"System logs",
         "confirm"=>
          "All system logs will be deleted. Do you want to continue?"}},
     "alarm"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"alarm",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "handler"=>"clear_log_alarm_handler",
         "help-string"=>"Alarm logs",
         "confirm"=>
          "All alarm logs will be deleted. Do you want to continue?"}},
     "acc"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"acc",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "handler"=>"clear_log_appstat_handler",
         "help-string"=>"ACC database",
         "confirm"=>"ACC database will be removed. Do you want to continue?"}},
     "hipmatch"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"hipmatch",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "handler"=>"clear_log_hipmatch_handler",
         "help-string"=>"Hipmatch logs",
         "confirm"=>
          "All hipmatch logs will be deleted. Do you want to continue?"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log",
       "roles"=>"superuser",
       "target"=>"mgmt",
       "help-string"=>"Remove logs on disk"}},
   "high-availability"=>
    {"control-link"=>
      {"statistics"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "target"=>"mgmt",
           "handler"=>"ha_clear_control_link_stats",
           "help-string"=>"Clear control link statistics"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"control-link",
         "help-string"=>"Clear high-availability control-link information"}},
     "transitions"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"transitions",
         "help-string"=>"Clear high-availability transition statistics",
         "target"=>"mgmt",
         "handler"=>"ha_clear_transition_stats"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"high-availability",
       "roles"=>"superuser",
       "help-string"=>"Clear high-availability statistics"}},
   "log-collector"=>
    {"stats"=>
      {"runtime"=>
        {"segment"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"segment",
             "type"=>"string",
             "help-string"=>"segment id. one of all or 0-255"}},
         "ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         "active-segments"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"active-segments",
             "optional"=>"yes",
             "default"=>"yes",
             "type"=>"bool",
             "help-string"=>"Only display active segments"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"runtime",
           "target"=>"mgmt",
           "handler"=>"reset_vld_rstat_handler",
           "help-string"=>"Reset runtime statistics"}},
       "searchengine"=>
        {"ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"searchengine",
           "target"=>"mgmt",
           "handler"=>"reset_vld_es_stat_handler",
           "help-string"=>"Reset runtime statistics"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"stats", "help-string"=>"Log collector statistics"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-collector",
       "roles"=>"superuser",
       "target"=>"mgmt",
       "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
       "help-string"=>"Clear Log collector stats"}},
   "user-cache-mp"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "help-string"=>"Clear all ip to user cache in management plane"}},
     "ip"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"ip",
         "type"=>"ipspec",
         "help-string"=>
          "Clear the specified ip to user cache in management plane"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"user-cache-mp",
       "needvsys"=>"yes",
       "help-string"=>"Clear management plane user cache",
       "target"=>"useridd",
       "handler"=>"clear_mp_user"}},
   "auto-tag"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "type"=>"string",
         "maxlen"=>"32",
         "help-string"=>"vsys",
         "optional"=>"yes"}},
     "user"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"user",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "help-string"=>"User name"}},
     "users"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$"}},
       :obj=>:array,
       :attributes=>{"name"=>"users", "help-string"=>"User list"}},
     "tag-dest"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "maxlen"=>"31",
             "subtype"=>"object-name",
             "help-string"=>"alphanumeric string"}},
         "registration"=>
          {"localhost"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"localhost", "help-string"=>"Local"}},
           "panorama"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"panorama", "help-string"=>"Panorama User-ID Agent"}},
           "remote"=>
            {"http-profile"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"http-profile",
                 "type"=>"string",
                 "complete-handler"=>"autotag_destination_complete_handler",
                 "help-string"=>"HTTP profile name"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"remote",
               "help-string"=>"Remote device User-ID Agent"}},
           :obj=>:union,
           :attributes=>{"name"=>"registration"}},
         "tags"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "minlen"=>"1",
               "maxlen"=>"127",
               "regex"=>"^[^]'[]*$",
               "help-string"=>"Tag name"}},
           :obj=>:array,
           :attributes=>{"name"=>"tags"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"tag-dest", "help-string"=>"Tags on each destination"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"auto-tag",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"delete_autotag",
       "help-string"=>"delete user/tag mapping"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"clear",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "target"=>"mgmt",
     "help-string"=>"Clear data"}},
 "target"=>
  {"show"=>
    {:obj=>:sequence,
     :attributes=>{"name"=>"show", "handler"=>"show_session_target"}},
   "set"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"set",
       "type"=>"string",
       "handler"=>"set_session_target",
       "complete-handler"=>"target_complete",
       "help-string"=>"target device",
       "cli-handler"=>"target-set-handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"target",
     "target"=>"mgmt",
     "internal"=>"yes",
     "help-string"=>"management session target"}},
 "commit-all"=>
  {"log-collector-config"=>
    {"log-collector-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector-group",
         "type"=>"string",
         "help-string"=>"log collector group name",
         "complete-handler"=>
          "$config/devices/entry/log-collector-group/entry/@name"}},
     "description"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"description",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"512",
         "help-string"=>"Enter commit description"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-collector-config", "handler"=>"push_collector_config"}},
   "wildfire-appliance-config"=>
    {"wildfire-appliance"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"wildfire-appliance",
         "type"=>"string",
         "help-string"=>"wildfire appliance name",
         "handler"=>"push_wildfire_appliance_config",
         "complete-handler"=>"wf_appliance_standalone_complete_handler"}},
     "wildfire-appliance-cluster"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"wildfire-appliance-cluster",
         "type"=>"string",
         "help-string"=>"wildfire appliance cluster name",
         "handler"=>"push_wildfire_appliance_cluster_config",
         "complete-handler"=>
          "$config/devices/entry/wildfire-appliance-cluster/entry/@name"}},
     "description"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"description",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"512",
         "help-string"=>"Enter commit description"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"wildfire-appliance-config"}},
   "shared-policy"=>
    {"device-group"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "subtype"=>"object-name",
             "maxlen"=>"64",
             "help-string"=>"Device group name"}},
         "devices"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "subtype"=>"object-name",
                 "maxlen"=>"64",
                 "help-string"=>"Device serial no"}},
             "vsys"=>
              {"member"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"member",
                   "type"=>"string",
                   "maxlen"=>"63",
                   "help-string"=>"vsys name"}},
               :obj=>:array,
               :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"list of devices",
             "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"device-group",
         "help-string"=>"device group name",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Merge with candidate configuration"}},
     "include-template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"include-template",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Include relevant template"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "validate-only"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validate-only",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Validate changes on selected devices with committed configuration"}},
     "validate-partial"=>
      {"partial"=>
        {"admin"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
         "shared-object"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
         "device-and-network"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
         "shared-object-write"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object-write",
             "internal"=>"yes",
             "type"=>"enum",
             "optional"=>"yes"}},
         "no-device-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
         "device-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
         "no-template"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
         "template"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template", "optional"=>"yes"}},
         "no-template-stack"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
         "template-stack"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
         "no-log-collector"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
         "log-collector"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
         "no-log-collector-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
         "log-collector-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
         "no-wildfire-appliance"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
         "wildfire-appliance"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
         "no-wildfire-appliance-cluster"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
         "wildfire-appliance-cluster"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"partial", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"validate-partial",
         "optional"=>"yes",
         "help-string"=>
          "Validate changes on selected devices with the candidate configuration and partial params"}},
     "description"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"description",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"512",
         "help-string"=>"Enter commit description"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"shared-policy",
       "handler"=>"push_shared_policy",
       "optional"=>"yes"}},
   "template"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template name",
         "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "validate-only"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validate-only",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Validate changes on selected devices with committed configuration"}},
     "validate-partial"=>
      {"partial"=>
        {"admin"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
         "shared-object"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
         "device-and-network"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
         "shared-object-write"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object-write",
             "internal"=>"yes",
             "type"=>"enum",
             "optional"=>"yes"}},
         "no-device-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
         "device-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
         "no-template"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
         "template"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template", "optional"=>"yes"}},
         "no-template-stack"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
         "template-stack"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
         "no-log-collector"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
         "log-collector"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
         "no-log-collector-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
         "log-collector-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
         "no-wildfire-appliance"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
         "wildfire-appliance"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
         "no-wildfire-appliance-cluster"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
         "wildfire-appliance-cluster"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"partial", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"validate-partial",
         "optional"=>"yes",
         "help-string"=>
          "Validate changes on selected devices with the candidate configuration and partial params"}},
     "description"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"description",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"512",
         "help-string"=>"Enter commit description"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template", "handler"=>"push_template", "optional"=>"yes"}},
   "template-stack"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template name",
         "complete-handler"=>
          "$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "validate-only"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validate-only",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Validate changes on selected devices with committed configuration"}},
     "validate-partial"=>
      {"partial"=>
        {"admin"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
         "shared-object"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
         "device-and-network"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
         "shared-object-write"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"shared-object-write",
             "internal"=>"yes",
             "type"=>"enum",
             "optional"=>"yes"}},
         "no-device-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
         "device-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
         "no-template"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
         "template"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template", "optional"=>"yes"}},
         "no-template-stack"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
         "template-stack"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
         "no-log-collector"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
         "log-collector"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
         "no-log-collector-group"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
         "log-collector-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
         "no-wildfire-appliance"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
         "wildfire-appliance"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
         "no-wildfire-appliance-cluster"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
         "wildfire-appliance-cluster"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"partial", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"validate-partial",
         "optional"=>"yes",
         "help-string"=>
          "Validate changes on selected devices with the candidate configuration and partial params"}},
     "description"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"description",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"512",
         "help-string"=>"Enter commit description"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template-stack",
       "handler"=>"push_template",
       "optional"=>"yes"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"commit-all",
     "roles"=>"superuser,deviceadmin,panorama-admin,vsysadmin",
     "target"=>"mgmt",
     "help-string"=>"Shared policy commit operations"}},
 "diff-all-partial"=>
  {"partial"=>
    {"admin"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
     "shared-object"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
     "device-and-network"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
     "shared-object-write"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object-write",
         "internal"=>"yes",
         "type"=>"enum",
         "optional"=>"yes"}},
     "no-device-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
     "device-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
     "no-template"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
     "template"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template", "optional"=>"yes"}},
     "no-template-stack"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
     "template-stack"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
     "no-log-collector"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
     "log-collector"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
     "no-log-collector-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
     "log-collector-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
     "no-wildfire-appliance"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
     "wildfire-appliance"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
     "no-wildfire-appliance-cluster"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
     "wildfire-appliance-cluster"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"partial", "optional"=>"yes"}},
   "shared-policy"=>
    {"device-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-group",
         "type"=>"string",
         "help-string"=>"device group name",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"device name"}},
     "vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"vsys name"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Merge with candidate configuration"}},
     "include-template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"include-template",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Include relevant template"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"shared-policy", "handler"=>"diff_all_partial_shared_policy"}},
   "template"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template name",
         "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template", "handler"=>"diff_all_partial_template"}},
   "template-stack"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template stack name",
         "complete-handler"=>
          "$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template-stack", "handler"=>"diff_all_partial_template"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"diff-all-partial",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>"Shared policy and device configuration diffs"}},
 "merged-config-diff"=>
  {"device"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"device",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"device name"}},
   "num-context-lines"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"num-context-lines",
       "type"=>"enum",
       "default"=>"5",
       "help-string"=>"number of lines of context in the diff"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"merged-config-diff",
     "handler"=>"merged_config_diff",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>
      "View diff between previous and current merged config on device"}},
 "diff-all"=>
  {"shared-policy"=>
    {"device-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-group",
         "type"=>"string",
         "help-string"=>"device group name",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"device name"}},
     "vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"vsys name"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Merge with candidate configuration"}},
     "include-template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"include-template",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>"Include relevant template"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"shared-policy",
       "handler"=>"diff_all_shared_policy",
       "optional"=>"yes"}},
   "template"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template name",
         "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template", "handler"=>"diff_all_template", "optional"=>"yes"}},
   "template-stack"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"template stack name",
         "complete-handler"=>
          "$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"device name"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "optional"=>"yes"}},
     "merge-with-candidate-cfg"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"merge-with-candidate-cfg",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Merge with device candidate configuration"}},
     "force-template-values"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"force-template-values",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>
          "Force template values by removing overridden objects on device"}},
     "num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "help-string"=>"number of lines of context in the diff"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template-stack",
       "handler"=>"diff_all_template",
       "optional"=>"yes"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"diff-all",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>"Shared policy and device configuration diffs"}},
 "diff"=>
  {"config"=>
    {"num-context-lines"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"num-context-lines",
         "type"=>"enum",
         "default"=>"5",
         "optional"=>"yes",
         "help-string"=>"number of lines of context in the diff"}},
     "partial"=>
      {"admin"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
       "shared-object"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
       "device-and-network"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
       "shared-object-write"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object-write",
           "internal"=>"yes",
           "type"=>"enum",
           "optional"=>"yes"}},
       "no-device-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "no-template"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "no-template-stack"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "no-log-collector"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
       "log-collector"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
       "no-log-collector-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
       "log-collector-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
       "no-wildfire-appliance"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
       "wildfire-appliance"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
       "no-wildfire-appliance-cluster"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
       "wildfire-appliance-cluster"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"partial", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"config",
       "handler"=>"diff_config_handler",
       "help-string"=>"running config vs candidate config diff"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"diff",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>"local configuration diffs"}},
 "delete"=>
  {"hip-report"=>
    {"all"=>
      {"logout-only"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"logout-only",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"Only delete the ones that are logged out"}},
       "expired-days"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"expired-days",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"365",
           "help-string"=>
            "Only delete the ones that expired that many days ago"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "handler"=>"delete_all_hip_report",
         "help-string"=>"Delete all hip-reports"}},
     "report"=>
      {"user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"1023",
           "complete-handler"=>"hip_report_user_complete_handler"}},
       "ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "complete-handler"=>"hip_report_ip_complete_handler"}},
       "computer"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"computer",
           "type"=>"string",
           "maxlen"=>"255",
           "regex"=>"^.+$",
           "complete-handler"=>"hip_report_computer_complete_handler"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"report", "handler"=>"delete_hip_report"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"hip-report",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "help-string"=>"Delete hip-reports in disk"}},
   "hip-profile-database"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"all", "handler"=>"delete_hip_db_all"}},
     "check-delete-all-status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"check-delete-all-status",
         "handler"=>"check_delete_hip_db_all"}},
     "entry"=>
      {"ip"=>{:obj=>:element, :attributes=>{"name"=>"ip", "type"=>"ipspec"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"entry", "handler"=>"delete_hip_db"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"hip-profile-database",
       "target"=>"useridd",
       "help-string"=>"Delete hip profile database"}},
   "plugins"=>
    {"app-data"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"app-data",
         "type"=>"string",
         "confirm"=>"Are you sure to delete all app data for the plugin?",
         "complete-handler"=>"get-plugin-app-data-completer",
         "handler"=>"delete-plugin-app-data-handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"plugins",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Delete plugin related data"}},
   "user-file"=>
    {"ssh-known-hosts"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"ssh-known-hosts",
         "help-string"=>"Delete ssh known-hosts file",
         "cli-handler"=>"delete-ssh-known-hosts-handler"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"user-file",
       "target"=>"cli",
       "help-string"=>"Delete user account settings"}},
   "user-group-cache"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"user-group-cache",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "help-string"=>"Delete user group cache files in disk",
       "handler"=>"delete_user_group_cache"}},
   "report"=>
    {"predefined"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {nil=>{:obj=>:enum, :attributes=>{"value"=>"shared"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"string",
                   "regex"=>"^[\\*0-9a-zA-Z]{1}([\\*0-9a-zA-Z_-]|[ ]|[.])*$",
                   "maxlen"=>"64",
                   "complete-handler"=>
                    "download_report_file_complete_handler"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>"download_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"predefined", "handler"=>"delete_report_handler"}},
     "custom"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {nil=>{:obj=>:enum, :attributes=>{"value"=>"shared"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"string",
                   "regex"=>"^[\\*0-9a-zA-Z]{1}([\\*0-9a-zA-Z_-]|[ ]|[.])*$",
                   "maxlen"=>"64",
                   "complete-handler"=>
                    "download_custom_report_file_complete_handler"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>
                "download_custom_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"custom", "handler"=>"delete_custom_report_handler"}},
     "summary"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {nil=>{:obj=>:enum, :attributes=>{"value"=>"shared"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"string",
                   "regex"=>"^[\\*0-9a-zA-Z]{1}([\\*0-9a-zA-Z_-]|[ ]|[.])*$",
                   "maxlen"=>"64",
                   "complete-handler"=>
                    "download_summary_report_file_complete_handler"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>
                "download_summary_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"summary", "handler"=>"delete_summary_report_handler"}},
     :obj=>:union,
     :attributes=>{"name"=>"report", "handler"=>"delete_report_handler"}},
   "admin-sessions"=>
    {"username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"255",
         "help-string"=>"Admin user name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"admin-sessions",
       "help-string"=>"Delete all active administrative sessions",
       "handler"=>"delete_admin_sessions"}},
   "policy-cache"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"policy-cache",
       "help-string"=>"Remove cached compilation of policy from disk",
       "handler"=>"delete_policy_cache_handler",
       "confirm"=>
        "Removing policy cache can increase the time for the next successful completion of a policy commit. Do you want to continue?"}},
   "config"=>
    {"saved"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"saved",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_config_complete_handler",
         "help-string"=>"Filename"}},
     "repo"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "complete-handler"=>"$config/mgt-config/devices/entry/@name",
           "help-string"=>"device name"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
           "complete-handler"=>"show_config_repo_file_complete_handler",
           "handler"=>"delete_config_repo_file_handler",
           "help-string"=>"Named snapshot"}},
       "running-config"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"running-config",
           "handler"=>"delete_config_repo_versions_handler",
           "help-string"=>"Versioned running config"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"repo", "help-string"=>"Config repository"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"config",
       "help-string"=>"Remove configuration on disk",
       "handler"=>"delete_config_handler"}},
   "pprof"=>
    {"management-plane"=>
      {"file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
           "complete-handler"=>"delete_cplane_pprof_files_complete_handler",
           "help-string"=>"Filename"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"management-plane",
         "help-string"=>"Management plane pprof",
         "handler"=>"delete_cplane_pprof_files_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"pprof", "help-string"=>"Remove pprof files on disk"}},
   "software"=>
    {"version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"version",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_software_version_complete_handler",
         "handler"=>"delete_software_version_handler",
         "help-string"=>"Version"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"software",
       "help-string"=>"Remove software images on disk",
       "handler"=>"delete_software_handler"}},
   "license"=>
    {"key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"key",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_license_complete_handler",
         "help-string"=>"File name"}},
     "token-file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"token-file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]+$",
         "handler"=>"delete_license_token_file_handler",
         "complete-handler"=>"delete_license_token_file_complete_handler",
         "help-string"=>"File name"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"license",
       "help-string"=>"Remove license keys on disk",
       "handler"=>"delete_license_handler"}},
   "content"=>
    {"update"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"update",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_content_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"content",
       "help-string"=>"Remove content updates on disk",
       "handler"=>"delete_content_handler"}},
   "anti-virus"=>
    {"update"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"update",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_av_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"anti-virus",
       "help-string"=>"Remove anti-virus updates on disk",
       "handler"=>"delete_av_handler"}},
   "wildfire"=>
    {"update"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"update",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_wildfire_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"wildfire",
       "help-string"=>"Remove wildfire updates on disk",
       "handler"=>"delete_wildfire_handler"}},
   "wf-private"=>
    {"update"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"update",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"delete_wildfire_private_cloud_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"wf-private",
       "help-string"=>"Remove wildfire private updates on disk",
       "handler"=>"delete_wildfire_private_cloud_handler"}},
   "core"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"delete_cplane_corefiles_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"core",
       "help-string"=>"Remove core files on disk",
       "handler"=>"delete_cplane_corefiles_handler"}},
   "core-large"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"delete_large_corefiles_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"core-large",
       "help-string"=>"Remove core files saved on logdb",
       "handler"=>"delete_large_corefiles_handler"}},
   "pcap"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"delete_pcap_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"pcap",
       "help-string"=>"Remove packet capture files",
       "handler"=>"delete_pcap_handler"}},
   "unknown-pcap"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"delete_unknown_pcap_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"unknown-pcap",
       "help-string"=>"Remove packet capture files for unknown sessions",
       "handler"=>"delete_unknown_pcap_handler"}},
   "debug-filter"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"delete_debug_filter_complete_handler",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"debug-filter",
       "help-string"=>"Remove debug packet capture files on disk",
       "handler"=>"delete_debug_filter_handler"}},
   "logo"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"logo",
       "help-string"=>"Remove custom logo file",
       "handler"=>"delete_logo_handler"}},
   "high-availability-key"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"high-availability-key",
       "help-string"=>"Remove high-availability peer encryption key",
       "handler"=>"delete_high_availability_key_handler"}},
   "high-availability-known-hosts"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"high-availability-known-hosts",
       "help-string"=>
        "Remove high-availability peer key entry from known hosts file",
       "handler"=>"delete_high_availability_known_hosts_handler"}},
   "ssh-authentication-public-key"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"ssh-authentication-public-key",
       "taget"=>"mgmt",
       "handler"=>"delete_ssh_authentication_handler",
       "help-string"=>"delete ssh-authentication public key"}},
   "migration-log"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"migration-log",
       "taget"=>"mgmt",
       "handler"=>"delete_migration_log_handler",
       "help-string"=>"delete log file created during migration"}},
   "dlsrvr"=>
    {"poll-interval"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"poll-interval",
         "help-string"=>"Use the default polling interval of download jobs",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -e -n -N cfg.dlsrvr.pollint=None"}},
     "server"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"server",
         "help-string"=>
          "Remove the overridden server address used for deployment",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -e -n -N cfg.dlsrvr.server=None"}},
     "distribute"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"distribute",
         "help-string"=>"Remove Deployment across HA setting",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -e -n -N cfg.dlsrvr.distribute=None"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"dlsrvr",
       "target"=>"mgmt",
       "help-string"=>"Remove DLSRVR settings"}},
   "auth"=>
    {"strict-username-check"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"strict-username-check",
         "help-string"=>"clear the strict-username-check flag",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb -e -n -N cfg.auth.strict_check=None >/dev/null"}},
     :obj=>:union,
     :attributes=>{"name"=>"auth"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"delete",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "target"=>"mgmt",
     "help-string"=>"Remove files from hard disk"}},
 "show"=>
  {"container"=>
    {"dp-info"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "max-length"=>"63",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "dp"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "help-string"=>"dps to show"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"dp",
           "help-string"=>"Show only these dps",
           "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dp-info",
         "help-string"=>"Show dp information for containers",
         "handler"=>"show_container_dp_info_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"container",
       "target"=>"mgmt",
       "help-string"=>"Show container information"}},
   "monitoring"=>
    {"sdwan-info"=>
      {"link"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "from-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "to-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "link"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"link", "type"=>"string", "help-string"=>"link name"}},
         "metric"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"metric",
             "type"=>"enum",
             "help-string"=>"time trended metric"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"link",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_sdwan_link",
           "help-string"=>"Show time trended information for a given link"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"sdwan-info",
         "target"=>"mgmt",
         "help-string"=>"Show device specific monitoring information"}},
     "units"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"units", "handler"=>"show_monitoring_units"}},
     "health"=>
      {"devices"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"devices",
           "optional"=>"yes",
           "help"=>"show monitored devices"}},
       "is-single-slot-dp"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"is-single-slot-dp", "optional"=>"yes"}},
       "deviating"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"deviating",
           "optional"=>"yes",
           "help"=>"show deviating devices"}},
       "avg-over"=>
        {:obj=>:element,
         :attributes=>{"name"=>"avg-over", "type"=>"enum", "optional"=>"yes"}},
       "device"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>{"name"=>"all", "help-string"=>"all devices"}},
         "list"=>
          {"devices"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "help-string"=>"device name"}},
             :obj=>:array,
             :attributes=>{"name"=>"devices", "help-string"=>"device name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"list",
             "hidden"=>"yes",
             "help-string"=>"list of devices"}},
         :obj=>:union,
         :attributes=>{"name"=>"device", "help-string"=>"rules"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"health", "handler"=>"show_monitoring_health_all"}},
     "info"=>
      {"dp-heatmap"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "metric"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"metric",
             "type"=>"enum",
             "help-string"=>"time trended metric"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dp-heatmap",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_dp_heatmap",
           "help-string"=>"Show dp heatmap for the device"}},
       "trend"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "from-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "to-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "metric"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"metric",
             "type"=>"enum",
             "help-string"=>"time trended metric"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"trend",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_trend",
           "help-string"=>"Show time trended information for device"}},
       "interface"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "from-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "to-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "interface"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"interface",
             "type"=>"string",
             "help-string"=>"device interface"}},
         "metric"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"metric",
             "type"=>"enum",
             "help-string"=>"time trended metric"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"interface",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_interface",
           "help-string"=>
            "Show time trended information for device interface"}},
       "dp-status"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "from-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "to-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "slot"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"slot",
             "type"=>"string",
             "maxlen"=>"3",
             "help-string"=>"disk-array",
             "complete-handler"=>"device_slots_completer"}},
         "dp"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dp",
             "type"=>"string",
             "optional"=>"yes",
             "help-string"=>"DP",
             "complete-handler"=>"device_slot_dp_completer"}},
         "metric"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"metric",
             "type"=>"enum",
             "help-string"=>"time trended metric"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dp-status",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_dp_status",
           "help-string"=>
            "Show time trended information for dp specific things"}},
       "environmentals"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"environmentals",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_environmentals",
           "help-string"=>"Show environmental information"}},
       "cluster"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"cluster",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_cluster_stats",
           "help-string"=>"Show device cluster stats"}},
       "high-availability"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"high-availability",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_high_availability",
           "help-string"=>"Show device high availability stats"}},
       "interfaces"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"interfaces",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_interfaces",
           "help-string"=>"Show device interfaces"}},
       "logging-external"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"logging-external",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_logging_external",
           "help-string"=>
            "Show device logging connections and external logging"}},
       "events"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         "from-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "to-time"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-time",
             "type"=>"string",
             "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
             "regex"=>
              "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         "type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type",
             "type"=>"string",
             "help-string"=>"Filter by event type",
             "optional"=>"yes",
             "regex"=>"[a-zA-Z,]*",
             "minlen"=>"4",
             "maxlen"=>"1024"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"events",
           "target"=>"mgmt",
           "handler"=>"show_monitoring_device_events",
           "help-string"=>"Show events for a device"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"info",
         "target"=>"mgmt",
         "help-string"=>"Show device specific monitoring information"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"monitoring",
       "target"=>"mgmt",
       "help-string"=>"Show device monitoring information"}},
   "operational-mode"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"operational-mode",
       "target"=>"mgmt",
       "help-string"=>"Show device operational mode",
       "handler"=>"show_operational_mode_handler"}},
   "pcap"=>
    {"gtppcap"=>
      {"serialno"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serialno",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Device serial number"}},
       "pcapid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pcapid",
           "type"=>"string",
           "regex"=>"^[0-9]+$",
           "help-string"=>"Packet capture ID (numeric string)"}},
       "search-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time",
           "type"=>"string",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "search-time-end"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time-end",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "device_name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device_name",
           "type"=>"string",
           "help-string"=>"Device name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"gtppcap",
         "handler"=>"show_gtppcap_file",
         "help-string"=>"Show decoded gtp packet capture"}},
     "extpcap"=>
      {"serialno"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serialno",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Device serial number"}},
       "pcapid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pcapid",
           "type"=>"string",
           "regex"=>"^[0-9]+$",
           "help-string"=>"Packet capture ID (numeric string)"}},
       "search-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time",
           "type"=>"string",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "search-time-end"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time-end",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "device_name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device_name",
           "type"=>"string",
           "help-string"=>"Device name"}},
       "sessionid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"sessionid",
           "type"=>"string",
           "regex"=>"^[0-9]+$",
           "help-string"=>"Session ID (numeric string)"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"extpcap",
         "handler"=>"show_extpcap_file",
         "help-string"=>"Show decoded extended packet capture"}},
     :obj=>:union,
     :attributes=>
      {"internal"=>"yes",
       "name"=>"pcap",
       "target"=>"mgmt",
       "help-string"=>"Show decoded view of captured packets"}},
   "sp-metadata"=>
    {"management"=>
      {"authprofile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"authprofile",
           "type"=>"string",
           "help-string"=>"authentication profile",
           "complete-handler"=>
            "$$config/panorama/authentication-profile/entry[method/saml-idp]/@name"}},
       "ip-hostname"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip-hostname",
           "type"=>"string",
           "maxlen"=>"64",
           "complete-handler"=>"show_mgmt_hostname_complete_handler",
           "help-string"=>"ip or hostname with port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"management",
         "optional"=>"yes",
         "help-string"=>"Admin WebUI SAML sp metadata"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"sp-metadata",
       "target"=>"mgmt",
       "handler"=>"show_sp_metadata_handler"}},
   "license-token-files"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "optional"=>"yes",
         "help-string"=>"Show contents of license token file"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"license-token-files",
       "target"=>"mgmt",
       "handler"=>"show_license_token_files",
       "help-string"=>
        "Show license token files for manual license deactivation"}},
   "log-collector-group-preference-list"=>
    {"log-collector-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector-group",
         "type"=>"string",
         "help-string"=>"log collector group name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-collector-group-preference-list",
       "internal"=>"yes",
       "handler"=>"get_log_collector_group_preference_list"}},
   "max-num-images"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"max-num-images",
       "target"=>"mgmt",
       "handler"=>"show_max_num_images",
       "help-string"=>"Show maximum number of software or content images"}},
   "ssh-fingerprints"=>
    {"hash-type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"hash-type",
         "type"=>"enum",
         "help-string"=>"The hash type for displaying fingerprints"}},
     "format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"format",
         "type"=>"enum",
         "help-string"=>"The encoding format for displaying fingerprints"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ssh-fingerprints",
       "target"=>"dagger",
       "handler"=>"ssh_keys.print_fingerprints",
       "help-string"=>"Show management ssh public key fingerprints"}},
   "management-server"=>
    {"disable-tls1-0-status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"disable-tls1-0-status",
         "target"=>"mgmt",
         "handler"=>"show_mgmtsrvr_disable_tlsv10_handler",
         "help-string"=>
          "Check if the TLSv1.0 is disabled for management server(Default: SSL TLSv1.0 negotiation is allowed)"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"management-server",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Show management server related settings"}},
   "ssl-conn-on-cert"=>
    {"fail-all-conns"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"fail-all-conns",
         "optional"=>"yes",
         "handler"=>"show_ssl_conn_fail_on_cert_handler",
         "help-string"=>"Fail all ssl connections"}},
     "fail-syslog-conns"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"fail-syslog-conns",
         "optional"=>"yes",
         "handler"=>"show_syslog_ssl_conn_fail_on_cert_handler",
         "help-string"=>"Fail syslog connections"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"ssl-conn-on-cert",
       "roles"=>"superuser,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>
        "Show setting for failing ssl connections on non-compliant/invalid cert"}},
   "syslogng-ssl-conn-validation"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"syslogng-ssl-conn-validation",
       "target"=>"mgmt",
       "handler"=>"show_syslogng_ssl_conn_validation_handler",
       "help-string"=>"Show syslog-ng ssl connection validation settings"}},
   "device-telemetry"=>
    {"details"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"details",
         "optional"=>"yes",
         "target"=>"script",
         "handler"=>"/usr/local/bin/dt_send -o",
         "help-string"=>"Show device telemetry details"}},
     "collect-now"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"collect-now",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_device_telemetry_collect_now_handler",
         "help-string"=>"Show device telemetry collect-now status"}},
     "settings"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"settings",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_device_telemetry_settings_handler",
         "help-string"=>"Show device telemetry settings"}},
     "stats"=>
      {"all"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "target"=>"mgmt",
           "handler"=>"show_device_telemetry_stats_handler",
           "help-string"=>"Show device telemetry stats for all categories"}},
       "product-usage"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"product-usage",
           "target"=>"mgmt",
           "handler"=>"show_device_telemetry_stats_handler",
           "help-string"=>
            "Show device telemetry stats for Product Usage category"}},
       "device-health-performance"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"device-health-performance",
           "target"=>"mgmt",
           "handler"=>"show_device_telemetry_stats_handler",
           "help-string"=>
            "Show device telemetry stats for Device and Health Prevention category"}},
       "threat-prevention"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"threat-prevention",
           "target"=>"mgmt",
           "handler"=>"show_device_telemetry_stats_handler",
           "help-string"=>
            "Show device telemetry stats for Threat Prevention category"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"stats",
         "optional"=>"yes",
         "help-string"=>"Show device telemetry stats"}},
     "region-list"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"region-list",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_device_telemetry_region_list_handler",
         "help-string"=>"Show device telemetry region-list"}},
     "template-stack"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"name",
           "type"=>"string",
           "help-string"=>"name of a template stack",
           "complete-handler"=>
            "$config/devices/entry/template-stack/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"template-stack",
         "target"=>"mgmt",
         "help-string"=>"Show device telemetry setting of a template stack",
         "handler"=>"show_device_telemetry_template_stack_handler"}},
     "all-template-stacks"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all-template-stacks",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_device_telemetry_all_template_stacks_handler",
         "help-string"=>
          "Show device telemetry settings of all template stacks"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-telemetry",
       "help-string"=>"Show device telemetry settings and stats information"}},
   "migration-log"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"migration-log",
       "taget"=>"mgmt",
       "handler"=>"show_migration_log_handler",
       "help-string"=>"Show log file created during migration"}},
   "management-clients"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"management-clients",
       "target"=>"mgmt",
       "handler"=>"show_mgmt_clients",
       "help-string"=>"Show internal management server clients"}},
   "config-locks"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"config-locks",
       "target"=>"mgmt",
       "handler"=>"show_config_locks_handler",
       "help-string"=>"Show list commit locks"}},
   "commit-locks"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"commit-locks",
       "target"=>"mgmt",
       "handler"=>"show_commit_locks_handler",
       "help-string"=>"Show list of admins holding commit locks"}},
   "mgmt-uuid-info"=>
    {"uuid"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"uuid",
         "type"=>"string",
         "maxlen"=>"36",
         "help-string"=>"UUID"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"mgmt-uuid-info",
       "target"=>"mgmt",
       "internal"=>"yes",
       "handler"=>"show_mgmt_uuid_info_handler",
       "help-string"=>"Show object info for a given UUID"}},
   "mgmt-uuid"=>
    {"type"=>
      {"pre-policy"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "internal"=>"yes",
             "optional"=>"yes",
             "help-string"=>"show rule UUID for all pre-rulebase types"}},
         "security"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/security/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"security",
             "help-string"=>"show uuid for security rules",
             "optional"=>"yes"}},
         "nat"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/nat/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"nat",
             "help-string"=>"show uuid for nat rules",
             "optional"=>"yes"}},
         "qos"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/qos/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"qos",
             "help-string"=>"show uuid for qos rules",
             "optional"=>"yes"}},
         "pbf"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/pbf/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"pbf",
             "help-string"=>"show uuid for pbf rules",
             "optional"=>"yes"}},
         "decryption"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/decryption/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"decryption",
             "help-string"=>"show uuid for decryption rules",
             "optional"=>"yes"}},
         "application-override"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/application-override/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"application-override",
             "help-string"=>"show uuid for application-override rules",
             "optional"=>"yes"}},
         "authentication"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/authentication/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"authentication",
             "help-string"=>"show uuid for authentication rules",
             "optional"=>"yes"}},
         "dos"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/dos/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"dos",
             "help-string"=>"show uuid for dos rules",
             "optional"=>"yes"}},
         "tunnel-inspect"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/pre-rulebase/tunnel-inspect/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"tunnel-inspect",
             "help-string"=>"show uuid for tunnel-inspect rules",
             "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"pre-policy",
           "help-string"=>
            "show uuid for pre-rulebased Policies. Please ensure target-dg is set."}},
       "default-policy"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "internal"=>"yes",
             "optional"=>"yes",
             "help-string"=>"show rule uuid for all default-rulebase types"}},
         "default-security-rules"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$predefined/default-security-rules/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"default-security-rules",
             "help-string"=>"show uuid for default security rules",
             "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"default-policy",
           "help-string"=>"show uuid for default rulebase Policies"}},
       "post-policy"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "internal"=>"yes",
             "optional"=>"yes",
             "help-string"=>"show rule uuid for all post-rulebase types"}},
         "default-security-rules"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/default-security-rules/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"default-security-rules",
             "help-string"=>"show uuid for default security rules",
             "optional"=>"yes"}},
         "security"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/security/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"security",
             "help-string"=>"show uuid for security rules",
             "optional"=>"yes"}},
         "nat"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/nat/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"nat",
             "help-string"=>"show uuid for nat rules",
             "optional"=>"yes"}},
         "qos"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/qos/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"qos",
             "help-string"=>"show uuid for qos rules",
             "optional"=>"yes"}},
         "pbf"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/pbf/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"pbf",
             "help-string"=>"show uuid for pbf rules",
             "optional"=>"yes"}},
         "decryption"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/decryption/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"decryption",
             "help-string"=>"show uuid for decryption rules",
             "optional"=>"yes"}},
         "application-override"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/application-override/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"application-override",
             "help-string"=>"show uuid for application-override rules",
             "optional"=>"yes"}},
         "authentication"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/authentication/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"authentication",
             "help-string"=>"show uuid for authentication rules",
             "optional"=>"yes"}},
         "dos"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/dos/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"dos",
             "help-string"=>"show uuid for dos rules",
             "optional"=>"yes"}},
         "tunnel-inspect"=>
          {"rule"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"127",
                   "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"rule",
               "complete-handler"=>
                "$$shareandvsys/post-rulebase/tunnel-inspect/rules/entry/@name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"tunnel-inspect",
             "help-string"=>"show uuid for tunnel-inspect rules",
             "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"post-policy",
           "help-string"=>
            "show uuid for post-rulebased Policies. Please ensure target-dg is set."}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"type",
         "maxlen"=>"63",
         "help-string"=>"Type of object that has uuid attribute enabled"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"mgmt-uuid",
       "target"=>"mgmt",
       "internal"=>"yes",
       "handler"=>"show_mgmt_uuid_handler",
       "help-string"=>
        "Show UUID for a given object. Please ensure target-dg is set."}},
   "rule-hit-count"=>
    {"shared"=>
      {"pre-rulebase"=>
        {"entry"=>
          {"name"=>
            {nil=>
              {:obj=>:enum,
               :attributes=>{"value"=>"sdwan", "help-string"=>"sdwan policy"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "rules"=>
            {"all"=>
              {:obj=>:sequence,
               :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
             "list"=>
              {"entry"=>
                {"member"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"member",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:array,
                 :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"list", "help-string"=>"list of rules"}},
             "rule-name"=>
              {"entry"=>
                {"name"=>
                  {:obj=>:"attr-req",
                   :attributes=>
                    {"name"=>"name",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"entry"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"rule-name"}},
             :obj=>:union,
             :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"pre-rulebase", "help-string"=>"pre rules"}},
       "post-rulebase"=>
        {"entry"=>
          {"name"=>
            {nil=>
              {:obj=>:enum,
               :attributes=>{"value"=>"sdwan", "help-string"=>"sdwan policy"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "rules"=>
            {"all"=>
              {:obj=>:sequence,
               :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
             "list"=>
              {"entry"=>
                {"member"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"member",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:array,
                 :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"list",
                 "hidden"=>"yes",
                 "help-string"=>"list of rules"}},
             "rule-name"=>
              {"entry"=>
                {"name"=>
                  {:obj=>:"attr-req",
                   :attributes=>
                    {"name"=>"name",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"entry"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"rule-name"}},
             :obj=>:union,
             :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"post-rulebase", "help-string"=>"post rules"}},
       "default-rulebase"=>
        {"entry"=>
          {"name"=>
            {nil=>
              {:obj=>:enum,
               :attributes=>
                {"value"=>"security", "help-string"=>"security policy"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "rules"=>
            {"all"=>
              {:obj=>:sequence,
               :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
             "list"=>
              {"entry"=>
                {"member"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"member",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:array,
                 :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"list",
                 "hidden"=>"yes",
                 "help-string"=>"list of rules"}},
             "rule-name"=>
              {"entry"=>
                {"name"=>
                  {:obj=>:"attr-req",
                   :attributes=>
                    {"name"=>"name",
                     "maxlen"=>"63",
                     "type"=>"string",
                     "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"entry"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"rule-name"}},
             :obj=>:union,
             :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"default-rulebase", "help-string"=>"default rules"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"shared", "help-string"=>"shared"}},
     "device-group"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"device-group name"}},
         "pre-rulebase"=>
          {"entry"=>
            {"name"=>
              {nil=>
                {:obj=>:enum,
                 :attributes=>
                  {"value"=>"sdwan", "help-string"=>"sdwan policy"}},
               :obj=>:"attr-req",
               :attributes=>{"name"=>"name", "type"=>"enum"}},
             "rules"=>
              {"all"=>
                {:obj=>:sequence,
                 :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
               "list"=>
                {"entry"=>
                  {"member"=>
                    {:obj=>:element,
                     :attributes=>
                      {"name"=>"member",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:array,
                   :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"list",
                   "hidden"=>"yes",
                   "help-string"=>"list of rules"}},
               "rule-name"=>
                {"entry"=>
                  {"name"=>
                    {:obj=>:"attr-req",
                     :attributes=>
                      {"name"=>"name",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"entry"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"rule-name"}},
               :obj=>:union,
               :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"pre-rulebase", "help-string"=>"pre rules"}},
         "post-rulebase"=>
          {"entry"=>
            {"name"=>
              {nil=>
                {:obj=>:enum,
                 :attributes=>
                  {"value"=>"sdwan", "help-string"=>"sdwan policy"}},
               :obj=>:"attr-req",
               :attributes=>{"name"=>"name", "type"=>"enum"}},
             "rules"=>
              {"all"=>
                {:obj=>:sequence,
                 :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
               "list"=>
                {"entry"=>
                  {"member"=>
                    {:obj=>:element,
                     :attributes=>
                      {"name"=>"member",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:array,
                   :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"list",
                   "hidden"=>"yes",
                   "help-string"=>"list of rules"}},
               "rule-name"=>
                {"entry"=>
                  {"name"=>
                    {:obj=>:"attr-req",
                     :attributes=>
                      {"name"=>"name",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"entry"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"rule-name"}},
               :obj=>:union,
               :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"post-rulebase", "help-string"=>"post rules"}},
         "default-rulebase"=>
          {"entry"=>
            {"name"=>
              {nil=>
                {:obj=>:enum,
                 :attributes=>
                  {"value"=>"security", "help-string"=>"security policy"}},
               :obj=>:"attr-req",
               :attributes=>{"name"=>"name", "type"=>"enum"}},
             "rules"=>
              {"all"=>
                {:obj=>:sequence,
                 :attributes=>{"name"=>"all", "help-string"=>"all rules"}},
               "list"=>
                {"entry"=>
                  {"member"=>
                    {:obj=>:element,
                     :attributes=>
                      {"name"=>"member",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:array,
                   :attributes=>{"name"=>"entry", "help-string"=>"rule name"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"list",
                   "hidden"=>"yes",
                   "help-string"=>"list of rules"}},
               "rule-name"=>
                {"entry"=>
                  {"name"=>
                    {:obj=>:"attr-req",
                     :attributes=>
                      {"name"=>"name",
                       "maxlen"=>"63",
                       "type"=>"string",
                       "help-string"=>"rule name"}},
                   :obj=>:sequence,
                   :attributes=>{"name"=>"entry"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"rule-name"}},
               :obj=>:union,
               :attributes=>{"name"=>"rules", "help-string"=>"rules"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"default-rulebase", "help-string"=>"default rules"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"device-group",
         "help-string"=>"device-group",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"rule-hit-count",
       "target"=>"mgmt",
       "handler"=>"show_rule_hit_handler",
       "help-string"=>"Show policy rule hit-count information"}},
   "app-warning"=>
    {"retrieve-dg"=>
      {"device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"retrieve-dg",
         "target"=>"mgmt",
         "handler"=>"show_app_warnings_retrievedg_handler_cms",
         "help-string"=>"Show app warnings count information"}},
     "count"=>
      {"device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"count",
         "target"=>"mgmt",
         "handler"=>"show_app_warnings_count_cms_handler",
         "help-string"=>"Show app warnings count information"}},
     "warning-message"=>
      {"device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"string",
           "help-string"=>"Device Group Name"}},
       "uuid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"uuid",
           "type"=>"string",
           "maxlen"=>"36",
           "help-string"=>"UUID"}},
       "device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"warning-message",
         "target"=>"mgmt",
         "handler"=>"show_warning_msg_cms_handler",
         "help-string"=>"Show warning messages on panorama"}},
     "common-apps"=>
      {"uuid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"uuid",
           "type"=>"string",
           "maxlen"=>"36",
           "help-string"=>"UUID"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"common-apps",
         "target"=>"mgmt",
         "handler"=>"show_common_apps_cms_handler",
         "help-string"=>"Show common dependent apps on panorama"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"app-warning",
       "hidden"=>"yes",
       "help-string"=>"Show app warnings information"}},
   "shadow-warning"=>
    {"retrieve-dg"=>
      {"device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"retrieve-dg",
         "target"=>"mgmt",
         "handler"=>"show_shadow_warnings_retrievedg_handler_cms",
         "help-string"=>"Show Shadow warnings count information"}},
     "count"=>
      {"device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"count",
         "target"=>"mgmt",
         "handler"=>"show_shadow_warnings_count_cms_handler",
         "help-string"=>"Show shadow warnings count information"}},
     "warning-message"=>
      {"device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"string",
           "help-string"=>"Device Group Name"}},
       "uuid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"uuid",
           "type"=>"string",
           "maxlen"=>"36",
           "help-string"=>"UUID"}},
       "device-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-serial",
           "type"=>"string",
           "help-string"=>"Device Serial"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"warning-message",
         "target"=>"mgmt",
         "handler"=>"show_shadow_warning_msg_cms_handler",
         "help-string"=>"Show Shadow warning messages on panorama"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"shadow-warning",
       "hidden"=>"yes",
       "help-string"=>"Show app warnings information"}},
   "applications"=>
    {"device-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-group",
         "type"=>"string",
         "help-string"=>"device-group name"}},
     "list"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "help-string"=>"name of application-group or application-filter"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"list",
         "help-string"=>
          "list of appplication-groups or application-filter names"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"applications",
       "target"=>"mgmt",
       "handler"=>"show_applications_expand_handler_cms",
       "help-string"=>"Show applications for application filter or groups"}},
   "rule-use"=>
    {"device-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-group",
         "help-string"=>"device group",
         "type"=>"string",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     "rule-base"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"rule-base",
         "type"=>"enum",
         "help-string"=>"rule base name"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type", "type"=>"enum", "help-string"=>"rule use type"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"rule-use",
       "handler"=>"show_rule_use_handler",
       "help-string"=>"Show used/non-used policy rules"}},
   "plugins"=>
    {"packages"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"packages", "handler"=>"show-plugin-package-handler"}},
     "installed"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"installed", "handler"=>"show-installed-plugin-handler"}},
     "devicegroups"=>
      {"dynamic"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"dynamic", "handler"=>"show-plugin-dynamic-devicegroups"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"devicegroups", "help-string"=>"Show device groups"}},
     "users"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"users", "handler"=>"show-plugin-users-handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"plugins",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Request information of plugins"}},
   "interface"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"interface",
       "help-string"=>"Show interface information",
       "type"=>"enum",
       "target"=>"dagger",
       "handler"=>"mgmtif.show_all"}},
   "counter"=>
    {"management-server"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"management-server",
         "optional"=>"yes",
         "help-string"=>"Show management server counter information",
         "target"=>"mgmt",
         "handler"=>"show_counter_mgt"}},
     "interface"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"interface",
         "help-string"=>"Show interface counter information",
         "type"=>"enum",
         "handler"=>"mgmtif.show_cnts_all"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"counter",
       "help-string"=>"Show system counter information",
       "target"=>"dagger"}},
   "ntp"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"ntp",
       "target"=>"dagger",
       "handler"=>"ntp_state",
       "help-string"=>"Show NTP synchronization state"}},
   "high-availability"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "target"=>"dagger",
         "handler"=>"ha_show.all",
         "help-string"=>"Show high-availability information"}},
     "state"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"state",
         "target"=>"dagger",
         "handler"=>"ha_show.state",
         "help-string"=>"Show high-availability state information"}},
     "control-link"=>
      {"statistics"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "target"=>"dagger",
           "handler"=>"ha_show.ctrllink_stats",
           "help-string"=>"Show control-link statistics"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"control-link",
         "help-string"=>"Show control-link statistic information"}},
     "transitions"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"transitions",
         "target"=>"dagger",
         "handler"=>"ha_show.transitions",
         "help-string"=>
          "Show high-availability transition statistic information"}},
     "path-monitoring"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"path-monitoring",
         "target"=>"dagger",
         "handler"=>"ha_show.cms_pathmon",
         "help-string"=>"Show path-monitoring statistics"}},
     "local-state"=>
      {:obj=>:sequence,
       :attributes=>
        {"internal"=>"yes",
         "name"=>"local-state",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -e -n ha.app.local.state",
         "help-string"=>"Show high-availability local state"}},
     "timer-defaults"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"timer-defaults",
         "internal"=>"yes",
         "target"=>"dagger",
         "handler"=>"ha_show.timer_def",
         "help-string"=>"You should never see this"}},
     "sync-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"internal"=>"yes",
         "name"=>"sync-info",
         "target"=>"mgmt",
         "handler"=>"show_ha_sync_info",
         "help-string"=>"Show high-availability synchronization information"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"high-availability",
       "help-string"=>"Show high-availability information"}},
   "authentication"=>
    {"locked-users"=>
      {"auth-profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"auth-profile",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Authentication profile",
           "complete-handler"=>
            "$config/panorama/authentication-profile/entry/@name"}},
       "is-seq"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"is-seq",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"Is this authentication sequence?"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"locked-users",
         "handler"=>"show_lockedusers_handler",
         "help-string"=>"Show locked users"}},
     "service-principal-internal"=>
      {"keytab-file-path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"keytab-file-path",
           "type"=>"string",
           "subtype"=>"pathname",
           "help-string"=>"Kerberos key tab file path"}},
       "realm"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"realm",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"Kerberos realm for validating the key tab file"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"service-principal-internal",
         "internal"=>"yes",
         "handler"=>"show_sso_service_principal_internal_handler",
         "help-string"=>"Get service principal for UI"}},
     "service-principal"=>
      {"authentication-profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"authentication-profile",
           "type"=>"string",
           "help-string"=>"Authentication profile",
           "complete-handler"=>
            "$config/panorama/authentication-profile/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"service-principal",
         "handler"=>"show_sso_service_principal_handler",
         "help-string"=>
          "Show service principal in the keytab of auth profile"}},
     "allowlist"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"allowlist",
         "roles"=>"superuser,deviceadmin",
         "target"=>"authd",
         "handler"=>"show_allowlist",
         "help-string"=>"Show allowlist "}},
     "groupdb"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"groupdb",
         "roles"=>"superuser,deviceadmin",
         "target"=>"authd",
         "handler"=>"show_groupdb",
         "help-string"=>"Show groupdb "}},
     "groupnames"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"groupnames",
         "roles"=>"superuser,deviceadmin",
         "target"=>"authd",
         "handler"=>"show_groupnames",
         "help-string"=>"Show groupnames "}},
     "statistics"=>
      {"username"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"username",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"255",
           "help-string"=>"Admin user name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"statistics",
         "target"=>"authd",
         "handler"=>"show_user_auth_stat",
         "help-string"=>
          "Show authentication stat for an admin user from CLI"}},
     "statistics-internal"=>
      {"username"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"username",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"255",
           "help-string"=>"Admin user name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"statistics-internal",
         "target"=>"authd",
         "internal"=>"yes",
         "handler"=>"show_user_auth_stat_internal",
         "help-string"=>
          "Show authentication stat for an admin user from WebUI"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"authentication",
       "timeout"=>"60",
       "target"=>"authd",
       "help-string"=>"Show authentication related information"}},
   "auth"=>
    {"strict-username-check"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"strict-username-check",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -e -n cfg.auth.strict_check "}},
     :obj=>:sequence,
     :attributes=>{"name"=>"auth", "help-string"=>"auth state variables"}},
   "object"=>
    {"static"=>
      {"ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "unicast-only"=>"yes",
           "help-string"=>"By IP address"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"static",
         "target"=>"mgmt",
         "handler"=>"show_object",
         "help-string"=>"Static IP to object name"}},
     "address"=>
      {"template"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"template",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"template name"}},
       "vsys"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"vsys",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"Vsys name"}},
       "inet"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"inet",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"4",
           "help-string"=>"IPv4 or IPv6"}},
       "type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"type",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"address object type"}},
       "unicast"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"unicast",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"unicast only"}},
       "substring"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"substring",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"if the name contains the string or not"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"1000",
           "help-string"=>"The max number of entries to be shown"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"address",
         "target"=>"mgmt",
         "internal"=>"yes",
         "handler"=>"show_address",
         "help-string"=>"IP to object name"}},
     "dynamic-address-group"=>
      {"all"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "target"=>"mgmt",
           "handler"=>"show_dyn_addr_grp",
           "help-string"=>"Show all dynamic address groups"}},
       "name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "target"=>"mgmt",
           "handler"=>"show_dyn_addr_grp",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"Show dynamic address group by name"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"dynamic-address-group",
         "help-string"=>"Dynamic address group object"}},
     "registered-ip"=>
      {"all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all", "help-string"=>"Display all registered addresses"}},
       "ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "help-string"=>"Display registered address matches given IP"}},
       "iprange"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"iprange",
           "type"=>"iprangespec",
           "help-string"=>
            "Display registered address matches given IP-Range"}},
       "tag"=>
        {"entry"=>
          {"name"=>
            {nil=>
              {:obj=>:string,
               :attributes=>
                {"maxlen"=>"256", "help-string"=>"<name> tag name"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"multiple"}},
           "ip"=>
            {:obj=>:element,
             :attributes=>{"name"=>"ip", "type"=>"ipspec", "optional"=>"yes"}},
           "iprange"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"iprange", "type"=>"iprangespec", "optional"=>"yes"}},
           "vm-source"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"vm-source",
               "type"=>"multiple",
               "optional"=>"yes",
               "complete-handler"=>"$vsys/vm-info-source/entry/@name",
               "timeout"=>"300"}},
           "option"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tag"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"500",
           "help-string"=>"Limit"}},
       "start-point"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"start-point",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"100000"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"registered-ip",
         "target"=>"useridd",
         "help-string"=>"Dump registered IP addresses",
         "handler"=>"dump_registered_addr"}},
     "registered-user"=>
      {"all"=>
        {"start-point"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"start-point",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"524288"}},
         "limit"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"limit",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"500",
             "help-string"=>"Limit"}},
         "option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all", "help-string"=>"Display all registered users"}},
       "user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "help-string"=>"Display registered user matches given name"}},
       "tag"=>
        {"entry"=>
          {"name"=>
            {nil=>
              {:obj=>:string,
               :attributes=>
                {"maxlen"=>"256", "help-string"=>"<name> tag name"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"multiple"}},
           "user"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"user",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "optional"=>"yes"}},
           "tag-source"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag-source", "type"=>"multiple", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tag"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"registered-user",
         "target"=>"useridd",
         "help-string"=>"Dump registered Users",
         "handler"=>"dump_registered_user"}},
     :obj=>:union,
     :attributes=>{"name"=>"object", "help-string"=>"Show IP address object"}},
   "obsolete-disabled-ssl-exclusions"=>
    {"template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template",
         "type"=>"string",
         "help-string"=>"template name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"obsolete-disabled-ssl-exclusions",
       "target"=>"mgmt",
       "handler"=>"show_obsolete_ssl_exclusions",
       "help-string"=>
        "Show disabled predefined ssl-decrypt exclusions not present in the installed content"}},
   "tag"=>
    {"substring"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"substring",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"127",
         "help-string"=>"substring"}},
     "limit"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"limit",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"1000",
         "help-string"=>"The max number of entries to be shown"}},
     "start-point"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"start-point",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"4294967295",
         "help-string"=>"The start point of entries to be shown"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"tag",
       "target"=>"mgmt",
       "handler"=>"show_dyn_addr_tag",
       "help-string"=>"Show dump of dynamic address tags"}},
   "vpn"=>
    {"certificate"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "help-string"=>"show for given certificate",
           "complete-handler"=>"ike_certificate_complete_handler"}},
       "field"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"field",
           "type"=>"enum",
           "help-string"=>"type for given certificate"}},
       "profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "help-string"=>"show for given certificate profile",
           "complete-handler"=>"ike_certificate_profile_complete_handler"}},
       "interface"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"interface",
           "type"=>"string",
           "help-string"=>"interface name of the IKE gateway"}},
       "template"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"template",
           "type"=>"string",
           "help-string"=>"template name for the IKE gateway"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"certificate",
         "target"=>"mgmt",
         "handler"=>"show_certificate_field_hanlder",
         "help-string"=>"show certificate fields"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"vpn",
       "internal"=>"yes",
       "help-string"=>"show (IKE/IPSec) VPN run-time objects",
       "prune-on"=>"vpn-disable-mode"}},
   "panorama-certificates"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"panorama-certificates",
       "help-string"=>"Show panorama certificate list",
       "target"=>"script",
       "handler"=>"cd /opt/pancfg/mgmt/cms/ssl_new/; /bin/ls -lh *.pem"}},
   "device-certificate"=>
    {"status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"status", "handler"=>"show_device_cert_status_handler"}},
     "info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info", "handler"=>"show_device_cert_info_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-certificate",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Show device certificate",
       "target"=>"mgmt"}},
   "fileinfo"=>
    {:obj=>:element,
     :attributes=>
      {"internal"=>"yes",
       "name"=>"fileinfo",
       "type"=>"string",
       "target"=>"mgmt",
       "handler"=>"show_fileinfo"}},
   "saas-characteristics-list"=>
    {:obj=>:sequence,
     :attributes=>
      {"internal"=>"yes",
       "name"=>"saas-characteristics-list",
       "target"=>"mgmt",
       "handler"=>"show_saas_chars"}},
   "sctp-field-values-list"=>
    {:obj=>:sequence,
     :attributes=>
      {"internal"=>"yes",
       "name"=>"sctp-field-values-list",
       "target"=>"mgmt",
       "handler"=>"show_sctp_value_list"}},
   "config"=>
    {"list"=>
      {"admins"=>
        {"partial"=>
          {"admin"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                 "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
           "shared-object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
           "device-and-network"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"device-and-network",
               "type"=>"enum",
               "optional"=>"yes"}},
           "shared-object-write"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"shared-object-write",
               "internal"=>"yes",
               "type"=>"enum",
               "optional"=>"yes"}},
           "no-device-group"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
           "device-group"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
           "no-template"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
           "template"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"template", "optional"=>"yes"}},
           "no-template-stack"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
           "template-stack"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
           "no-log-collector"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
           "log-collector"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
           "no-log-collector-group"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-log-collector-group", "optional"=>"yes"}},
           "log-collector-group"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
           "no-wildfire-appliance"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
           "wildfire-appliance"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
           "no-wildfire-appliance-cluster"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
           "wildfire-appliance-cluster"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"partial", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"admins",
           "help-string"=>"admins in access domain",
           "handler"=>"admins_in_access_domain_handler"}},
       "changes"=>
        {"partial"=>
          {"admin"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                 "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
           "shared-object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
           "device-and-network"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"device-and-network",
               "type"=>"enum",
               "optional"=>"yes"}},
           "shared-object-write"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"shared-object-write",
               "internal"=>"yes",
               "type"=>"enum",
               "optional"=>"yes"}},
           "no-device-group"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
           "device-group"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
           "no-template"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
           "template"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"template", "optional"=>"yes"}},
           "no-template-stack"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
           "template-stack"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
           "no-log-collector"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
           "log-collector"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
           "no-log-collector-group"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-log-collector-group", "optional"=>"yes"}},
           "log-collector-group"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
           "no-wildfire-appliance"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
           "wildfire-appliance"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
           "no-wildfire-appliance-cluster"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
           "wildfire-appliance-cluster"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"partial", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"changes",
           "help-string"=>"list uncommitted changes",
           "handler"=>"list-dirty-journal-handler"}},
       "change-summary"=>
        {"partial"=>
          {"admin"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                 "maxlen"=>"63"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"partial",
             "optional"=>"yes",
             "roles"=>"superuser,deviceadmin"}},
         :obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"change-summary",
           "help-string"=>"show summary of uncommitted changed components",
           "handler"=>"list-dirty-summary-handler"}},
       "audit-comments"=>
        {"xpath"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"xpath",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>".*",
             "maxlen"=>"1024",
             "help-string"=>"xpath of the node"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"audit-comments",
           "optional"=>"yes",
           "handler"=>"audit-cmnts-show-handler",
           "help-string"=>"Show audit comments"}},
       :obj=>:union,
       :attributes=>{"name"=>"list", "target"=>"mgmt", "help-string"=>"List"}},
     "diff"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"diff",
         "help-string"=>"Diff running and candidate configuration",
         "target"=>"cli",
         "cli-handler"=>"show-config-diff-handler"}},
     "running"=>
      {"xpath"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"xpath",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"1024",
           "help-string"=>"xpath of the node to retreive"}},
       :obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"running",
         "help-string"=>"Running configuration",
         "handler"=>"show_config_running_handler"}},
     "synced"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"synced",
         "help-string"=>"Configuration last synchronized with HA peer",
         "handler"=>"show_config_synced_handler"}},
     "candidate"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"candidate",
         "help-string"=>"Candidate configuration",
         "handler"=>"show_config_candidate_handler"}},
     "effective-running"=>
      {"xpath"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"xpath",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"1024",
           "help-string"=>"xpath of the node to retrieve"}},
       :obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"effective-running",
         "help-string"=>"Effective running configuration",
         "handler"=>"show_config_effective_running_handler",
         "internal"=>"yes"}},
     "audit"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Information",
           "handler"=>"show_config_audit_info_handler",
           "cli-handler"=>"default-operation-handler"}},
       "base-version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"base-version",
           "type"=>"multiple",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_audit_complete_handler",
           "handler"=>"show_config_audit_base_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Version"}},
       "export-base-version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"export-base-version",
           "roles"=>"superuser,superreader",
           "type"=>"multiple",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_audit_complete_handler",
           "handler"=>"show_config_audit_export_base_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Version",
           "internal"=>"yes"}},
       "base-version-no-deletes"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"base-version-no-deletes",
           "type"=>"multiple",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_audit_complete_handler",
           "handler"=>"show_config_audit_base_no_delete_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Version"}},
       "version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"version",
           "type"=>"multiple",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_audit_complete_handler",
           "handler"=>"show_config_audit_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Version"}},
       :obj=>:union,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"audit",
         "help-string"=>"Config audit information"}},
     "repo"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "complete-handler"=>"$config/mgt-config/devices/entry/@name",
           "help-string"=>"device name"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file",
           "type"=>"string",
           "maxlen"=>"32",
           "complete-handler"=>"show_config_repo_file_complete_handler",
           "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
           "handler"=>"show_config_repo_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Filename"}},
       "version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"version",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_repo_version_complete_handler",
           "handler"=>"show_config_repo_handler",
           "cli-handler"=>"default-operation-handler",
           "help-string"=>"Version"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"repo", "help-string"=>"Config repository"}},
     "saved"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "roles"=>"superuser,superreader",
         "name"=>"saved",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"show_config_complete_handler",
         "help-string"=>"Saved configuration"}},
     "partial"=>
      {"saved"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"saved",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "complete-handler"=>"show_config_complete_handler",
           "help-string"=>"Saved configuration"}},
       "xpath"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"xpath",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"1024",
           "help-string"=>"xpath of the node to retreive"}},
       :obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "roles"=>"superuser,superreader",
         "internal"=>"yes",
         "name"=>"partial",
         "help-string"=>"Partial saved configuration",
         "handler"=>"show_config_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"config",
       "target"=>"mgmt",
       "help-string"=>"Show configuration",
       "handler"=>"show_config_handler"}},
   "clock"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"clock",
       "target"=>"mgmt",
       "help-string"=>"Show system date and time",
       "handler"=>"show_clock_handler"}},
   "cli"=>
    {"info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "help-string"=>"Show various CLI info",
         "cli-handler"=>"show-cli-info-handler"}},
     "idle-timeout"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"idle-timeout",
         "help-string"=>
          "Show timeout information for this adminitrative session",
         "target"=>"mgmt",
         "handler"=>"show_session_timeout_handler"}},
     "hide-ip"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"hide-ip",
         "internal"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_session_hide_ip_handler",
         "help-string"=>
          "Show if IP addresses are hidden in logs for this admin session"}},
     "hide-user"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"hide-user",
         "internal"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_session_hide_user_handler",
         "help-string"=>
          "Show if user names are hidden in logs for this admin session"}},
     "permissions"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"permissions",
         "help-string"=>"Show permissions",
         "target"=>"mgmt",
         "handler"=>"show_session_permissions_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"cli", "target"=>"cli", "help-string"=>"Show CLI properties"}},
   "log"=>
    {"traffic"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "show-tracker"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"show-tracker", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "session-end-reason"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"session-end-reason", "optional"=>"yes"}},
       "http2_connection"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"4294967295"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"4294967295"}},
         :obj=>:union,
         :attributes=>{"name"=>"http2_connection", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"traffic", "help-string"=>"Show traffic logs"}},
     "threat"=>
      {"suppress-threatid-mapping"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"suppress-threatid-mapping", "optional"=>"yes"}},
       "pcap-dump"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"pcap-dump", "optional"=>"yes"}},
       "direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "category"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         :obj=>:union,
         :attributes=>
          {"target"=>"device", "name"=>"category", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"threat", "help-string"=>"Show threat logs"}},
     "wildfire"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "category"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"category", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"wildfire", "help-string"=>"Show wildfire logs"}},
     "url"=>
      {"suppress-threatid-mapping"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"suppress-threatid-mapping", "optional"=>"yes"}},
       "direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "category"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         :obj=>:union,
         :attributes=>
          {"target"=>"device", "name"=>"category", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"url", "help-string"=>"Show url logs"}},
     "data"=>
      {"suppress-threatid-mapping"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"suppress-threatid-mapping", "optional"=>"yes"}},
       "direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "category"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "complete-handler"=>"show_category_complete_handler",
             "help-string"=>"Choose the URL category"}},
         :obj=>:union,
         :attributes=>
          {"target"=>"device", "name"=>"category", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"data", "help-string"=>"Show data logs"}},
     "gtp"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       "imsi"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"IMSI",
             "maxlen"=>"15"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"IMSI",
             "maxlen"=>"15"}},
         :obj=>:union,
         :attributes=>{"name"=>"imsi", "optional"=>"yes"}},
       "imei"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"IMEI",
             "maxlen"=>"15"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"IMEI",
             "maxlen"=>"15"}},
         :obj=>:union,
         :attributes=>{"name"=>"imei", "optional"=>"yes"}},
       "pcap-dump"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"pcap-dump", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"gtp", "help-string"=>"Show GTP logs"}},
     "sctp"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"sctp", "help-string"=>"Show SCTP logs"}},
     "tunnel"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       "tunnelid"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Tunnel ID",
             "maxlen"=>"15"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Tunnel ID",
             "maxlen"=>"15"}},
         :obj=>:union,
         :attributes=>{"name"=>"tunnelid", "optional"=>"yes"}},
       "monitortag"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Monitor Tag",
             "maxlen"=>"32"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Monitor Tag",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"monitortag", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"tunnel", "help-string"=>"Show Tunnel logs"}},
     "config"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "client"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"client", "optional"=>"yes"}},
       "cmd"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"cmd", "optional"=>"yes"}},
       "result"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"result", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"config", "help-string"=>"Show config logs"}},
     "system"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "opaque"=>
        {"contains"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"contains",
             "type"=>"string",
             "help-string"=>"substring",
             "maxlen"=>"511"}},
         :obj=>:union,
         :attributes=>{"name"=>"opaque", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       "subtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"subtype", "optional"=>"yes"}},
       "object"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"object", "optional"=>"yes"}},
       "eventid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"eventid", "optional"=>"yes"}},
       "id"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"id", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"system", "help-string"=>"Show system logs"}},
     "appstat"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"name", "optional"=>"yes"}},
       "risk"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"risk", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"appstat", "help-string"=>"Show appstat logs"}},
     "decryption"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "show-tracker"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"show-tracker", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "proxy_type"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"proxy_type", "optional"=>"yes"}},
       "policy_name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"policy_name", "optional"=>"yes"}},
       "sni"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"sni", "optional"=>"yes"}},
       "tls_keyxchg"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_keyxchg", "optional"=>"yes"}},
       "tls_version"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_version", "optional"=>"yes"}},
       "tls_enc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_enc", "optional"=>"yes"}},
       "tls_auth"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_auth", "optional"=>"yes"}},
       "ec_curve"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"ec_curve", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "sport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"sport", "optional"=>"yes"}},
       "dport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"dport", "optional"=>"yes"}},
       "action"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"action", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"decryption", "help-string"=>"Show decryption logs"}},
     "trsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"trsum", "help-string"=>"Show trsum logs"}},
     "hourlytrsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlytrsum", "help-string"=>"Show hourlytrsum logs"}},
     "dailytrsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailytrsum", "help-string"=>"Show dailytrsum logs"}},
     "weeklytrsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklytrsum", "help-string"=>"Show weeklytrsum logs"}},
     "thsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "threatid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"threatid", "optional"=>"yes"}},
       "subtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"subtype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"thsum", "help-string"=>"Show thsum logs"}},
     "hourlythsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "threatid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"threatid", "optional"=>"yes"}},
       "subtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"subtype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlythsum", "help-string"=>"Show hourlythsum logs"}},
     "dailythsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "threatid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"threatid", "optional"=>"yes"}},
       "subtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"subtype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailythsum", "help-string"=>"Show dailythsum logs"}},
     "weeklythsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "threatid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"threatid", "optional"=>"yes"}},
       "subtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"subtype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklythsum", "help-string"=>"Show weeklythsum logs"}},
     "urlsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"urlsum", "help-string"=>"Show urlsum logs"}},
     "hourlyurlsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlyurlsum", "help-string"=>"Show hourlyurlsum logs"}},
     "dailyurlsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailyurlsum", "help-string"=>"Show dailyurlsum logs"}},
     "weeklyurlsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklyurlsum", "help-string"=>"Show weeklyurlsum logs"}},
     "gtpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "imsi"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imsi", "optional"=>"yes"}},
       "imei"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imei", "optional"=>"yes"}},
       "parent_session_id"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"parent_session_id", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"gtpsum", "help-string"=>"Show tunnel and gtp summary logs"}},
     "hourlygtpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "imsi"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imsi", "optional"=>"yes"}},
       "imei"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imei", "optional"=>"yes"}},
       "parent_session_id"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"parent_session_id", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlygtpsum",
         "help-string"=>"Show hourly tunnel and gtp summary logs"}},
     "dailygtpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "imsi"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imsi", "optional"=>"yes"}},
       "imei"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imei", "optional"=>"yes"}},
       "parent_session_id"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"parent_session_id", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailygtpsum",
         "help-string"=>"Show daily tunnel and gtp summary logs"}},
     "weeklygtpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       "imsi"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imsi", "optional"=>"yes"}},
       "imei"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"imei", "optional"=>"yes"}},
       "parent_session_id"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"parent_session_id", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklygtpsum",
         "help-string"=>"Show weekly tunnel and gtp summary logs"}},
     "sctpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"sctpsum", "help-string"=>"Show sctp summary logs"}},
     "hourlysctpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlysctpsum",
         "help-string"=>"Show hourly sctp summary logs"}},
     "dailysctpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailysctpsum",
         "help-string"=>"Show daily sctp summary logs"}},
     "weeklysctpsum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "app"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"app", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "rule"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule", "optional"=>"yes"}},
       "rule_uuid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"rule_uuid", "optional"=>"yes"}},
       "srcloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcloc", "optional"=>"yes"}},
       "dstloc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"string"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstloc", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklysctpsum",
         "help-string"=>"Show weekly sctp summary logs"}},
     "desum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "tls_version"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_version", "optional"=>"yes"}},
       "tls_keyxchg"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_keyxchg", "optional"=>"yes"}},
       "tls_enc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_enc", "optional"=>"yes"}},
       "tls_auth"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_auth", "optional"=>"yes"}},
       "policy_name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"policy_name", "optional"=>"yes"}},
       "sni"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"sni", "optional"=>"yes"}},
       "error"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"error", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"desum", "help-string"=>"Show desum logs"}},
     "hourlydesum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "tls_version"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_version", "optional"=>"yes"}},
       "tls_keyxchg"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_keyxchg", "optional"=>"yes"}},
       "tls_enc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_enc", "optional"=>"yes"}},
       "tls_auth"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_auth", "optional"=>"yes"}},
       "policy_name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"policy_name", "optional"=>"yes"}},
       "sni"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"sni", "optional"=>"yes"}},
       "error"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"error", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hourlydesum", "help-string"=>"Show hourlydesum logs"}},
     "dailydesum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "tls_version"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_version", "optional"=>"yes"}},
       "tls_keyxchg"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_keyxchg", "optional"=>"yes"}},
       "tls_enc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_enc", "optional"=>"yes"}},
       "tls_auth"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_auth", "optional"=>"yes"}},
       "policy_name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"policy_name", "optional"=>"yes"}},
       "sni"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"sni", "optional"=>"yes"}},
       "error"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"error", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dailydesum", "help-string"=>"Show dailydesum logs"}},
     "weeklydesum"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "dst"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dst", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "dstuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"dstuser", "optional"=>"yes"}},
       "from"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"from", "optional"=>"yes"}},
       "to"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"to", "optional"=>"yes"}},
       "tls_version"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_version", "optional"=>"yes"}},
       "tls_keyxchg"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_keyxchg", "optional"=>"yes"}},
       "tls_enc"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_enc", "optional"=>"yes"}},
       "tls_auth"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"tls_auth", "optional"=>"yes"}},
       "policy_name"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"policy_name", "optional"=>"yes"}},
       "sni"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"sni", "optional"=>"yes"}},
       "error"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"error", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"weeklydesum", "help-string"=>"Show weeklydesum logs"}},
     "hipmatch"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "machinename"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Machine name",
             "maxlen"=>"32"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Machine name",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"machinename", "optional"=>"yes"}},
       "os"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Operating System",
             "maxlen"=>"32"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Operating System",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"os", "optional"=>"yes"}},
       "matchname"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Match name",
             "maxlen"=>"32"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Match name",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"matchname", "optional"=>"yes"}},
       "matchtype"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"matchtype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"hipmatch", "help-string"=>"Show hipmatch logs"}},
     "iptag"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Vsys Id",
             "complete-handler"=>"$device/vsys/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "ip"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"ip", "optional"=>"yes"}},
       "tag_name"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Tag name",
             "maxlen"=>"128"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Tag name",
             "maxlen"=>"128"}},
         :obj=>:union,
         :attributes=>{"name"=>"tag_name", "optional"=>"yes"}},
       "event_id"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal", "type"=>"enum", "help-string"=>"Event Id"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal", "type"=>"enum", "help-string"=>"Event Id"}},
         :obj=>:union,
         :attributes=>{"name"=>"event_id", "optional"=>"yes"}},
       "datasource_type"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"enum",
             "help-string"=>"Data Source Type"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"enum",
             "help-string"=>"Data Source Type"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasource_type", "optional"=>"yes"}},
       "datasource_subtype"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"enum",
             "help-string"=>"Data Source Subtype"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"enum",
             "help-string"=>"Data Source Subtype"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasource_subtype", "optional"=>"yes"}},
       "datasourcename"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Data Source Name",
             "maxlen"=>"64"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"Data Source Name",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasourcename", "optional"=>"yes"}},
       "ip_subnet_range"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"ip_subnet_range",
             "maxlen"=>"256"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"string",
             "help-string"=>"ip_subnet_range",
             "maxlen"=>"256"}},
         :obj=>:union,
         :attributes=>{"name"=>"ip_subnet_range", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"iptag", "help-string"=>"Show iptag logs"}},
     "mdm"=>
      {"receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"mdm", "help-string"=>"Show mdm logs"}},
     "userid"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Vsys Id",
             "complete-handler"=>"$device/vsys/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "ip"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"ip", "optional"=>"yes"}},
       "user"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"user", "optional"=>"yes"}},
       "datasourcename"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"data source name",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasourcename", "optional"=>"yes"}},
       "datasource"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal", "type"=>"enum", "help-string"=>"data source"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasource", "optional"=>"yes"}},
       "datasourcetype"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"enum",
             "help-string"=>"data source type"}},
         :obj=>:union,
         :attributes=>{"name"=>"datasourcetype", "optional"=>"yes"}},
       "beginport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"beginport", "optional"=>"yes"}},
       "endport"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"not-equal",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535"}},
         :obj=>:union,
         :attributes=>{"name"=>"endport", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"userid", "help-string"=>"Show User-ID logs"}},
     "auth"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Vsys Id",
             "complete-handler"=>"$device/vsys/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "ip"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"ip", "optional"=>"yes"}},
       "user"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"256"}},
         :obj=>:union,
         :attributes=>{"name"=>"user", "optional"=>"yes"}},
       "authpolicy"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Authentication policy",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"authpolicy", "optional"=>"yes"}},
       "vendor"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Vendor",
             "maxlen"=>"32"}},
         :obj=>:union,
         :attributes=>{"name"=>"vendor", "optional"=>"yes"}},
       "clienttype"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal", "type"=>"enum", "help-string"=>"client type"}},
         :obj=>:union,
         :attributes=>{"name"=>"clienttype", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"auth", "help-string"=>"Show authentication logs"}},
     "corr"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "objectname"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"correlation object name",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"objectname", "optional"=>"yes"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"corr", "help-string"=>"Show correlation object event logs"}},
     "corr-categ"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "object-category"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"correlation object category",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"object-category"}},
       "src"=>
        {"in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         "not-in"=>
          {:obj=>:element, :attributes=>{"name"=>"not-in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"src", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"user name",
             "maxlen"=>"50"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       "severity"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         "not-equal"=>
          {:obj=>:element, :attributes=>{"name"=>"not-equal", "type"=>"enum"}},
         "greater-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"greater-than-or-equal", "type"=>"enum"}},
         "less-than-or-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"less-than-or-equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"severity", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"corr-categ",
         "help-string"=>"Show correlation event category logs"}},
     "corr-detail"=>
      {"object-name"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"correlation object name",
             "maxlen"=>"64"}},
         :obj=>:union,
         :attributes=>{"name"=>"object-name"}},
       "match-oid"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"correlation object match OID",
             "maxlen"=>"24"}},
         :obj=>:union,
         :attributes=>{"name"=>"match-oid"}},
       "serial-number"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial-number", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"corr-detail",
         "help-string"=>"Show correlation event detailed information"}},
     "globalprotect"=>
      {"direction"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"direction", "optional"=>"yes"}},
       "csv-output"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"csv-output", "optional"=>"yes"}},
       "query"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"query", "optional"=>"yes"}},
       "receive_time"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"receive_time", "optional"=>"yes"}},
       "start-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"start-time", "optional"=>"yes"}},
       "end-time"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>
              "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
             "regex"=>
              "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([1-2][0-9]|0[1-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
             "minlen"=>"12",
             "maxlen"=>"20"}},
         :obj=>:union,
         :attributes=>{"name"=>"end-time", "optional"=>"yes"}},
       "serial"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"serial", "optional"=>"yes"}},
       "vsys"=>
        {"equal"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"equal",
             "type"=>"string",
             "help-string"=>"Vsys Id",
             "complete-handler"=>"$device/vsys/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
       "client_ver"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"client_ver", "optional"=>"yes"}},
       "auth_method"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"auth_method", "optional"=>"yes"}},
       "machinename"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "contains"=>
          {:obj=>:element,
           :attributes=>{"name"=>"contains", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"machinename", "optional"=>"yes"}},
       "hostid"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"hostid", "optional"=>"yes"}},
       "portal_or_gateway"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"portal_or_gateway", "optional"=>"yes"}},
       "private_ip"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"private_ip", "optional"=>"yes"}},
       "public_ip"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         "in"=>{:obj=>:element, :attributes=>{"name"=>"in", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"public_ip", "optional"=>"yes"}},
       "srcregion"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcregion", "optional"=>"yes"}},
       "srcuser"=>
        {"equal"=>
          {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"string"}},
         "not-equal"=>
          {:obj=>:element,
           :attributes=>{"name"=>"not-equal", "type"=>"string"}},
         :obj=>:union,
         :attributes=>{"name"=>"srcuser", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"globalprotect", "help-string"=>"Show globalprotect logs"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log",
       "target"=>"cli",
       "help-string"=>"Show logs related information",
       "cli-handler"=>"show-log-handler"}},
   "admins"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"all",
         "target"=>"mgmt",
         "handler"=>"show_users_all",
         "help-string"=>"All administrators"}},
     "local"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"local",
         "target"=>"mgmt",
         "handler"=>"show_users_local",
         "help-string"=>"All local administrators"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"admins",
       "target"=>"mgmt",
       "handler"=>"show_users",
       "help-string"=>"Show active administrators"}},
   "countries"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"countries",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_countries",
       "help-string"=>"All country code to id mappings"}},
   "predefined"=>
    {"xpath"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"xpath",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^[^;|`\"&$<>[:cntrl:]]+$",
         "maxlen"=>"1024",
         "help-string"=>
          "xpath of predefined node to retreive, should start with /predefined/"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"predefined",
       "target"=>"mgmt",
       "help-string"=>"Show predefined config",
       "handler"=>"show_predefined"}},
   "devicegroups"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"name",
         "type"=>"string",
         "help-string"=>"name of device group",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"devicegroups",
       "target"=>"mgmt",
       "help-string"=>"Show device groups",
       "handler"=>"show_devicegroups"}},
   "dg-hierarchy"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"name",
         "type"=>"string",
         "help-string"=>"prints all children of a device group.",
         "complete-handler"=>
          "$$config/devices/entry/device-group/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"dg-hierarchy",
       "target"=>"mgmt",
       "help-string"=>"Show device groups hierarchy",
       "handler"=>"print_dg_hierarchy"}},
   "templates"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"name",
         "type"=>"string",
         "help-string"=>"name of template",
         "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"templates",
       "target"=>"mgmt",
       "help-string"=>"Show templates",
       "handler"=>"show_templates"}},
   "template-stack"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"name",
         "type"=>"string",
         "help-string"=>"name of a template stack",
         "complete-handler"=>
          "$config/devices/entry/template-stack/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"template-stack",
       "target"=>"mgmt",
       "help-string"=>"Show template stack",
       "handler"=>"show_template_stack"}},
   "device-messages"=>
    {"group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"group",
         "type"=>"string",
         "help-string"=>"name of device group",
         "complete-handler"=>
          "$config/devices/entry/device-group/entry/@name"}},
     "template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template",
         "type"=>"string",
         "help-string"=>"name of template",
         "complete-handler"=>
          "$config/devices/entry/template/entry/@name|$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device", "type"=>"string", "help-string"=>"name of device"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"device-messages",
       "target"=>"mgmt",
       "help-string"=>"Show device messages",
       "handler"=>"show_device_messages"}},
   "collector-messages"=>
    {"log-collector-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector-group",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"log collector group",
         "complete-handler"=>
          "$config/devices/entry/log-collector-group/entry/@name"}},
     "collector"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"collector",
         "type"=>"string",
         "help-string"=>"name of collector"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"collector-messages",
       "target"=>"mgmt",
       "help-string"=>"Show log collector messages",
       "handler"=>"show_device_messages"}},
   "devices"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"all",
         "target"=>"mgmt",
         "handler"=>"show_devices_all",
         "help-string"=>"All managed devices"}},
     "connected"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"connected",
         "target"=>"mgmt",
         "handler"=>"show_devices_connected",
         "help-string"=>"All connected devices"}},
     "summary"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"summary",
         "hidden"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_device_summary",
         "help-string"=>"Device summary"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"devices",
       "target"=>"mgmt",
       "help-string"=>"Show managed Devices"}},
   "svm-device-cache"=>
    {"type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"svm-device-cache",
       "target"=>"mgmt",
       "handler"=>"show_svm_devices_cache",
       "help-string"=>"Show all managed SVM Devices"}},
   "log-collector-es-indices"=>
    {"log-collector-grp-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector-grp-name",
         "type"=>"string",
         "help-string"=>"log collector group name",
         "complete-handler"=>
          "$config/devices/entry/log-collector-group/entry/@name",
         "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-collector-es-indices",
       "target"=>"mgmt",
       "help-string"=>"Show elastic search indices per cluster",
       "handler"=>"show_log_collector_grp_es_indices"}},
   "log-collector-es-cluster"=>
    {"health"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"health",
         "help-string"=>"Show elastic search cluster health",
         "target"=>"script",
         "handler"=>"/usr/local/bin/es_cluster.sh health"}},
     "state"=>
      {"version"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"version",
           "help-string"=>"Show elastic search cluster state version",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/version"}},
       "master_node"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"master_node",
           "help-string"=>"Show elastic search cluster state master_node",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/master_node"}},
       "nodes"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"nodes",
           "help-string"=>"Show elastic search cluster state nodes",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/nodes"}},
       "routing_table"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"routing_table",
           "help-string"=>"Show elastic search cluster state routing_table",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/routing_table"}},
       "meta_data"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"meta_data",
           "help-string"=>"Show elastic search cluster state routing_table",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/meta_data"}},
       "blocks"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"blocks",
           "help-string"=>"Show elastic search cluster state blocks",
           "target"=>"script",
           "handler"=>"/usr/local/bin/es_cluster.sh state/blocks"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"state",
         "help-string"=>"Show elastic search cluster state",
         "target"=>"script",
         "handler"=>"/usr/local/bin/es_cluster.sh state"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-collector-es-cluster",
       "target"=>"mgmt",
       "help-string"=>
        "Show elastic search health | state/{version|master_node|nodes|routing_table|meta_data|blocks}"}},
   "log-collector"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "target"=>"mgmt",
         "help-string"=>"All managed log_collectors"}},
     "connected"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"connected",
         "target"=>"mgmt",
         "handler"=>"show_log_collectors_connected",
         "help-string"=>"All connected log_collectors"}},
     "serial-number"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"serial-number",
         "type"=>"string",
         "help-string"=>"log collector name",
         "complete-handler"=>
          "$config/devices/entry/log-collector/entry/@name"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-collector",
       "target"=>"mgmt",
       "help-string"=>"Show managed log collectors",
       "handler"=>"show_log_collectors_all"}},
   "inter-log-collector"=>
    {"detail"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"detail",
         "target"=>"mgmt",
         "help-string"=>"inter log collector details"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"inter-log-collector",
       "target"=>"mgmt",
       "help-string"=>"Inter log-collector connection",
       "handler"=>"show_inter_log_collectors_all"}},
   "lc-query"=>
    {"id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"id",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"4294967295",
         "target"=>"mgmt"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"lc-query",
       "target"=>"mgmt",
       "handler"=>"show_lc_query_job",
       "help-string"=>"Show log-collector query"}},
   "lcaas-status"=>
    {"overview"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"overview",
         "target"=>"mgmt",
         "help-string"=>"LC as a service status overview",
         "handler"=>"show_lcaas_status_overview"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"lcaas-status",
       "target"=>"mgmt",
       "help-string"=>"Show managed log collectors as a service"}},
   "log-collector-group"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "target"=>"mgmt",
         "help-string"=>"All managed log_collector_groups"}},
     "name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"log collector group name",
         "complete-handler"=>
          "$config/devices/entry/log-collector-group/entry/@name"}},
     "from"=>
      {"ring-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ring-name",
           "type"=>"string",
           "help-string"=>"get log collectors in the group from ring file",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"from", "target"=>"mgmt"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-collector-group",
       "target"=>"mgmt",
       "help-string"=>"Show managed log collector groups",
       "handler"=>"show_log_collector_grps"}},
   "wildfire-appliance"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "target"=>"mgmt",
         "help-string"=>"All managed wildfire appliances"}},
     "connected"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"connected",
         "target"=>"mgmt",
         "handler"=>"show_wildfire_appliances_connected",
         "help-string"=>"All connected wildfire appliances"}},
     "info"=>
      {"serial-number"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serial-number",
           "type"=>"string",
           "help-string"=>"wildfire appliance name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "target"=>"mgmt",
         "help-string"=>"wildfire appliance info"}},
     "statistics"=>
      {"serial-number"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serial-number",
           "type"=>"string",
           "help-string"=>"wildfire appliance name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance/entry/@name"}},
       "days"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"days",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"31",
           "help-string"=>"Set how many days to look back"}},
       "hours"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"hours",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"24",
           "help-string"=>"Set how many hours to look back"}},
       "minutes"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"minutes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"60",
           "help-string"=>"Set how many minutes to look back"}},
       "type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"statistics",
         "target"=>"mgmt",
         "help-string"=>"wildfire appliance statistics",
         "handler"=>"show_wildfire_appliances_stats"}},
     "last-device-registration"=>
      {"all"=>
        {"serial-number"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"serial-number",
             "type"=>"string",
             "help-string"=>"wildfire appliance name",
             "complete-handler"=>
              "$config/devices/entry/wildfire-appliance/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "help-string"=>"Show list of all registered firewalls",
           "handler"=>"show_wildfire_appliance_firewalls_registered_all"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"last-device-registration",
         "help-string"=>"Show list of latest registration activities"}},
     "vm-images"=>
      {"serial-number"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serial-number",
           "type"=>"string",
           "help-string"=>"wildfire appliance name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"vm-images",
         "heelp-string"=>"Show VM images",
         "handler"=>"show_wildfire_appliance_vm_images"}},
     "devices-reporting-data"=>
      {"serial-number"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serial-number",
           "type"=>"string",
           "help-string"=>"wildfire appliance name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"devices-reporting-data",
         "help-string"=>
          "Show list of devices reporting data to this appliance",
         "handler"=>"show_wildfire_appliance_firewalls_reporting_data"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"wildfire-appliance",
       "target"=>"mgmt",
       "help-string"=>"Show managed wildfire appliances",
       "handler"=>"show_wildfire_appliances_all"}},
   "wildfire-appliance-cluster"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"all",
         "target"=>"mgmt",
         "help-string"=>"All managed wildfire appliance clusters"}},
     "info"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "help-string"=>"wildfire appliance cluster name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance-cluster/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "target"=>"mgmt",
         "help-string"=>"wildfire appliance cluster info"}},
     "statistics"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "help-string"=>"wildfire appliance cluster name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance-cluster/entry/@name"}},
       "days"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"days",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"31",
           "help-string"=>"Set how many days to look back"}},
       "hours"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"hours",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"24",
           "help-string"=>"Set how many hours to look back"}},
       "minutes"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"minutes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"60",
           "help-string"=>"Set how many minutes to look back"}},
       "type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"statistics",
         "target"=>"mgmt",
         "help-string"=>"wildfire appliance cluster statistics",
         "handler"=>"show_wildfire_appliances_cluster_stats"}},
     "last-device-registration"=>
      {"all"=>
        {"name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"wildfire appliance cluster name",
             "complete-handler"=>
              "$config/devices/entry/wildfire-appliance-cluster/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "help-string"=>"Show list of all registered firewalls",
           "handler"=>
            "show_wildfire_appliance_cluster_firewalls_registered_all"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"last-device-registration",
         "help-string"=>
          "Show list of firewalls registered to appliances in the cluster"}},
     "devices-reporting-data"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "help-string"=>"wildfire appliance cluster name",
           "complete-handler"=>
            "$config/devices/entry/wildfire-appliance-cluster/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"devices-reporting-data",
         "help-string"=>
          "Show list of firewalls reporting data to appliances in this cluster",
         "handler"=>
          "show_wildfire_appliance_cluster_firewalls_reporting_data_all"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"wildfire-appliance-cluster",
       "target"=>"mgmt",
       "help-string"=>"Show managed wildfire appliance clusters",
       "handler"=>"show_wildfire_appliance_clusters"}},
   "jobs"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"all",
         "target"=>"mgmt",
         "handler"=>"show_jobs",
         "help-string"=>"All jobs"}},
     "pending"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"pending",
         "target"=>"mgmt",
         "handler"=>"show_jobs_pending",
         "help-string"=>"Pending jobs"}},
     "processed"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"processed",
         "target"=>"mgmt",
         "handler"=>"show_jobs_processed",
         "help-string"=>"Completed/active jobs"}},
     "id"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"id",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"4294967295",
         "target"=>"mgmt",
         "handler"=>"show_jobs",
         "help-string"=>"By id"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"jobs",
       "target"=>"mgmt",
       "handler"=>"show_jobs",
       "help-string"=>"Show management server jobs"}},
   "threat"=>
    {"id"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"id",
         "type"=>"rangelistspec",
         "min"=>"1",
         "max"=>"4294967295",
         "target"=>"mgmt",
         "handler"=>"show_threat",
         "help-string"=>"By id"}},
     "fqdn"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"fqdn",
         "type"=>"string",
         "maxlen"=>"4096",
         "target"=>"mgmt",
         "handler"=>"show_threat",
         "help-string"=>"By id and misc/fqdn"}},
     "match"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"match",
         "type"=>"string",
         "maxlen"=>"2048",
         "target"=>"mgmt",
         "handler"=>"show_threat_match",
         "help-string"=>"By id or signature or fqdn"}},
     "match-id"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"match-id",
         "type"=>"rangelistspec",
         "min"=>"1",
         "max"=>"4294967295",
         "target"=>"mgmt",
         "handler"=>"show_threat_match_id",
         "help-string"=>"By id"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"threat",
       "target"=>"mgmt",
       "handler"=>"show_threat",
       "help-string"=>"Show threat id descriptions"}},
   "policy-app"=>
    {"filter"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"filter",
         "type"=>"string",
         "maxlen"=>"5096",
         "regex"=>".*",
         "target"=>"mgmt",
         "help-string"=>"Filter string"}},
     "vsysName"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsysName",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Device Group Name"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Rulebase-Type"}},
     "position"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"position",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Position"}},
     "sortBy"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"sortBy",
         "type"=>"string",
         "maxlen"=>"126",
         "target"=>"mgmt",
         "help-string"=>"Sort-By field name"}},
     "nrec"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"nrec",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"200",
         "target"=>"mgmt",
         "help-string"=>"Total number of records"}},
     "anchor"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"anchor",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"65534",
         "target"=>"mgmt",
         "help-string"=>"Start index of the records"}},
     "timeframe"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"timeframe",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"10000",
         "target"=>"mgmt",
         "help-string"=>"Number of days"}},
     "pageContext"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pageContext",
         "type"=>"string",
         "maxlen"=>"126",
         "target"=>"mgmt",
         "help-string"=>"page context field (eg: app_usage)"}},
     "direction"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"direction",
         "type"=>"string",
         "maxlen"=>"126",
         "target"=>"mgmt",
         "help-string"=>"direction (ascending/descending)"}},
     "recordInfo"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"recordInfo",
         "type"=>"string",
         "maxlen"=>"5096",
         "regex"=>".*",
         "target"=>"mgmt",
         "internal"=>"yes",
         "help-string"=>"record info string"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"policy-app",
       "hidden"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_policy_app",
       "help-string"=>"Show Policy App details"}},
   "policy-app-details"=>
    {"rules"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member", "type"=>"string", "maxlen"=>"64", "regex"=>".*"}},
       :obj=>:array,
       :attributes=>{"name"=>"rules", "help-string"=>"List of Rules"}},
     "resultfields"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member", "type"=>"string", "maxlen"=>"64", "regex"=>".*"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"resultfields", "help-string"=>"List of Result Fields"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Rulebase-Type"}},
     "position"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"position",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Position"}},
     "vsysName"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsysName",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Device Group Name"}},
     "trafficTimeframe"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"trafficTimeframe",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"10000",
         "target"=>"mgmt",
         "help-string"=>"Number of days"}},
     "appsSeenTimeframe"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"appsSeenTimeframe",
         "type"=>"string",
         "maxlen"=>"64",
         "target"=>"mgmt",
         "help-string"=>"Number of days: Any or 1-1000"}},
     "summary"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"summary",
         "type"=>"string",
         "min"=>"2",
         "max"=>"3",
         "target"=>"mgmt",
         "help-string"=>"Summary of result"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"policy-app-details",
       "hidden"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_policy_app_details",
       "help-string"=>"Show Policy App details"}},
   "policy-app-statistics"=>
    {"vsysName"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsysName",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Device Group Name"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Rulebase-Type"}},
     "position"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"position",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Position"}},
     "timeframe"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"timeframe",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"10000",
         "target"=>"mgmt",
         "help-string"=>"Number of days"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"policy-app-statistics",
       "hidden"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_policy_app_stats",
       "help-string"=>"Show Policy App Statistics"}},
   "location"=>
    {"ip"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"ip",
         "type"=>"ipspec",
         "unicast-only"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_location",
         "help-string"=>"By IP address"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"location",
       "target"=>"mgmt",
       "handler"=>"show_location",
       "help-string"=>"Show geographic location"}},
   "reportd"=>
    {"logging-service"=>
      {"jobs"=>
        {:obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"jobs",
           "target"=>"mgmt",
           "handler"=>"show_ascm_jobs",
           "help-string"=>"All Logging Service jobs"}},
       "job-key"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"job-key",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^[a-zA-Z0-9_\\.*-]+$",
           "target"=>"mgmt",
           "handler"=>"show_ascm_job",
           "help-string"=>"Logging Service job-key"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"logging-service",
         "target"=>"mgmt",
         "help-string"=>"Logging Service jobs"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"reportd",
       "target"=>"mgmt",
       "help-string"=>"Show reportd Logging Service jobs"}},
   "report"=>
    {"directory-listing"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"directory-listing",
         "target"=>"script",
         "handler"=>
          "ls -lhRtr /opt/pancfg/mgmt/reports /opt/pancfg/mgmt/custom-reports /opt/pancfg/mgmt/vsys-reports /opt/pancfg/mgmt/pdf-reports"}},
     "id"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"id",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"4294967295",
         "target"=>"mgmt",
         "handler"=>"show_report",
         "help-string"=>"By id"}},
     "jobs"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"jobs",
         "target"=>"mgmt",
         "handler"=>"show_report_jobs",
         "help-string"=>"All jobs"}},
     "cache"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"info", "handler"=>"show_report_cache_info"}},
       "cache_id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"cache_id",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "target"=>"mgmt",
           "handler"=>"show_report_cache_entry",
           "help-string"=>"By cache entry id"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"cache",
         "roles"=>
          "superuser,superreader,deviceadmin,devicereader,panorama-admin",
         "target"=>"mgmt"}},
     "exec_mgr"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info", "handler"=>"show_report_exec_mgr_info"}},
       "batch_id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"batch_id",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "target"=>"mgmt",
           "handler"=>"show_report_exec_mgr_batch",
           "help-string"=>"By batch id"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"exec_mgr",
         "roles"=>
          "superuser,superreader,deviceadmin,devicereader,panorama-admin",
         "target"=>"mgmt"}},
     "activity-timeline"=>
      {"reportid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reportid",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "target"=>"mgmt",
           "help-string"=>"By report-ids in reportjobq"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"activity-timeline"}},
     "distributed-states"=>
      {"reportid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reportid",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "target"=>"mgmt",
           "help-string"=>"By report-ids in reportjobq"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"distributed-states"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"report",
       "roles"=>
        "superuser,superreader,deviceadmin,devicereader,panorama-admin",
       "target"=>"mgmt",
       "handler"=>"show_report",
       "help-string"=>"Show report jobs"}},
   "query"=>
    {"jobid"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"jobid",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"4294967295",
         "help-string"=>"Distributed query states across CGs"}},
     "result"=>
      {"id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"id",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "help-string"=>"id"}},
       "skip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"skip",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4294967295",
           "help-string"=>"skip logs"}},
       :obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"result",
         "target"=>"mgmt",
         "handler"=>"show_query",
         "help-string"=>"All jobs"}},
     "jobs"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"jobs",
         "target"=>"mgmt",
         "handler"=>"show_query_jobs",
         "help-string"=>"All jobs"}},
     "corr-detail"=>
      {"id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"id",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"4294967295",
           "help-string"=>"By id"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"corr-detail",
         "optional"=>"yes",
         "internal"=>"yes",
         "target"=>"mgmt",
         "handler"=>"show_query",
         "help-string"=>"Query corr detail job"}},
     "effective-queries"=>
      {"query"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"query",
           "type"=>"string",
           "optional"=>"yes",
           "maxlen"=>"2048",
           "regex"=>".*",
           "target"=>"mgmt"}},
       "logtypes"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "optional"=>"yes",
             "target"=>"mgmt"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"logtypes", "optional"=>"yes", "target"=>"mgmt"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"effective-queries",
         "target"=>"mgmt",
         "handler"=>"show_query_expand",
         "help-string"=>"Effective queries"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"query",
       "target"=>"mgmt",
       "handler"=>"show_query",
       "help-string"=>"Show query jobs"}},
   "dlc-query-ui"=>
    {"id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"id",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"4294967295",
         "help-string"=>"By id"}},
     "skip"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"skip",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"1000",
         "help-string"=>"skip logs for paging"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"dlc-query-ui",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_dlc_query",
       "help-string"=>"Query DLC jobs"}},
   "logging-status"=>
    {"all"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"all", "help-string"=>"All connected devices"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"Device serial no",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"logging-status",
       "target"=>"mgmt",
       "handler"=>"show_log_buffering_info",
       "help-string"=>"Show logging status and info"}},
   "hsm"=>
    {"client-address"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"client-address",
         "help-string"=>"Show HSM client ip address.",
         "handler"=>"hsm_show_client_address"}},
     "ha-status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"ha-status",
         "help-string"=>
          "Show HSM HA setting and members. Only valid for Luna SA",
         "handler"=>"hsm_show_ha_status"}},
     "client-version"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"client-version",
         "help-string"=>"Show HSM LUNASA client version",
         "handler"=>"hsm_show_cli_version"}},
     "client-version-list"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"client-version-list",
         "help-string"=>"Show available LUNASA client version",
         "handler"=>"hsm_show_cli_version_list"}},
     "info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "help-string"=>"Show HSM info",
         "handler"=>"hsm_show_info"}},
     "nshield-connect-rfs"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"nshield-connect-rfs",
         "help-string"=>
          "Show nshield-connect RFS info. Only valid for nshield connect",
         "handler"=>"hsm_show_rfs_info"}},
     "state"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"state",
         "help-string"=>"Show HSM connection state",
         "handler"=>"hsm_show_state"}},
     "servers"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"servers",
         "help-string"=>"Show HSM registered servers",
         "handler"=>"hsm_show_servers"}},
     "slots"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"slots",
         "help-string"=>"Show HSM slots",
         "handler"=>"hsm_show_slots"}},
     "config"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"config",
         "internal"=>"yes",
         "help-string"=>"Show HSM config",
         "handler"=>"hsm_show_config"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"hsm",
       "target"=>"cryptod",
       "help-string"=>"Show HSM information"}},
   "dlsrvr"=>
    {"poll-interval"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"poll-interval",
         "help-string"=>
          "Show the polling interval of download jobs (in seconds)",
         "target"=>"script",
         "handler"=>
          "echo Polling interval: `/usr/local/bin/sdb -e -n cfg.dlsrvr.pollint`"}},
     "server"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"server",
         "help-string"=>
          "Show the overridden server address used for deployment",
         "target"=>"script",
         "handler"=>
          "echo Server: `/usr/local/bin/sdb -e -n cfg.dlsrvr.server`"}},
     "distribute"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"distribute",
         "help-string"=>"Show the Deployment across HA setting",
         "target"=>"script",
         "handler"=>
          "echo Deployment across HA: `/usr/local/bin/sdb -e -n cfg.dlsrvr.distribute`"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"dlsrvr",
       "target"=>"mgmt",
       "help-string"=>"Show DLSRVR settings"}},
   "api"=>
    {"key"=>
      {"expiration"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"expiration",
           "help-string"=>
            "Shows the time after which any API keys should be generated. Any key before this will be treated as invalid.",
           "target"=>"script",
           "handler"=>"/usr/local/bin/sdb -e -n cfg.api.expiration-ts"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"key", "help-string"=>"All API key related operations"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"api", "help-string"=>"All API related operations"}},
   "usage"=>
    {"plugins"=>
      {"format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "default"=>"xml",
           "optional"=>"yes",
           "help-string"=>"plugin usage output format"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"plugins",
         "help-string"=>"Plugin specific information",
         "handler"=>"show_plugin_usage_handler"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"usage",
       "help-string"=>"Collect Panorama specific plugin information"}},
   "system"=>
    {"software"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"Status information",
           "target"=>"mgmt",
           "handler"=>"show_software_status_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"software", "help-string"=>"Software information"}},
     "masterkey-properties"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"masterkey-properties",
         "help-string"=>"Master key properties",
         "handler"=>"show_system_masterkey_properties_handler"}},
     "info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "help-string"=>"System information",
         "handler"=>"show_system_info_handler",
         "verify-resp"=>"yes",
         "verify-id"=>"ssinfo-resp"}},
     "last-commit-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"last-commit-info",
         "help-string"=>"System last commit detail information",
         "handler"=>"show_system_lastcommit_info_handler"}},
     "resources"=>
      {"follow"=>
        {:obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"follow",
           "cli-handler"=>"cli-top-handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"resources",
         "help-string"=>"System resources",
         "target"=>"script",
         "handler"=>"/usr/bin/top -b -n1 | /bin/sed -e 's/\\broot\\b//'"}},
     "crypto"=>
      {"entropy-status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"entropy-status",
           "help-string"=>"Show systems entropy collection status",
           "target"=>"dagger",
           "handler"=>"entropy_status"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"crypto",
         "help-string"=>"Crypto information",
         "prune-on"=>"non-fips-mode"}},
     "disk"=>
      {"details"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"details",
           "handler"=>"panlogs_vld_mgr_handler.status",
           "help-string"=>"Get detailed disks status",
           "timeout"=>"120"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disk",
         "help-string"=>"Disks information",
         "target"=>"dagger"}},
     "panorama-progress-status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"panorama-progress-status",
         "handler"=>"panlogs_vld_mgr_handler.panorama_status",
         "prune-on-sdb"=>"cfg.cms.mode=panorama,cfg.cms.mode=logger",
         "help-string"=>"Get panorama progress status",
         "target"=>"dagger"}},
     "disk-space"=>
      {"files"=>
        {:obj=>:sequence,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"files",
           "help-string"=>"Report filesystem file usage",
           "target"=>"script",
           "handler"=>"/bin/df -i"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"disk-space",
         "help-string"=>"Report filesystem disk space usage",
         "target"=>"script",
         "handler"=>"/bin/df -h"}},
     "disk-partition"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"disk-partition",
         "help-string"=>"Show disk partion information",
         "target"=>"script",
         "handler"=>"/sbin/fdisk -l"}},
     "logdb-quota"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"logdb-quota",
         "help-string"=>"Report logbd quotas",
         "target"=>"mgmt",
         "handler"=>"show_system_logdb_quota_handler"}},
     "search-engine-quota"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"search-engine-quota",
         "help-string"=>"Report search engine quotas",
         "target"=>"script",
         "handler"=>"/usr/local/bin/es_purge.py -m s"}},
     "serialmap"=>
      {:obj=>:sequence,
       :attributes=>
        {"internal"=>"yes",
         "name"=>"serialmap",
         "help-string"=>"Serial number to hostname, vsys id to name",
         "target"=>"mgmt",
         "handler"=>"show_serialmap_handler"}},
     "logdb-fields"=>
      {"type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"logdb-fields",
         "internal"=>"yes",
         "help-string"=>"Logdb fields",
         "target"=>"mgmt",
         "handler"=>"show_system_logdb_fields_handler"}},
     "log-partition-size"=>
      {:obj=>:sequence,
       :attributes=>
        {"internal"=>"yes",
         "name"=>"log-partition-size",
         "help-string"=>"Report log partition size",
         "target"=>"mgmt",
         "handler"=>"show_system_log_partition_size_handler"}},
     "files"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"files",
         "help-string"=>"List important files in the system",
         "target"=>"script",
         "handler"=>"/bin/ls -lhRtr /var/cores/ /opt/panlogs/cores/"}},
     "state"=>
      {"filter"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"filter",
           "optional"=>"yes",
           "help-string"=>"Filter by subtree/wildcard",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^[a-zA-Z0-9_\\.*-]+$"}},
       "filter-pretty"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"filter-pretty",
           "optional"=>"yes",
           "help-string"=>"Filter by subtree/wildcard w/ pretty printing",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^[a-zA-Z0-9_\\.*-]+$"}},
       "browser"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"browser",
           "optional"=>"yes",
           "help-string"=>"Navigate in a text-mode browser",
           "target"=>"cli",
           "cli-handler"=>"show-system-state-browser-handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"state",
         "help-string"=>"System state",
         "handler"=>"show_system_state_handler"}},
     "setting"=>
      {"url-database"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"url-database",
           "target"=>"mgmt",
           "help-string"=>"URL database",
           "handler"=>"show_system_setting_urldb_handler"}},
       "target"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"target",
           "target"=>"mgmt",
           "help-string"=>"target device group or template",
           "handler"=>"show_target_dg_tpl_handler"}},
       "rule-hit-count"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"rule-hit-count",
           "target"=>"mgmt",
           "handler"=>"is_rule_hit_feature",
           "help-string"=>"Rule hit count feature enabled or disabled"}},
       "mp-memory-monitor"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"mp-memory-monitor",
           "target"=>"script",
           "help-string"=>"Show monitoring of management memory",
           "handler"=>
            "echo -n 'Management memory monitor Enabled: '; /usr/local/bin/sdb -n cfg.monitor.memory"}},
       :obj=>:union,
       :attributes=>{"name"=>"setting", "help-string"=>"show system setting"}},
     "nfs"=>
      {"dynamic-logging-partition"=>
        {"threshold"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"threshold",
             "target"=>"script",
             "handler"=>
              "/usr/local/bin/sdb cfg.panlogs.nfs.runtime['failures'] 2>&1",
             "help-string"=>"Show NFS test failure threshold"}},
         "failures"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"failures",
             "target"=>"script",
             "handler"=>"/usr/local/bin/panlogsnfs --show-failure",
             "help-string"=>"Show NFS test failures"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"dynamic-logging-partition",
           "help-string"=>"dynamic logging partition"}},
       :obj=>:union,
       :attributes=>{"name"=>"nfs", "help-string"=>"NFS mounts"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"system",
       "help-string"=>"Show system state and information",
       "target"=>"mgmt"}},
   "deployment-update-schedule"=>
    {"status"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"Name of dynamic update schedule",
           "complete-handler"=>
            "$config/devices/entry/deviceconfig/system/deployment-update-schedule/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"status",
         "handler"=>"show_deployment_update_schedule_status",
         "help-string"=>"Show deployment update schedule status"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"deployment-update-schedule",
       "help-string"=>"Show deployment update schedule"}},
   "dhcp"=>
    {"mgmt-interface-state"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"mgmt-interface-state",
         "target"=>"mgmt",
         "type"=>"enum",
         "handler"=>"show_dhcp_interface_state",
         "help-string"=>"Show interface state"}},
     "log-collector"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector",
         "optional"=>"yes",
         "type"=>"string",
         "complete-handler"=>"$config/devices/entry/log-collector/entry/@name",
         "help-string"=>"Show DHCP runtime information from log collector"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"dhcp", "target"=>"mgmt", "help-string"=>"Show DHCP data"}},
   "virt"=>
    {"nsx"=>
      {"address-group"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"address-group",
           "handler"=>"show-nsx-addr-grp-sec-grp-map",
           "help-string"=>"Get security groups for address groups"}},
       "steering-rule"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"steering-rule",
           "handler"=>"show-nsx-sec-policy-steering-map",
           "help-string"=>"Get steering rules for security policies"}},
       "steering-section"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"steering-section",
           "handler"=>"show-nsx-steering-section",
           "help-string"=>"Get NSX steering sections"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"nsx",
         "help-string"=>"VMware service manager related commands"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"virt",
       "target"=>"mgmt",
       "help-string"=>"Manage integrated thirdparty products"}},
   "user"=>
    {"ip-user-mapping-mp"=>
      {"all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         "type"=>
          {:obj=>:element,
           :attributes=>{"name"=>"type", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "optional"=>"yes",
           "help-string"=>"Show all user/groups"}},
       "ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "optional"=>"yes",
           "help-string"=>"Show user/group info for IP address"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "optional"=>"yes",
           "min"=>"1",
           "max"=>"10000",
           "help-string"=>"Limit"}},
       "start-point"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"start-point",
           "type"=>"rangedint",
           "optional"=>"yes",
           "min"=>"1",
           "max"=>"512000",
           "help-string"=>"Start point"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ip-user-mapping-mp",
         "needvsys"=>"yes",
         "target"=>"useridd",
         "handler"=>"show_mp_user",
         "timeout"=>"120",
         "help-string"=>"Show ip-user-mapping in management-plane"}},
     "group"=>
      {"device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"string",
           "complete-handler"=>"dg_complete_handler",
           "help-string"=>"Device group name"}},
       "list"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"list", "help-string"=>"List All groups"}},
       "name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"1023",
           "regex"=>"^[^[:cntrl:]]+$",
           "complete-handler"=>"group_complete_handler",
           "help-string"=>"Show group's members"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"group",
         "handler"=>"show_group",
         "help-string"=>"Show user groups data"}},
     "user-id-agent"=>
      {"statistics"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "handler"=>"show_uia_stats",
           "help-string"=>"Show user-id-agent statistics"}},
       "state"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"state",
           "handler"=>"show_uia_state",
           "type"=>"multiple",
           "help-string"=>"Show state of one or all agents",
           "complete-handler"=>"uia_complete_handler",
           "timeout"=>"300"}},
       "config"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all", "help-string"=>"Show all user-id agents"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "maxlen"=>"31",
             "help-string"=>"user-id-agent name",
             "complete-handler"=>"uia_complete_handler",
             "timeout"=>"300"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"config",
           "needvsys"=>"yes",
           "handler"=>"show_agent_config",
           "help-string"=>"Show client config"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"user-id-agent",
         "needvsys"=>"yes",
         "help-string"=>"Show user-id-agent info"}},
     "device-groups"=>
      {"state"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"state",
           "handler"=>"show_dg_state",
           "type"=>"multiple",
           "help-string"=>"Show state of one or all device groups",
           "complete-handler"=>"dg_complete_handler",
           "timeout"=>"300"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"device-groups",
         "needvsys"=>"yes",
         "help-string"=>"Show device-group info"}},
     "user-id-service"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "handler"=>"show_uia_srv_status",
           "help-string"=>"Show user-id service status"}},
       "client"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"client",
           "handler"=>"show_uia_srv_client",
           "type"=>"multiple",
           "help-string"=>"Show user-id service clients"}},
       "ipuser-update-list"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"ipuser-update-list",
           "handler"=>"show_uia_srv_update_list",
           "help-string"=>"Show user-id service IP user update list"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"user-id-service",
         "needvsys"=>"yes",
         "help-string"=>"Show user-id service info"}},
     "xml-api"=>
      {"multiusersystem"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"multiusersystem",
           "handler"=>"show_xml_tsa_stats",
           "help-string"=>"Show multiusersytem statistics"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"xml-api",
         "needvsys"=>"yes",
         "help-string"=>"Show XML API info"}},
     "email-lookup"=>
      {"email"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"email",
           "type"=>"multiple",
           "maxlen"=>"255",
           "help-string"=>"email address"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"email-lookup",
         "needvsys"=>"yes",
         "timeout"=>"20",
         "handler"=>"show_email_lookup",
         "help-string"=>"Lookup user-id user for given email addresses"}},
     "hip-report"=>
      {"user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"1023",
           "complete-handler"=>"hip_report_user_complete_handler"}},
       "ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "complete-handler"=>"hip_report_ip_complete_handler"}},
       "computer"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"computer",
           "type"=>"string",
           "maxlen"=>"255",
           "regex"=>"^.+$",
           "complete-handler"=>"hip_report_computer_complete_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hip-report",
         "target"=>"useridd",
         "needvsys"=>"yes",
         "handler"=>"dump_hip_report",
         "help-string"=>"Show HIP report"}},
     "user-ids"=>
      {"device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"string",
           "complete-handler"=>"dg_complete_handler",
           "help-string"=>"Device group name"}},
       "all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "optional"=>"yes",
           "help-string"=>"Show all user/groups"}},
       "match-user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"match-user",
           "type"=>"string",
           "regex"=>"^[^[:cntrl:]]+$",
           "optional"=>"yes",
           "help-string"=>"Show only the user(s) that match the string"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"user-ids",
         "target"=>"useridd",
         "needvsys"=>"yes",
         "handler"=>"show_userid",
         "help-string"=>"Show users and the groups they belong to"}},
     "user-attributes"=>
      {"device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"string",
           "complete-handler"=>"dg_complete_handler",
           "help-string"=>"Device group name"}},
       "user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user",
           "type"=>"multiple",
           "maxlen"=>"255",
           "help-string"=>"Username (Primary/Alternate)"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"user-attributes",
         "needvsys"=>"yes",
         "timeout"=>"20",
         "handler"=>"show_userprefix_attributes",
         "help-string"=>"Show users and all attributes"}},
     "credential-filter"=>
      {"statistics"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "help-string"=>"Show credential enforcement filter statistics"}},
       "group-mapping"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"group-mapping",
           "help-string"=>
            "Show Group-Mapping usernames and profile IDs for a vsys"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"credential-filter",
         "needvsys"=>"yes",
         "handler"=>"show_cred_filter_stats",
         "help-string"=>"Show credential enforcement filter status"}},
     "ldap-device-serialno"=>
      {"all"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "optional"=>"yes",
           "help-string"=>
            "Show all devices in ldap device serial number database"}},
       "serialno"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"serialno",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>
            "Show ldap device serial number database for hostid"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ldap-device-serialno",
         "target"=>"useridd",
         "handler"=>"show_ldap_device_serialno",
         "help-string"=>"Show devices in ldap device serial number database"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"user",
       "help-string"=>"Show user identification information",
       "target"=>"useridd"}},
   "userid"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>{"name"=>"vsys", "type"=>"string", "maxlen"=>"31"}},
     "substring"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"substring",
         "type"=>"string",
         "maxlen"=>"63"}},
     "max-count"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"max-count",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"65535",
         "default"=>"100"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"userid",
       "internal"=>"yes",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "handler"=>"show_username",
       "help-string"=>"Show userid completions by substring"}},
   "usergroup"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>{"name"=>"vsys", "type"=>"string", "maxlen"=>"31"}},
     "substring"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"substring",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"63"}},
     "max-count"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"max-count",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"65535",
         "default"=>"100"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes", "name"=>"type", "type"=>"string", "maxlen"=>"31"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"usergroup",
       "internal"=>"yes",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "handler"=>"show_usergroup",
       "help-string"=>"Show user group completions by substring"}},
   "all-usergroups"=>
    {"substring"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"substring",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"63"}},
     "max-count"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"max-count",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"65535",
         "default"=>"100"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes", "name"=>"type", "type"=>"string", "maxlen"=>"31"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"all-usergroups",
       "internal"=>"yes",
       "target"=>"useridd",
       "handler"=>"show_usergroup_all",
       "help-string"=>"Show all user group completions"}},
   "usergroup-members"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>{"name"=>"vsys", "type"=>"string", "maxlen"=>"31"}},
     "group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"group",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"1023"}},
     "substring"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"substring",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"63"}},
     "max-count"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"max-count",
         "type"=>"rangedint",
         "min"=>"1",
         "default"=>"100"}},
     "start"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"start",
         "type"=>"rangedint",
         "min"=>"0",
         "default"=>"0"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"usergroup-members",
       "internal"=>"yes",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "handler"=>"show_usergroup_members",
       "help-string"=>"Show user group member completions by substring"}},
   "usergroup-tags"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>{"name"=>"vsys", "type"=>"string", "maxlen"=>"31"}},
     "group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"group",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"63"}},
     "filter"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"filter", "type"=>"string", "regex"=>".*", "maxlen"=>"2047"}},
     "users"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$"}},
       :obj=>:array,
       :attributes=>
        {"optional"=>"yes", "name"=>"users", "help-string"=>"user list"}},
     "substring"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"substring",
         "type"=>"string",
         "maxlen"=>"63"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"usergroup-tags",
       "internal"=>"yes",
       "target"=>"useridd",
       "needvsys"=>"yes",
       "handler"=>"show_usergroup_tags",
       "help-string"=>"Show user group tags completions by substring"}},
   "redistribution"=>
    {"agent"=>
      {"statistics"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "handler"=>"show_agent_stats",
           "help-string"=>"Show redistribution-agent statistics"}},
       "state"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"state",
           "handler"=>"show_agent_state",
           "type"=>"multiple",
           "help-string"=>"Show state of one or all agents",
           "complete-handler"=>"agent_complete_handler",
           "timeout"=>"300"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"agent",
         "needvsys"=>"yes",
         "help-string"=>"Show redistribution agent info"}},
     "service"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "handler"=>"show_redistribution_status",
           "help-string"=>"Show redistribution service status"}},
       "client"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"client",
           "handler"=>"show_redistribution_client",
           "type"=>"multiple",
           "help-string"=>"Show on or all redistribution clients"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"service",
         "needvsys"=>"yes",
         "help-string"=>"Show redistribution service info"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"redistribution",
       "help-string"=>"Show redistribution information",
       "target"=>"distributord"}},
   "iot"=>
    {"ip-device-mapping-mp"=>
      {"all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "optional"=>"yes",
           "help-string"=>"Show all devices"}},
       "ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "optional"=>"yes",
           "help-string"=>"Show device info for IP address"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ip-device-mapping-mp",
         "needvsys"=>"yes",
         "target"=>"iotd",
         "handler"=>"show_mp_device",
         "timeout"=>"120",
         "help-string"=>"Show ip-devide-mapping in management-plane"}},
     "host-cache"=>
      {"all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "optional"=>"yes",
           "help-string"=>"Show all devices"}},
       "hostid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hostid",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"hostid of a device"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"host-cache",
         "needvsys"=>"yes",
         "needdp"=>"yes",
         "target"=>"iotd",
         "handler"=>"show_host_cache",
         "timeout"=>"120",
         "help-string"=>
          "Show hostid on MP, including quarantined and not quarantined entries"}},
     "policy-recommendation"=>
      {"max-count"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"max-count",
           "type"=>"rangedint",
           "min"=>"1",
           "default"=>"100"}},
       "start"=>
        {:obj=>:element,
         :attributes=>
          {"optional"=>"yes",
           "name"=>"start",
           "type"=>"rangedint",
           "min"=>"0",
           "default"=>"0"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"policy-recommendation",
         "internal"=>"yes",
         "target"=>"iotd",
         "handler"=>"show_policy_recommendation",
         "timeout"=>"120",
         "help-string"=>"Show IoT policy recommendation"}},
     "icd"=>
      {"statistics"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "optional"=>"yes",
             "help-string"=>"Show all counters"}},
         "cache"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"cache",
             "optional"=>"yes",
             "help-string"=>"Show icd cache counters"}},
         "conn"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"conn",
             "optional"=>"yes",
             "help-string"=>"Show gRPC connection counters"}},
         "verdict"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"verdict",
             "optional"=>"yes",
             "help-string"=>"Show verdict counters"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"statistics",
           "help-string"=>"Show icd counter information"}},
       "version"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"version",
           "optional"=>"yes",
           "help-string"=>"Show ICD version"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"icd",
         "target"=>"iotd",
         "handler"=>"show_icd",
         "timeout"=>"5",
         "help-string"=>"Show information in identity client daemon"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"iot",
       "help-string"=>"Show iot information",
       "target"=>"iotd"}},
   "management-tunnel"=>
    {"certificates"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"certificates",
         "target"=>"dagger",
         "handler"=>"mgmt_tunnel.show_certs"}},
     "list-sas"=>
      {"sas"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"sas",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"Tunnel name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"list-sas",
         "target"=>"dagger",
         "handler"=>"mgmt_tunnel.show_sas",
         "help-string"=>"Show active tunnel IKE_SAs information"}},
     "list-conns"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"list-conns",
         "target"=>"dagger",
         "handler"=>"mgmt_tunnel.show_conns",
         "help-string"=>"Show loaded connection information"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"management-tunnel", "help-string"=>"Management tunnel stats"}},
   "netstat"=>
    {"route"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"route",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display routing table"}},
     "interfaces"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"interfaces",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display interface table"}},
     "groups"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"groups",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display multicast group memberships"}},
     "statistics"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"statistics",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display networking statistics (like SNMP)"}},
     "verbose"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"verbose",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"be verbose"}},
     "numeric"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"numeric",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"don't resolve names"}},
     "numeric-hosts"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"numeric-hosts",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"don't resolve host names"}},
     "numeric-ports"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"numeric-ports",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"don't resolve port names"}},
     "numeric-users"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"numeric-users",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"don't resolve user names"}},
     "symbolic"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"symbolic",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"resolve hardware names"}},
     "extend"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"extend",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display other/more information"}},
     "programs"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"programs",
         "type"=>"bool",
         "optional"=>"yes",
         "roles"=>"superuser, superreader",
         "help-string"=>"display PID/Program name for sockets"}},
     "continuous"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"continuous",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"continuous listing"}},
     "listening"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"listening",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display listening server sockets"}},
     "all"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"all",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display all sockets (default: connected)"}},
     "timers"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"timers",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display timers"}},
     "fib"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"fib",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display Forwarding Information Base (default)"}},
     "cache"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"cache",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"display routing cache instead of FIB"}},
     "notrim"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"notrim",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"stop trimming long addresses"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"netstat",
       "xmlapi-exposed"=>"no",
       "target"=>"dagger",
       "handler"=>"netstat",
       "help-string"=>"Print network connections and statistics"}},
   "new-app"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"new-app",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"show_new_app",
       "help-string"=>"Show New Application"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"show",
     "target"=>"mgmt",
     "help-string"=>"Show operational parameters"}},
 "debug"=>
  {"device-telemetry"=>
    {"refresh-dest-server"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"refresh-dest-server",
         "help-string"=>"Reset the dest-server node",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.device-telem[dest-server]=None > /dev/null"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-telemetry",
       "roles"=>"superuser",
       "help-string"=>"Device Telemetry debug commands"}},
   "iot"=>
    {"global"=>
      {"on"=>
        {"error"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"error",
             "handler"=>
              "/usr/local/bin/sdb sw.iotd.runtime.debug.level=error"}},
         "warn"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"warn",
             "handler"=>
              "/usr/local/bin/sdb sw.iotd.runtime.debug.level=warn"}},
         "info"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"info",
             "handler"=>
              "/usr/local/bin/sdb sw.iotd.runtime.debug.level=info"}},
         "debug"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"debug",
             "handler"=>
              "/usr/local/bin/sdb sw.iot.runtime.debug.level=debug"}},
         "dump"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"dump",
             "handler"=>
              "/usr/local/bin/sdb sw.iotd.runtime.debug.level=dump"}},
         :obj=>:union,
         :attributes=>{"name"=>"on"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "handler"=>"/usr/local/bin/sdb sw.iotd.runtime.debug.level=off"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"/usr/local/bin/sdb sw.iotd.runtime.debug.level"}},
       "counter"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"counter",
           "target"=>"iotd",
           "handler"=>"show_iot_statistics",
           "help-string"=>"Show global counter information"}},
       :obj=>:union,
       :attributes=>{"name"=>"global"}},
     "clear-all"=>
      {"type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"type",
           "type"=>"enum",
           "help-string"=>"type of record to clear"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"clear-all",
         "target"=>"iotd",
         "handler"=>"debug_iotd_clearall",
         "help-string"=>"Clear all iot records in redis"}},
     "icd"=>
      {"on"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on",
           "type"=>"enum",
           "help-string"=>"Turn on icd debug logging"}},
       "reset"=>
        {"connection"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"connection",
             "optional"=>"yes",
             "help-string"=>"reset connection to verdict cloud server"}},
         "cookie"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"cookie",
             "optional"=>"yes",
             "help-string"=>"clear cookie to trigger Getall"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"reset", "help-string"=>"verdict related data to reset"}},
       "verdict-server"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"verdict-server",
           "type"=>"multiple",
           "help-string"=>"set verdict server"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"icd",
         "target"=>"iotd",
         "handler"=>"debug_icd",
         "help-string"=>"debug option for identity client"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"iot",
       "target"=>"script",
       "help-string"=>"debug option for iot daemon"}},
   "es_reason_whitelist"=>
    {"add"=>
      {"reason"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reason",
           "type"=>"string",
           "handler"=>"/usr/local/bin/es_wl_reason.py -a '$reason'",
           "help-string"=>"reason to be added"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"add",
         "help-string"=>"add es error reason to the allow list"}},
     "delete"=>
      {"reason"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reason",
           "type"=>"string",
           "handler"=>"/usr/local/bin/es_wl_reason.py -d '$reason'",
           "help-string"=>"reason to be deleted"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"delete",
         "help-string"=>"delete es error reason to the allow list"}},
     "clear"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear",
         "handler"=>"/usr/local/bin/es_wl_reason.py -c",
         "help-string"=>"clear all the reasons in the allow list"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"/usr/local/bin/es_wl_reason.py -s",
         "help-string"=>"show all the reasons in the allow list"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"es_reason_whitelist",
       "roles"=>"superuser",
       "target"=>"script"}},
   "logdb"=>
    {"migrate-lc"=>
      {"start"=>
        {"time"=>
          {"period"=>
            {"start-date"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"start-date",
                 "type"=>"string",
                 "help-string"=>"UTC Date YYYY-MM-DD (e.g. 2006-08-01)",
                 "regex"=>
                  "2[0-9][0-9][0-9]-([0][1-9]|[1][0-2])-([0-2][0-9]|[3][0-1])",
                 "minlen"=>"10",
                 "maxlen"=>"25"}},
             "end-date"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"end-date",
                 "type"=>"string",
                 "help-string"=>"UTC Date YYYY-MM-DD (e.g. 2006-08-01)",
                 "regex"=>
                  "2[0-9][0-9][0-9]-([0][1-9]|[1][0-2])-([0-2][0-9]|[3][0-1])",
                 "minlen"=>"10",
                 "maxlen"=>"25"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"period"}},
           :obj=>:union,
           :attributes=>{"name"=>"time", "optional"=>"yes"}},
         "log-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-type", "optional"=>"yes", "type"=>"enum"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"start",
           "help-string"=>"Start logdb migration now.",
           "handler"=>"upgrade_migration_start_handler"}},
       "status"=>
        {"verbose"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"verbose",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Show local debug counters"}},
         "slot"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"slot",
             "target"=>"mgmt",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"disk-array"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"Show Upgrade Logdb Migration State",
           "handler"=>"upgrade_migration_status_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"migrate-lc",
         "help-string"=>"Migrate logdb to new version."}},
     "set-vld-max-rate-to-es"=>
      {"rate"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"rate",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"160000",
           "optional"=>"no",
           "help-string"=>"Set the rate in LPS"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set-vld-max-rate-to-es",
         "target"=>"exec",
         "handler"=>"/usr/local/bin/sdb cfg.vld.max-rate-to-es=$rate",
         "help-string"=>"Set vld-max-rate-to-es debug settings"}},
     "show-vld-max-rate-to-es"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-vld-max-rate-to-es",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb cfg.vld.max-rate-to-es",
         "help-string"=>"Show vld-max-rate-to-es debug settings"}},
     "set-es-throttle-timer"=>
      {"interval"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"interval",
           "type"=>"rangedint",
           "min"=>"20",
           "max"=>"600",
           "optional"=>"no",
           "help-string"=>"Set the timer interval in seconds"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set-es-throttle-timer",
         "target"=>"exec",
         "handler"=>"/usr/local/bin/sdb cfg.es.throttle-timer=$interval",
         "help-string"=>"Set throttle-timer interval settings"}},
     "show-es-throttle-timer"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-es-throttle-timer",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb cfg.es.throttle-timer",
         "help-string"=>"Show throttle-timer interval value"}},
     "disable-throttle-es"=>
      {"no"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no",
           "target"=>"script",
           "handler"=>"/usr/local/bin/sdb cfg.es.disable-throttle-es=0"}},
       "yes"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"yes",
           "target"=>"script",
           "handler"=>"/usr/local/bin/sdb cfg.es.disable-throttle-es=1"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "target"=>"script",
           "handler"=>"/usr/local/bin/sdb cfg.es.disable-throttle-es"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disable-throttle-es",
         "help-string"=>"Disabling throttling in ES"}},
     "set-heap-size"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       "heap-size"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"heap-size",
           "type"=>"rangedint",
           "min"=>"4",
           "max"=>"32",
           "help-string"=>"Heap size in GB"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set-heap-size",
         "help-string"=>"Set heap size for log process.",
         "handler"=>"set_heap_size_logdb_handler",
         "confirm"=>
          "After starting this command, the Log Collector will restart logging process. Do you want to proceed?"}},
     "show-heap-size"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"show-heap-size",
         "help-string"=>"Show heap size for log process.",
         "handler"=>"show_heap_size_logdb_handler"}},
     "show-es-upgrade-time"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"show-es-upgrade-time",
         "help-string"=>"Show remaining time for upgrading ES.",
         "handler"=>"show_es_upgrade_time_logdb_handler"}},
     "disable-report-caching"=>
      {"collector-group"=>
        {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector-group/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"collector-group", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"disable-report-caching",
         "help-string"=>"Disable report caching",
         "handler"=>"disable_report_caching_handler",
         "confirm"=>
          "After starting this command, the Log Collector will stop caching of reports. Do you want to proceed?"}},
     "enable-report-caching"=>
      {"collector-group"=>
        {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector-group/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"collector-group", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"enable-report-caching",
         "help-string"=>"Enable report caching",
         "handler"=>"enable_report_caching_handler",
         "confirm"=>
          "After starting this command, the Log Collector will start caching of reports. Do you want to proceed?"}},
     "check-report-caching-status"=>
      {"collector-group"=>
        {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector-group/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"collector-group", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"check-report-caching-status",
         "help-string"=>"Show if report caching is enabled",
         "handler"=>"show_report_caching_handler"}},
     "delete-cached-report-for-period"=>
      {"collector-group"=>
        {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector-group/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"collector-group", "optional"=>"yes"}},
       "time"=>
        {"period"=>
          {"start"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"start",
               "type"=>"string",
               "help-string"=>
                "UTC Datetime YYYY-MM-DD@hh:mm:ss (e.g. 2006-08-01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]-([0][1-9]|[1][0-2])-([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"25"}},
           "end"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"end",
               "type"=>"string",
               "help-string"=>
                "UTC Datetime YYYY-MM-DD@hh:mm:ss (e.g. 2006-08-01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]-([0][1-9]|[1][0-2])-([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"25"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"period"}},
         "predefined"=>
          {:obj=>:element,
           :attributes=>{"name"=>"predefined", "type"=>"enum"}},
         :obj=>:union,
         :attributes=>{"name"=>"time"}},
       "type"=>
        {:obj=>:element,
         :attributes=>{"name"=>"type", "optional"=>"yes", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"delete-cached-report-for-period",
         "help-string"=>"Delete cached report for a time period",
         "handler"=>"delete_cached_report_period_handler",
         "confirm"=>
          "After starting this command, the Log Collector will delete cached reports. Do you want to proceed?"}},
     "delete-report-cache"=>
      {"collector-group"=>
        {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
         "name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector-group/entry/@name"}},
         :obj=>:union,
         :attributes=>{"name"=>"collector-group", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"delete-report-cache",
         "help-string"=>"Delete all cached reports",
         "handler"=>"delete_report_cache_handler",
         "confirm"=>
          "After starting this command, the Log Collector will delete all cached reports. Do you want to proceed?"}},
     "single-node"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"single-node",
         "help-string"=>"Set master node in two node cluster",
         "handler"=>"set_single_node_handler",
         "confirm"=>
          "Every Log Collector in the group will become master. Do you want to proceed?"}},
     :obj=>:union,
     :attributes=>{"name"=>"logdb", "help-string"=>"logdb", "target"=>"mgmt"}},
   "dau"=>
    {"detailed-log"=>
      {"enable"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"enable",
           "type"=>"enum",
           "help-string"=>"Enable detailed log",
           "handler"=>"dau3_enable_debug_log"}},
       "disable"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"disable",
           "help-string"=>"Disable detailed log",
           "handler"=>"dau3_disable_debug_log"}},
       "with-filter"=>
        {"src"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"src",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64"}},
         "dg"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dg",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64"}},
         "tag"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"tag",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"128"}},
         "device"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"with-filter",
           "help-string"=>"Set debug filter",
           "handler"=>"dau3_add_debug_filter"}},
       "no-filter"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no-filter",
           "help-string"=>"Remove debug filter",
           "handler"=>"dau3_rm_debug_filter"}},
       "max-size-in-mb"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"max-size-in-mb",
           "type"=>"rangedint",
           "min"=>"30",
           "max"=>"50",
           "default"=>"30",
           "handler"=>"dau_detailed_log_size_handler",
           "help-strin"=>"Max file size in GB"}},
       "phplogs-to-panlogs"=>
        {"enable"=>
          {:obj=>:element, :attributes=>{"name"=>"enable", "type"=>"enum"}},
         "max-size-in-mb"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-size-in-mb",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"200",
             "max"=>"500",
             "default"=>"200",
             "help-string"=>"Max filesize for php dau logs"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"phplogs-to-panlogs",
           "handler"=>"dau_detailed_log_to_panlogs_handler",
           "help-string"=>"Store php dau debug logs in panlogs"}},
       :obj=>:union,
       :attributes=>{"name"=>"detailed-log"}},
     "clear"=>
      {"stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"stats",
           "help-string"=>"Clear stats",
           "handler"=>"dau3_clear_stats"}},
       "database"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "help-string"=>"device-group",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"database",
           "help-string"=>"Clear database entires for a device group",
           "handler"=>"dau3_clear_dg_from_db"}},
       "iptags"=>
        {"device-group"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "help-string"=>"device-group name"}},
             "recursive"=>
              {"entry"=>
                {"name"=>
                  {nil=>
                    {:obj=>:enum,
                     :attributes=>
                      {"value"=>"no", "help-string"=>"non-recursive"}},
                   :obj=>:"attr-req",
                   :attributes=>{"name"=>"name", "type"=>"enum"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"entry"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"recursive",
                 "help-string"=>"clear FWs attached to child DGs"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"device-group",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"iptags",
           "skip-validation"=>"yes",
           "handler"=>"dau3_clear_dg_fw_iptags",
           "help-string"=>"Clear ip-tag mappings on all firewalls under DG"}},
       :obj=>:union,
       :attributes=>{"name"=>"clear", "help-string"=>"Clear commands"}},
     "show"=>
      {"stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"stats",
           "help-string"=>"Show stats",
           "handler"=>"dau3_show_stats"}},
       "plugins"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"plugins",
           "help-string"=>"Show source plugins ino",
           "handler"=>"dau3_show_plugins"}},
       "job-queue-info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"job-queue-info",
           "handler"=>"dau_show_info_handler",
           "help-string"=>
            "Show dynamic address update info during configd processing"}},
       "dau3-cache"=>
        {"table"=>
          {:obj=>:element,
           :attributes=>{"name"=>"table", "optional"=>"yes", "type"=>"enum"}},
         "src"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"src",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64"}},
         "dg"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dg",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dau3-cache",
           "handler"=>"dau3_show_cache_handler",
           "help-string"=>"Show update hash and aggregation hash "}},
       "tags"=>
        {"dgs-and-revs"=>
          {"table-name"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"table-name",
               "type"=>"string",
               "help-string"=>"table name"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"dgs-and-revs",
             "help-string"=>"Show dgs and revision numbers from tags_ip_rev",
             "handler"=>"dau_show_dg_and_revisions"}},
         "store-tags-ip-rev"=>
          {"device-group"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"device-group",
               "optional"=>"yes",
               "type"=>"string",
               "help-string"=>"device-group",
               "complete-handler"=>
                "$config/devices/entry/device-group/entry/@name"}},
           "revision"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"revision",
               "optional"=>"yes",
               "type"=>"string",
               "help-string"=>"revision no",
               "regex"=>"^[0-9]+$",
               "max-length"=>"64"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"store-tags-ip-rev",
             "help-string"=>
              "Store tags-ip-rev into file for specific dg and revision",
             "handler"=>"dau_show_tags_ip_rev_handler"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"tags",
           "target"=>"mgmt",
           "help-string"=>"Debug DAU tag information"}},
       :obj=>:union,
       :attributes=>{"name"=>"show", "help-string"=>"Show commands"}},
     "settings"=>
      {"ip-tag-aggr-interval"=>
        {"interval"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"interval",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"60",
             "optional"=>"no",
             "help-string"=>
              "Set aggregation interval in seconds, default 0 seconds"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"ip-tag-aggr-interval",
           "target"=>"exec",
           "handler"=>
            "/usr/local/bin/sdb cfg.general.ip-tag-aggr-interval=$interval",
           "help-string"=>"Set aggregation intervals"}},
       "dau-purge-interval"=>
        {"purge-interval"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"purge-interval",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"30",
             "help-string"=>"iptags purge interval in days."}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dau-purge-interval",
           "handler"=>"request_dau_iptags_purge_interval_handler",
           "help-string"=>"Dynamic address interval iptags purge interval"}},
       "device-group"=>
        {"recursive"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"recursive", "type"=>"bool", "optional"=>"no"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"device-group",
           "target"=>"exec",
           "handler"=>
            "/usr/local/bin/sdb cfg.general.dau-recursive=$recursive",
           "help-string"=>
            "Send iptag mappings recursively to firewalls connected to children DGs"}},
       :obj=>:union,
       :attributes=>{"name"=>"settings", "help-string"=>"Settings"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"dau",
       "help-string"=>"Dynamic Address Update",
       "target"=>"mgmt"}},
   "plugins"=>
    {:obj=>:union,
     :attributes=>
      {"name"=>"plugins",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Plugin related debug"}},
   "list-blocked-partial-xpaths"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"list-blocked-partial-xpaths",
       "target"=>"mgmt",
       "handler"=>"show_blocked_partial_xpaths",
       "help-string"=>"Show blocked xpaths"}},
   "list-admin-history"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"list-admin-history",
       "target"=>"mgmt",
       "handler"=>"show_admin_history",
       "help-string"=>"Show admin history for xpaths in journal"}},
   "vm-agent"=>
    {"set"=>
      {"interval"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"interval",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"120",
           "optional"=>"no",
           "help-string"=>"Set heartbeat interval in seconds"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"set",
         "target"=>"exec",
         "handler"=>
          "/usr/local/bin/sdb cfg.general.vm-heartbeat-interval=$interval",
         "help-string"=>"Set vm_agent debug settings"}},
     "show"=>
      {"interval"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"interval",
           "handler"=>"/usr/local/bin/sdb cfg.general.vm-heartbeat-interval",
           "help-string"=>"Show heartbeat interval in seconds"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "help-string"=>"Show vm_agent debug settings"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"vm-agent", "help-string"=>"Set/show vm_agent debug settings"}},
   "log-output-need-utf8"=>
    {"no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb cfg.logfwd.need-utf8=no"}},
     "yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb cfg.logfwd.need-utf8=yes"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -n cfg.logfwd.need-utf8"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-output-need-utf8",
       "help-string"=>"system option to support utf8 for log output"}},
   "rebuild"=>
    {"database"=>
      {"globalfind"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"globalfind",
           "target"=>"mgmt",
           "handler"=>"rebuild_globalfind_db",
           "help-string"=>"Rebuild globalfind database"}},
       :obj=>:union,
       :attributes=>{"name"=>"database", "help-string"=>"Rebuild database"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"rebuild",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt"}},
   "system"=>
    {"maintenance-mode"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"maintenance-mode",
         "handler"=>
          "/usr/local/bin/maintenance_root_reboot Cms Op Reboot to maint mode",
         "help-string"=>"Reboot the system to maintenance mode",
         "confirm"=>
          "Executing this command will disconnect the current session and reboot the system into maintenance mode. Do you want to continue?"}},
     "disk-sync"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"disk-sync",
         "handler"=>"/bin/sync",
         "help-string"=>"Flush all writes out to disk"}},
     "disk-partition-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"disk-partition-info",
         "handler"=>"/sbin/fdisk -lu",
         "help-string"=>"Get disk partition information"}},
     "ssh-key-reset"=>
      {"management"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"management",
           "timeout"=>"300",
           "handler"=>"ssh_keys.reset_mgmt_ssh_keys",
           "help-string"=>"Reset management SSH keys",
           "confirm"=>
            "Executing this command will reset the management SSH keys and reboot the system. Do you want to continue?"}},
       "high-availability"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"high-availability",
           "timeout"=>"300",
           "handler"=>"ssh_keys.reset_ha_ssh_keys",
           "help-string"=>"Reset high-availability SSH keys",
           "confirm"=>
            "Executing this command will reset the high-availability SSH keys and reboot the system. Do you want to continue?"}},
       "all"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"all",
           "timeout"=>"300",
           "handler"=>"ssh_keys.reset_both_ssh_keys",
           "help-string"=>"Reset high-availability and management SSH keys",
           "confirm"=>
            "Executing this command will reset the high-availability and management SSH keys and reboot the system. Do you want to continue?"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"ssh-key-reset",
         "target"=>"dagger",
         "help-string"=>"Reset high-availability or management SSH keys"}},
     "policy-optimization"=>
      {"enable-cache"=>
        {"yes"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"yes",
             "target"=>"script",
             "handler"=>"/usr/local/bin/sdb cfg.policy.enable-cache=yes",
             "help-string"=>"Enable policy optimization cache"}},
         "no"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"no",
             "target"=>"script",
             "handler"=>"/usr/local/bin/sdb cfg.policy.enable-cache=no",
             "help-string"=>"Disable policy optimization cache"}},
         "show"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"show",
             "target"=>"script",
             "handler"=>"/usr/local/bin/sdb -n cfg.policy.enable-cache",
             "help-string"=>"Show policy optimization cache setting"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"enable-cache", "help-string"=>"Enable/disable cache"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"policy-optimization",
         "help-string"=>"Setting for policy optimization"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"system",
       "roles"=>"superuser",
       "target"=>"script",
       "help-string"=>"Make system-level requests"}},
   "syslog-ng"=>
    {"stats"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"stats",
         "handler"=>"/sbin/syslog-ng-ctl stats 2>&1",
         "help-string"=>"List statistics for syslog-ng"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"syslog-ng",
       "target"=>"script",
       "help-string"=>"debug syslogng"}},
   "skip-condor-reports"=>
    {"yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "help-string"=>"Skip sending report requests to Condor devices",
         "handler"=>
          "/usr/local/bin/sdb -n cfg.general.exclude-condor-report=true"}},
     "no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "help-string"=>"Send report requests to Condor devices",
         "handler"=>
          "/usr/local/bin/sdb -n cfg.general.exclude-condor-report=false"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "help-string"=>"Show the setting",
         "handler"=>
          "/usr/local/bin/sdb -r cfg.general.exclude-condor-report"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"skip-condor-reports",
       "target"=>"script",
       "help-string"=>"Skip dispatching report requests to Condor"}},
   "swm"=>
    {"list"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"list",
         "handler"=>"/usr/local/bin/swm list",
         "help-string"=>"List software versions available for install"}},
     "log"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"log",
         "handler"=>"/usr/local/bin/swm log",
         "help-string"=>"Show log of PAN Software Manager"}},
     "history"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"history",
         "handler"=>"/usr/local/bin/swm history",
         "help-string"=>"Show history of software install operations"}},
     "status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"status",
         "handler"=>"/usr/local/bin/swm status",
         "help-string"=>"Show status of PAN Software Manager"}},
     "unlock"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"unlock",
         "handler"=>"/usr/local/bin/swm unlock",
         "help-string"=>"Unlock PAN Software Manager"}},
     "revert"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"revert",
         "handler"=>"/usr/local/bin/swm revert",
         "help-string"=>
          "revert back to last successfully installed software"}},
     "rebuild-content-db"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"rebuild-content-db",
         "handler"=>"/sbin/rebuild-content-db",
         "help-string"=>"Rebuild content database"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"swm",
       "target"=>"exec",
       "help-string"=>"Pan Software Manager"}},
   "tac-login"=>
    {"permanently-disable"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"permanently-disable",
         "handler"=>"/usr/local/bin/sdb cfg.root.passwd-state=disable",
         "help-string"=>
          "Blocks all TAC login access to the device. Note: Disabling access will reduce the options for TAC when debugging.",
         "confirm"=>
          "This will permanently disable tac-login for troubleshooting. Do you want to continue?"}},
     "challenge"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"challenge",
         "help-string"=>"Get challenge value for tac-login"}},
     "response"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"response",
         "help-string"=>
          "Run verification of challenge response for tac-login"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"tac-login",
       "roles"=>"superuser",
       "prune-on"=>"fips-mode",
       "cli-handler"=>"debug-tac-login-handler"}},
   "software"=>
    {"fd-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4294967295"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"fd-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Set open fd limit",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "no-fd-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"no-fd-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Disable open fd limit",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "virt-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"2147483647"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"virt-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Set max virtual memory limit in KB",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "no-virt-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"no-virt-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Disable max virtual memory limit",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "phy-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       "limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"2147483647"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"phy-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Set max physical memory(rss+swap) limit in KB",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "no-phy-limit"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_process_completer"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"no-phy-limit",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Disable max physical memory(rss+swap) limit",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "pprof"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_pprof_cherrypick"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"pprof",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Enable pprof for the selected service",
         "target"=>"dagger",
         "confirm"=>
          "This operation will enable memory leak detection and restart the process. Continue?",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "no-pprof"=>
      {"service"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"service",
           "type"=>"string",
           "maxlen"=>"64",
           "target"=>"dagger",
           "complete-handler"=>"masterd_debug.mp_pprof_cherrypick"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"no-pprof",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Disable pprof for the selected service",
         "target"=>"dagger",
         "handler"=>"masterd_debug.mp_process_modify"}},
     "resource"=>
      {"subsystem"=>
        {:obj=>:element,
         :attributes=>{"name"=>"subsystem", "type"=>"string", "maxlen"=>"64"}},
       "plane"=>
        {:obj=>:element,
         :attributes=>{"name"=>"plane", "type"=>"string", "maxlen"=>"64"}},
       "slot"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"slot", "type"=>"rangedint", "min"=>"0", "max"=>"64"}},
       "show"=>
        {"configuration"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"configuration",
             "target"=>"dagger",
             "handler"=>"cgroups_dbg.show_config",
             "help"=>"Show current resource control in effect"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"show"}},
       "set"=>
        {"group"=>
          {:obj=>:element,
           :attributes=>{"name"=>"group", "type"=>"string", "maxlen"=>"128"}},
         "limit"=>
          {:obj=>:element,
           :attributes=>{"name"=>"limit", "type"=>"string", "maxlen"=>"64"}},
         "value"=>
          {:obj=>:element,
           :attributes=>{"name"=>"value", "type"=>"string", "maxlen"=>"64"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"set",
           "target"=>"dagger",
           "handler"=>"cgroups_dbg.set_config",
           "help-string"=>"Set parameters for resource control",
           "confirm"=>
            "Changing resource control configuration requires system reboot. Proceed?"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"resource",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Administer resource control",
         "target"=>"dagger",
         "handler"=>"cgroups_dbg.cli_entry"}},
     "disk-usage"=>
      {"cleanup"=>
        {"threshold"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"threshold",
             "type"=>"rangedint",
             "min"=>"90",
             "max"=>"100",
             "help-string"=>
              "percentage threshod of size of system partition to kick off cleanup"}},
         "deep"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"deep",
             "optional"=>"yes",
             "handler"=>"logfile_cleanup_dbg.cleanup_delete",
             "help-string"=>"cleanup with deleting backup logfile"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"cleanup",
           "timeout"=>"60",
           "handler"=>"logfile_cleanup_dbg.cleanup",
           "help-string"=>"system logfile cleanup"}},
       "aggressive-cleaning"=>
        {"enable"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"enable",
             "help-string"=>"Enable aggressive cleaning",
             "handler"=>"dagger_du.enable_aggr_clean",
             "confirm"=>
              "This will automatically purge all old log files if disk hits 95% occupancy. Do you accept this potential loss of debuggability?"}},
         "disable"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"disable",
             "help-string"=>"Disable aggressive cleaning",
             "handler"=>"dagger_du.disable_aggr_clean"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"aggressive-cleaning",
           "help-string"=>"Toggle aggressive cleaning"}},
       "dangling-fds"=>
        {"target-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"target-name",
             "type"=>"string",
             "optional"=>"yes",
             "help-string"=>"target to show dangling fds"}},
         "target-slot"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"target-slot",
             "type"=>"string",
             "optional"=>"yes",
             "help-string"=>"disambiguate target slot"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dangling-fds",
           "target"=>"dagger",
           "handler"=>"dagger_dfds.handle",
           "roles"=>"superuser,deviceadmin,panorama-admin",
           "timeout"=>"130",
           "help-string"=>
            "show files that were deleted but remain held open"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disk-usage",
         "target"=>"dagger",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"debug option for system disk usage"}},
     "watchdog"=>
      {"enable"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"enable",
           "help-string"=>"Enable kernel watchdog",
           "handler"=>"kernelconf_wd.watchdog_enable"}},
       "disable"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"disable",
           "help-string"=>"Disable kernel watchdog",
           "handler"=>"kernelconf_wd.watchdog_disable"}},
       "threshold"=>
        {"hardlock"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"hardlock",
             "type"=>"rangedint",
             "min"=>"10",
             "max"=>"60",
             "help-string"=>"hardlock timeout in seconds",
             "handler"=>"kernelconf_wd.watchdog_threshold_set"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"threshold",
           "help-string"=>"Set threshold of kernel watchdog"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "help-string"=>"show kernel watchdog",
           "handler"=>"kernelconf_wd.watchdog_show"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"watchdog",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "target"=>"dagger",
         "help-string"=>"Enable/Disable kernel watchdog",
         "hidden"=>"yes"}},
     "restart"=>
      {"process"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"process",
           "optional"=>"yes",
           "type"=>"enum",
           "help-string"=>"process to restart"}},
       "core"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"core",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"take core of the process before restart"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"restart",
         "target"=>"mgmt",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "handler"=>"restart_core_software_handler",
         "help-string"=>"Restart process"}},
     "show-cores"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-cores",
         "internal"=>"yes",
         "roles"=>"superuser,superreader",
         "target"=>"mgmt",
         "handler"=>"list_cores_handler",
         "help-string"=>"List core files on system"}},
     "core"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"core",
         "type"=>"enum",
         "target"=>"mgmt",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "handler"=>"core_software_handler",
         "help-string"=>"Take process core"}},
     "large-core"=>
      {"show-reserved-space"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show-reserved-space",
           "help-string"=>"show reserved space in MB for large core dumps",
           "target"=>"mgmt",
           "handler"=>"show_core_dump_reserve_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"large-core",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"large core dump option"}},
     "trace"=>
      {"management-server"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"management-server",
           "help-string"=>"Management server process",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd mgmtsrvr trace"}},
       "configd"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"configd",
           "help-string"=>"configd daemon",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd configd trace"}},
       "reportd"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"reportd",
           "help-string"=>"reportd daemon",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd reportd trace"}},
       "logd"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"logd",
           "help-string"=>"logd daemon",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd logd trace"}},
       "web-server"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"web-server",
           "help-string"=>"Web server process",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd websrvr trace"}},
       "web-backend-cms"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"web-backend-cms",
           "help-string"=>"Web server process for Panorama",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd web_backend_cms trace"}},
       "web-backend-ctx"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"web-backend-ctx",
           "help-string"=>"Web server process for Context Switches",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd web_backend_ctx trace"}},
       "web-backend-notify"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"web-backend-notify",
           "help-string"=>"Web server process for Notification Engine",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd nodejs trace"}},
       "mdb"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"mdb",
           "help-string"=>"Mongo DB",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd mdb trace"}},
       "vldmgr"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vldmgr",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD Manager process",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd vldmgr trace"}},
       "vld-0-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-0-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD1",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md1 ]] && /usr/local/bin/masterd vld-0-0 trace"}},
       "vld-1-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-1-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD2",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md2 ]] && /usr/local/bin/masterd vld-1-0 trace"}},
       "vld-2-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-2-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD3",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md3 ]] && /usr/local/bin/masterd vld-2-0 trace"}},
       "vld-3-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-3-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD4",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md4 ]] && /usr/local/bin/masterd vld-3-0 trace"}},
       "vld-4-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-4-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD5",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md5 ]] && /usr/local/bin/masterd vld-4-0 trace"}},
       "vld-5-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-5-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD6",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md6 ]] && /usr/local/bin/masterd vld-5-0 trace"}},
       "vld-6-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-6-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD7",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md7 ]] && /usr/local/bin/masterd vld-6-0 trace"}},
       "vld-7-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-7-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD8",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md8 ]] && /usr/local/bin/masterd vld-7-0 trace"}},
       "vld-8-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-8-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD9",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md9 ]] && /usr/local/bin/masterd vld-8-0 trace"}},
       "vld-9-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-9-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD10",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md10 ]] && /usr/local/bin/masterd vld-9-0 trace"}},
       "vld-10-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-10-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD11",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md11 ]] && /usr/local/bin/masterd vld-10-0 trace"}},
       "vld-11-0"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"vld-11-0",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"VLD process for LD12",
           "target"=>"script",
           "handler"=>
            "[[ -e /dev/md12 ]] && /usr/local/bin/masterd vld-11-0 trace"}},
       "user-id"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"user-id",
           "help-string"=>"User-ID process",
           "target"=>"script",
           "handler"=>"/usr/local/bin/masterd useridd trace"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"trace", "help-string"=>"Get process backtraces"}},
     :obj=>:union,
     :attributes=>{"name"=>"software", "help-string"=>"Software/processes"}},
   "cli"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"cli",
       "type"=>"enum",
       "target"=>"cli",
       "cli-handler"=>"debug-cli-handler"}},
   "cache"=>
    {"clear"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear",
         "help-string"=>"clear the cache",
         "handler"=>"cache_clear_handler"}},
     "show"=>
      {"counts"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"counts",
           "help-string"=>"show count of documents in cache",
           "handler"=>"cache_show_counts_handler"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"show"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"cache",
       "target"=>"mgmt",
       "help-string"=>"Panorama cache utilities"}},
   "md5sum_cache"=>
    {"clear"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear",
         "help-string"=>"clear the md5sum cache",
         "handler"=>"clear_cfg_md5sum_cache"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"md5sum_cache",
       "target"=>"mgmt",
       "help-string"=>"md5sum cache utilities"}},
   "mongo"=>
    {"repair"=>
      {"database"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"database",
           "type"=>"string",
           "max-length"=>"63",
           "help-string"=>"repair a specific db in mdb",
           "handler"=>
            "/usr/bin/mongo $database --eval \"db.repairDatabase()\""}},
       "instance"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"instance",
           "type"=>"enum",
           "help-string"=>"repair mdb or cdb instance",
           "handler"=>"/usr/local/bin/mongo_repair_instance.sh $instance"}},
       "disk-space"=>
        {"database"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"database",
             "type"=>"string",
             "max-length"=>"63",
             "help-string"=>"db name to restore"}},
         "partition"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"partition",
             "type"=>"enum",
             "help-string"=>"temp disk path to store mongodump data"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"disk-space",
           "help-string"=>"repair database disk space, for mdb ONLY",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/mongo_repair_disk.sh $database $partition"}},
       "isolate-repair"=>
        {"storing-path"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"storing-path",
             "type"=>"string",
             "max-length"=>"256",
             "help-string"=>
              "A temp path that is large enough to store all the mongo data",
             "confirm"=>
              "This may take some time, are you willing to continue?"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"isolate-repair",
           "target"=>"mgmt",
           "help-string"=>
            "Only for repair DB fails due to not enough disk space, and retore disk space fails due to data crash, for mdb ONLY",
           "handler"=>"debug_mongo_isolate_repair_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"repair",
         "target"=>"script",
         "help-string"=>"repair database"}},
     "backup"=>
      {"dump"=>
        {"database"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"database",
             "type"=>"string",
             "optional"=>"yes",
             "max-length"=>"63",
             "help-string"=>
              "database name needs to be backup, will dump all if none provided"}},
         "instance"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"instance",
             "type"=>"enum",
             "help-string"=>"mdb or cdb instance"}},
         "partition"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"partition",
             "type"=>"enum",
             "help-string"=>"disk path to store mongodump data"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dump",
           "help-string"=>"mongodump to make a backup data",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/mongo_dump.sh $partition $instance $database"}},
       "restore"=>
        {"database"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"database",
             "type"=>"string",
             "max-length"=>"63",
             "optional"=>"yes",
             "help-string"=>
              "database name needs to be restored, will clear all and restore if none provided"}},
         "dump-filepath"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dump-filepath",
             "type"=>"string",
             "max-length"=>"256",
             "help-string"=>"filepath where mongodump data stores"}},
         "instance"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"instance",
             "type"=>"enum",
             "help-string"=>"mdb or cdb instance"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"restore",
           "help-string"=>"mongorestore to load data back",
           "target"=>"mgmt",
           "handler"=>"debug_mongo_restore_handler",
           "confirm"=>
            "This operation will delete your data first, we suggest you to make a backup copy. Are you willing to continue?"}},
       "dump-and-restore"=>
        {"partition"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"partition",
             "type"=>"enum",
             "help-string"=>"disk path to store mongodump data"}},
         "instance"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"instance",
             "type"=>"enum",
             "help-string"=>"mdb or cdb instance"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dump-and-restore",
           "help-string"=>"mongo dump and restore data",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/mongo_dump_restore.sh $partition $instance"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"backup", "help-string"=>"backup and restore database"}},
     "storage-engine-transfer"=>
      {"version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"version",
           "type"=>"enum",
           "help-string"=>"Change to which storage engine version"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>
            "Path to temporarily store a dump file. Default: /tmp"}},
       "instance"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"instance",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"DB instances. Default: mdb"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"storage-engine-transfer",
         "target"=>"mgmt",
         "handler"=>"debug_mongo_transfer_storage_engine_handler",
         "help-string"=>
          "Storage engine transfer between different mongo versions"}},
     "drop"=>
      {"instance"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"instance",
           "type"=>"enum",
           "optional"=>"no",
           "help-string"=>
            "DB instance mdb|cdb that your database or collection in"}},
       "database"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"database",
           "type"=>"string",
           "max-length"=>"63",
           "help-string"=>"dababase name"}},
       "collection"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collection",
           "optional"=>"yes",
           "type"=>"string",
           "max-length"=>"63",
           "help-string"=>"collection name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"drop",
         "help-string"=>"drop a database or collection",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/mongo_drop.sh $instance $database $collection"}},
     "clear"=>
      {"instance"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"instance",
           "type"=>"enum",
           "optional"=>"no",
           "help-string"=>
            "DB instance mdb|cdb|dmdb that your database or collection in"}},
       "database"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"database",
           "type"=>"string",
           "optional"=>"yes",
           "max-length"=>"63",
           "help-string"=>
            "DB name that needs to be manually deleted, this operation only applicable for MMAP storage engine"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"clear",
         "help-string"=>"manually delete data under db storage path",
         "confirm"=>
          "Are you willing to delete the data? This operation can not be reverted",
         "target"=>"script",
         "handler"=>"/usr/local/bin/mongo_clear.sh $instance $database"}},
     :obj=>:union,
     :attributes=>{"name"=>"mongo", "help-string"=>"mongoDB related"}},
   "object-repository"=>
    {"rebuild"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"rebuild",
         "help-string"=>"rebuild the repository",
         "handler"=>"rebuild_object_cache_handler"}},
     "show"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"show repository information",
           "handler"=>"show_object_cache_info"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"show"}},
     "find-references"=>
      {"object"=>
        {"name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"Name of object"}},
         "type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type",
             "type"=>"string",
             "help-string"=>"Type of object"}},
         "device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "help-string"=>"Device Group of object"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"object", "handler"=>"search_object_table"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"find-references", "help-string"=>"Search the repository"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"object-repository",
       "target"=>"mgmt",
       "help-string"=>"Panorama config and objects repository"}},
   "panorama-stats"=>
    {"pending-requests"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"pending-requests",
         "target"=>"mgmt",
         "help-string"=>"Show all pending requests",
         "handler"=>"show_pending_requests"}},
     "queue-stats"=>
      {"type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"queue-stats",
         "target"=>"mgmt",
         "help-string"=>"Display internal queue statistics",
         "handler"=>"show_queue_stats"}},
     "connections"=>
      {"type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"connections",
         "target"=>"mgmt",
         "help-string"=>"Show all connections",
         "handler"=>"show_conns"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"panorama-stats",
       "target"=>"mgmt",
       "help-string"=>"Display Panorama internal statistics"}},
   "panorama-vld-mgr"=>
    {"clear-active-operations"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear-active-operations",
         "help-string"=>"Clears up all current operation's flags",
         "handler"=>"panlogs_vld_mgr_handler.debug_clear_active_operations"}},
     "disk-statistics"=>
      {"start-test"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"start-test",
           "help-string"=>"Starts disk performance test",
           "handler"=>
            "panlogs_vld_mgr_handler.debug_get_disk_performance_info"}},
       "stop-test"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"stop-test",
           "help-string"=>"Stops disk performance test",
           "handler"=>
            "panlogs_vld_mgr_handler.debug_get_disk_performance_info"}},
       "status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"View status of most recent disk performance test",
           "handler"=>
            "panlogs_vld_mgr_handler.debug_get_disk_performance_info"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disk-statistics",
         "target"=>"dagger",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Shows disks performance"}},
     "reset-logging-disk"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"reset-logging-disk",
         "handler"=>"panlogs_vld_mgr_handler.reset_disk",
         "help-string"=>"Reset logging disk"}},
     "check-resource"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"check-resource",
         "handler"=>"panlogs_vld_mgr_handler.check_resource",
         "prune-on-sdb"=>"cfg.cms.mode=panorama,cfg.cms.mode=logger",
         "timeout"=>"300",
         "help-string"=>"Check resource eligibility for Panorama mode"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"panorama-vld-mgr",
       "prune-on-sdb"=>"cfg.cms.mode=management-only",
       "target"=>"dagger",
       "help-string"=>"Debug command for Virtual Logical Disks manager"}},
   "evtmgr"=>
    {"ms"=>
      {"syslog-enabled"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"syslog-enabled",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"Enable or disable debug-log"}},
       "show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"ms", "help-string"=>"Managment server"}},
     "configd"=>
      {"show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"configd"}},
     "reportd"=>
      {"show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"reportd"}},
     "logd"=>
      {"show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"logd"}},
     "cord"=>
      {"show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"cord"}},
     "useridd"=>
      {"show"=>
        {"basic"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"basic", "help-string"=>"All debug information"}},
         "detail"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"detail", "help-string"=>"Global debug information"}},
         "client-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"client-id",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "help-string"=>"Debug information for a specific client"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "help-string"=>"Display debug information"}},
       "debug-log"=>
        {"clfy"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"clfy",
             "optional"=>"yes",
             "help-string"=>"Log how messages are classified"}},
         "client"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"client",
             "optional"=>"yes",
             "help-string"=>"Log system events and client life cycle"}},
         "msg"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"All messages"}},
           "filtered"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"filtered",
               "help-string"=>"Log messages passed debug filter"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"msg",
             "optional"=>"yes",
             "help-string"=>"Log messages life cycle"}},
         "multicast"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"multicast",
             "optional"=>"yes",
             "help-string"=>"Debug log of multicast messages"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"debug-log", "help-string"=>"Enable debug for a feature"}},
       "msg-filter"=>
        {"msg-class"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"msg-class",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5"}},
         "ctype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ctype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "dtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"7"}},
         "mtype"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mtype",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"3"}},
         "mid"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mid",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "token"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"token",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "len"=>
          {"min"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"min",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           "max"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"max",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"4294967295"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"len", "optional"=>"yes"}},
         "im-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"im-type",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"65535"}},
         "content"=>
          {"starts-with"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"starts-with", "type"=>"string", "maxlen"=>"128"}},
           "contains"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"contains",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"128"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"content", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"msg-filter",
           "help-string"=>"Specify message debug fitler"}},
       :obj=>:union,
       :attributes=>{"name"=>"useridd"}},
     :obj=>:union,
     :attributes=>{"name"=>"evtmgr", "xmlapi-exposed"=>"no"}},
   "management-server"=>
    {"dtm-task-threads"=>
      {"enhance"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"enhance",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb cfg.dtm.taskmgr.threads=80; echo Please restart configd to make this config work. Please keep in mind this will require additional CPU and memory.",
           "help-string"=>"enable extra threads for dtm task pool"}},
       "default"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"default",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb cfg.dtm.taskmgr.threads=None; echo Please restart configd to make this config work.",
           "help-string"=>"use default threads for dtm task pool"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"dtm-task-threads", "help-string"=>"Debug dtm task threads"}},
     "device-monitoring"=>
      {"enable"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"enable",
           "target"=>"mgmt",
           "optional"=>"yes",
           "type"=>"bool",
           "handler"=>"debug_device_monitoring_handler",
           "help-string"=>
            "Enable/Disable debug option for device monitoring feature"}},
       "restore-db"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"restore-db",
           "internal"=>"yes",
           "type"=>"string",
           "complete-handler"=>"devmon-dbbackup-completion-handler",
           "handler"=>"devmon-dbbackup-handler",
           "help-string"=>"Restore Device Monitoring DB"}},
       "reset-db"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reset-db",
           "target"=>"mgmt",
           "type"=>"string",
           "handler"=>"devmon-reset-device-handler",
           "help-string"=>"Reset DB for a device"}},
       "disk-quota"=>
        {"set"=>
          {"size"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"size",
               "type"=>"rangedint",
               "min"=>"1",
               "max"=>"25600",
               "handler"=>"devmon-resize-db-handler"}},
           "force"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"force",
               "type"=>"bool",
               "default"=>"no",
               "optional"=>"yes",
               "confirm"=>
                "All Device Monitoring data will be lost. Do you want to continue?"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"set",
             "target"=>"mgmt",
             "help-string"=>"Set quota in MB"}},
         "show"=>
          {"local"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"local",
               "target"=>"script",
               "handler"=>
                "echo -n 'Device Monitoring Disk Quota(MB): '; /usr/local/bin/sdb -n cfg.devmon-storage-size",
               "help-string"=>"Show quota in MB"}},
           "peer"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"peer",
               "target"=>"script",
               "handler"=>
                "echo -n 'Peer Device Monitoring Disk Quota(MB): '; /usr/local/bin/sdb -n peer.cfg.devmon-storage-size",
               "help-string"=>"Show peer's quota in MB"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"show", "help-string"=>"Show disk quota in MB"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"disk-quota", "help-string"=>"Disk quota"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"device-monitoring", "help-string"=>"Device Monitoring"}},
     "inter-log-collector"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "handler"=>"mgmt_srvr_inter_lcc_status",
           "help-string"=>"Inter-Log collector thread status"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"inter-log-collector",
         "help-string"=>"management server log forwarding/collection"}},
     "client"=>
      {"disable"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"disable",
           "type"=>"string",
           "complete-handler"=>"mgmt-clients-completion-handler",
           "handler"=>"disable_mgmt_client",
           "help-string"=>"disable a client"}},
       "enable"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"enable",
           "type"=>"string",
           "complete-handler"=>"mgmt-clients-completion-handler",
           "handler"=>"enable_mgmt_client",
           "help-string"=>"enable a client"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"client",
         "help-string"=>"management server client processes"}},
     "summary-logs"=>
      {"flush-rate"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"flush-rate",
           "help-string"=>"Summary logs flush rate to VLD",
           "type"=>"enum",
           "handler"=>"debug_summary_logs_flush_rate_handler"}},
       "flush-options"=>
        {"type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type",
             "help-string"=>"Type of summary log",
             "type"=>"enum"}},
         "max-keys"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-keys",
             "optional"=>"yes",
             "type"=>"enum",
             "help-string"=>
              "Number of maximum keys supported on summary logs"}},
         "number-of-extra-flushes"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"number-of-extra-flushes",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"5",
             "help-string"=>"Number of extra flushes. Default is 3."}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"flush-options",
           "help-string"=>"Flush options for summary logs",
           "handler"=>"debug_summary_logs_flush_options_handler"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"debug_summary_logs_show_handler",
           "help-string"=>"show debug summary-logs details"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"summary-logs",
         "help-string"=>"Options supported for summary-logs"}},
     "snmp-memory-map"=>
      {"show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "target"=>"mgmt",
           "handler"=>"snmp_memory_map_show",
           "help-string"=>"Show contents of the snmp memory mapped file"}},
       "clear"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "target"=>"mgmt",
           "handler"=>"snmp_memory_map_clear",
           "help-string"=>"Clear contents of the snmp memory mapped file"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"snmp-memory-map",
         "target"=>"mgmt",
         "help-string"=>
          "Get information about memory mapped file for SNMP traps"}},
     "rule-hit"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"rule-hit",
         "target"=>"mgmt",
         "optional"=>"yes",
         "type"=>"bool",
         "handler"=>"debug_rule_hit_handler",
         "help-string"=>"Enable/Disable debug option for rule hit feature"}},
     "rule-hit-purge"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"rule-hit-purge",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"debug_rule_hit_purge_handler",
         "help-string"=>"Purge rule hit-count data"}},
     "app-usage-data-purge"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"app-usage-data-purge",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"debug_app_usage_data_purge_handler",
         "help-string"=>"Purge app-usage data"}},
     "app-config-trigger"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"app-config-trigger",
         "target"=>"mgmt",
         "optional"=>"yes",
         "type"=>"bool",
         "handler"=>"debug_app_config_trigger_handler",
         "help-string"=>"App config trigger"}},
     "app-usage"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"app-usage",
         "target"=>"mgmt",
         "optional"=>"yes",
         "type"=>"bool",
         "handler"=>"debug_app_usage_handler",
         "help-string"=>"Enable/Disable debug option for App Usage feature"}},
     "autofocus"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"autofocus",
         "target"=>"mgmt",
         "handler"=>"debug_mgmt_autofocus_handler",
         "type"=>"enum"}},
     "conn"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"conn",
         "target"=>"mgmt",
         "handler"=>"debug_conn_handler",
         "help-string"=>"Print mgmt srvr conn entries"}},
     "log-forwarding-stats"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"log-forwarding-stats",
         "target"=>"mgmt",
         "handler"=>"mgmt_srvr_log_fwd_stats",
         "help-string"=>"Show log forwarding statistics"}},
     "on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"debug_on_handler",
         "help-string"=>"Turn on management server debug logging"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "handler"=>"debug_off_handler",
         "help-string"=>"Turn off debug logging"}},
     "clear"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear",
         "handler"=>"debug_clear_handler",
         "help-string"=>"Clear all debug logs"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"debug_show_handler",
         "help-string"=>"Display current debug logging setting"}},
     "db-rollup"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"db-rollup",
         "type"=>"enum",
         "handler"=>"db_rollup",
         "help-string"=>"Enable/disable summary database roll up"}},
     "db-intervals"=>
      {"start-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"start-time",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>
            "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "help-string"=>"Start Time e.g. 2008/01/01 09:00:00"}},
       "end-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"end-time",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>
            "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "help-string"=>"End Time e.g. 2008/12/31 11:59:59"}},
       "period"=>
        {:obj=>:element,
         :attributes=>{"name"=>"period", "optional"=>"yes", "type"=>"enum"}},
       "db"=>{:obj=>:element, :attributes=>{"name"=>"db", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"db-intervals",
         "handler"=>"show_db_intervals",
         "help-string"=>
          "Show available summary intervals for a given period"}},
     "req-stats"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"req-stats",
         "type"=>"enum",
         "handler"=>"dump_req_stats",
         "help-string"=>"Dump req stats"}},
     "memory"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"memory",
         "type"=>"enum",
         "handler"=>"debug_memory_handler",
         "help-string"=>"Debug memory"}},
     "malloc-options"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"malloc-options",
         "type"=>"enum",
         "handler"=>"debug_enable_mallopt",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Debug memory"}},
     "audit-comments"=>
      {"clear"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "help-string"=>"Clear all audit comments in memory",
           "handler"=>"debug_audit_comments_clear_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"audit-comments",
         "target"=>"mgmt",
         "help-string"=>"Debug commands for audit comments"}},
     "secure-conn"=>
      {"show"=>
        {"mgmt"=>
          {"config"=>
            {"file"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"file",
                 "type"=>"enum",
                 "handler"=>"debug_sec_conn_mgt_file_handler"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"config",
               "help-string"=>
                "show configuration related information for management connections."}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"mgmt",
             "help-string"=>
              "show configuration related information for management connections."}},
         "ha"=>
          {"config"=>
            {"file"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"file",
                 "type"=>"enum",
                 "handler"=>"debug_sec_conn_ha_file_handler"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"config",
               "help-string"=>
                "show configuration related information for HA connections."}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"ha",
             "help-string"=>
              "show configuration related information for HA connections."}},
         :obj=>:sequence,
         :attributes=>{"name"=>"show"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"secure-conn",
         "target"=>"mgmt",
         "help-string"=>"show secure connections related debug information."}},
     "rolledup-intervals"=>
      {"start-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"start-time",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>
            "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "help-string"=>"Start Time e.g. 2008/01/01 09:00:00"}},
       "end-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"end-time",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>
            "[0-9][0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "help-string"=>"End Time e.g. 2008/12/31 11:59:59"}},
       "period"=>
        {:obj=>:element,
         :attributes=>{"name"=>"period", "optional"=>"yes", "type"=>"enum"}},
       "db"=>{:obj=>:element, :attributes=>{"name"=>"db", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"rolledup-intervals",
         "handler"=>"show_rolledup_intervals",
         "help-string"=>
          "Show available summary rollups for a given period rolled up optimally"}},
     "set"=>
      {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
       "comm"=>{:obj=>:element, :attributes=>{"name"=>"comm", "type"=>"enum"}},
       "panorama"=>
        {:obj=>:element, :attributes=>{"name"=>"panorama", "type"=>"enum"}},
       "proxy"=>
        {:obj=>:element, :attributes=>{"name"=>"proxy", "type"=>"enum"}},
       "server"=>
        {:obj=>:element, :attributes=>{"name"=>"server", "type"=>"enum"}},
       "lock"=>{:obj=>:element, :attributes=>{"name"=>"lock", "type"=>"enum"}},
       "dynupdsch"=>
        {:obj=>:element, :attributes=>{"name"=>"dynupdsch", "type"=>"enum"}},
       "mongo"=>
        {:obj=>:element, :attributes=>{"name"=>"mongo", "type"=>"enum"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"set",
         "handler"=>"debug_set_handler",
         "help-string"=>"Turn on management server component debug logging"}},
     "unset"=>
      {"all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
       "comm"=>{:obj=>:element, :attributes=>{"name"=>"comm", "type"=>"enum"}},
       "panorama"=>
        {:obj=>:element, :attributes=>{"name"=>"panorama", "type"=>"enum"}},
       "proxy"=>
        {:obj=>:element, :attributes=>{"name"=>"proxy", "type"=>"enum"}},
       "server"=>
        {:obj=>:element, :attributes=>{"name"=>"server", "type"=>"enum"}},
       "lock"=>{:obj=>:element, :attributes=>{"name"=>"lock", "type"=>"enum"}},
       "dynupdsch"=>
        {:obj=>:element, :attributes=>{"name"=>"dynupdsch", "type"=>"enum"}},
       "mongo"=>
        {:obj=>:element, :attributes=>{"name"=>"mongo", "type"=>"enum"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"unset",
         "handler"=>"debug_unset_handler",
         "help-string"=>"Turn off management server component debug logging"}},
     "tracing"=>
      {"set"=>
        {"type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type", "type"=>"enum", "help-string"=>"Tracing type"}},
         "level"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"level", "type"=>"enum", "help-string"=>"Tracing level"}},
         "marker"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"marker",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"Tracing marker"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"set",
           "target"=>"mgmt",
           "handler"=>"tracing_set_handler",
           "help-string"=>"Set tracing"}},
       "clear"=>
        {"type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type", "type"=>"enum", "help-string"=>"Tracing type"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "target"=>"mgmt",
           "handler"=>"tracing_clear_handler",
           "help-string"=>"Clear tracing"}},
       :obj=>:union,
       :attributes=>{"name"=>"tracing", "help-string"=>"Tracing"}},
     "user"=>
      {"info"=>
        {"name"=>
          {:obj=>:element, :attributes=>{"name"=>"name", "type"=>"string"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"debug_user_info_handler",
           "help-string"=>"show user info for debugging"}},
       "bitmap"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"bitmap",
           "handler"=>"debug_show_admin_bitmap_handler",
           "help-string"=>"show admin bitmap for debugging"}},
       :obj=>:union,
       :attributes=>{"name"=>"user", "help-string"=>"see user info"}},
     "access-domain"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"access-domain",
         "handler"=>"debug_ado_handler",
         "help-string"=>"show access-domain info for debugging"}},
     "db-stats"=>
      {"database"=>
        {"db_name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"db_name",
             "type"=>"string",
             "target"=>"exec",
             "handler"=>"/usr/local/bin/db_stats.sh $db_name"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"database"}},
       "collection"=>
        {"db_name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"db_name",
             "type"=>"string",
             "target"=>"exec",
             "handler"=>"/usr/local/bin/db_stats.sh $db_name"}},
         "collection_name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"collection_name",
             "type"=>"string",
             "target"=>"exec",
             "handler"=>
              "/usr/local/bin/db_stats.sh $db_name $collection_name"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"collection"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"db-stats", "help-string"=>"show Database stats"}},
     "nsx"=>
      {"svm-upgrade"=>
        {"show-svm-info"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"show-svm-info",
             "handler"=>"show_svm_upgrade_mgr_dev_info",
             "help-string"=>"Inter-Log collector thread status"}},
         "reset-svm-info"=>
          {"devices"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"devices",
               "help-string"=>"List of devices to install software onto",
               "type"=>"string",
               "maxlen"=>"131072",
               "complete-handler"=>
                "batch_software_eligible_complete_handler"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"reset-svm-info",
             "handler"=>"reset_svm_upgrade_mgr_dev_info",
             "help-string"=>"Delete device upgrade state info"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"svm-upgrade",
           "help-string"=>"Debugging options for svm-upgrade process."}},
       :obj=>:union,
       :attributes=>{"name"=>"nsx", "help-string"=>"NSX debugging commands."}},
     "rule-hit-task-queue"=>
      {"rule-hit-threads"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"rule-hit-threads",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"100",
           "handler"=>"set_rule_hit_task_threads",
           "help-string"=>"Default value = 5"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"rule-hit-task-queue",
         "help-string"=>"Set rule hit task queue parameters"}},
     "evtmgr"=>
      {"max_total_msgs"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"max_total_msgs",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"500000",
           "handler"=>"debug_evtmgr_set_max_total_msgs",
           "help-string"=>"Default value = 500000"}},
       "logd_proxy_q_size"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"logd_proxy_q_size",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"100000",
           "handler"=>"debug_evtmgr_set_logd_proxy_q_size",
           "help-string"=>"Default value = 100000"}},
       "set_conn_q_size"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"set_conn_q_size",
           "type"=>"rangedint",
           "min"=>"20",
           "max"=>"250",
           "handler"=>"set_evtmgr_cms_client_qsize",
           "help-string"=>"Per connection queue size [20-250]"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"evtmgr",
         "help-string"=>"Set event-manager internal settings"}},
     "template-stack"=>
      {"set-max-templates"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"set-max-templates",
           "xmlapi-exposed"=>"no",
           "hidden"=>"yes",
           "type"=>"enum",
           "default"=>"8",
           "target"=>"mgmt",
           "help-string"=>"Set max templates per stack",
           "handler"=>"set_max_templates_perstack"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"template-stack",
         "help-string"=>"Debug option for template-stack"}},
     "contmgr"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"show content manager status",
           "handler"=>"contmgr_status_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"contmgr", "help-string"=>"content manager related debug"}},
     :obj=>:union,
     :attributes=>{"name"=>"management-server", "target"=>"mgmt"}},
   "management-websrvr"=>
    {"clear-cache"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"clear-cache",
         "handler"=>"/usr/local/bin/pan_websrvr_cache_clear",
         "help-string"=>"Clear Nginx webcache",
         "target"=>"script"}},
     "backend"=>
      {"on"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on",
           "type"=>"enum",
           "handler"=>"debug",
           "help-string"=>"Turn on PAN module debug logging temporarily"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "handler"=>"debug",
           "help-string"=>"Turn off debug logging"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"debug",
           "help-string"=>"Display log level setting"}},
       :obj=>:union,
       :attributes=>{"name"=>"backend", "target"=>"websrvr"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"management-websrvr",
       "target"=>"script",
       "help-string"=>"Debug option for management webserver"}},
   "authentication"=>
    {"on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"debug_on_handler",
         "help-string"=>"Turn on authd service debug logging"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "handler"=>"debug_off_handler",
         "help-string"=>"Turn off debug logging"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"debug_show_handler",
         "help-string"=>"Display current debug logging setting"}},
     "show-pending-requests"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-pending-requests",
         "handler"=>"show_pending_requests",
         "help-string"=>"Show pending auth request"}},
     "show-active-requests"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-active-requests",
         "handler"=>"show_processed_requests",
         "help-string"=>"Show active auth request"}},
     "connection-show"=>
      {"protocol-type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"protocol-type",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"Protocol type"}},
       "connection-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"connection-id",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4294967295",
           "help-string"=>"Connection id"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"connection-show",
         "handler"=>"connection_show",
         "help-string"=>
          "Show connection for a specific type or a connection id or all"}},
     "connection-debug-on"=>
      {"protocol-type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"protocol-type",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"Protocol type"}},
       "connection-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"connection-id",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4294967295",
           "help-string"=>"Connection id"}},
       "debug-prefix"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"debug-prefix",
           "optional"=>"yes",
           "type"=>"string",
           "min"=>"1",
           "max"=>"32",
           "help-string"=>"Prefix string for grep in the authd.log"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"connection-debug-on",
         "handler"=>"connection_debug_on",
         "help-string"=>
          "Enable debug on connection for a specific type or a connection id or all"}},
     "connection-debug-off"=>
      {"protocol-type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"protocol-type",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"Protocol type"}},
       "connection-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"connection-id",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4294967295",
           "help-string"=>"Connection id"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"connection-debug-off",
         "handler"=>"connection_debug_off",
         "help-string"=>
          "Disable debug on connection for a specific type or a connection id or all"}},
     :obj=>:union,
     :attributes=>{"name"=>"authentication", "target"=>"authd"}},
   "logd"=>
    {"corr-mgr"=>
      {"on"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_on_handler",
           "help-string"=>"Turn on correlation manager debug"}},
       "off"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"off",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_off_handler",
           "help-string"=>"Turn off correlation manager debug"}},
       "stats"=>
        {"show"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"show",
             "help-string"=>"Show stats",
             "handler"=>"corr_mgr_show_stats_handler"}},
         "clear"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"clear",
             "help-string"=>"Clear stats",
             "handler"=>"corr_mgr_clear_stats_handler"}},
         :obj=>:union,
         :attributes=>{"name"=>"stats"}},
       "show"=>
        {"brief"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"brief",
             "handler"=>"corr_mgr_show_brief_handler",
             "help-string"=>"Brief info of correleation manager"}},
         "object"=>
          {"list"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"list",
               "handler"=>"corr_mgr_list_objects_handler",
               "help-string"=>"List all correleation objects"}},
           "id"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"id",
               "type"=>"string",
               "handler"=>"corr_mgr_show_object_handler",
               "help-string"=>
                "Display object definition of specified ID or name"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"object",
             "help-string"=>"Correleation object related debug info"}},
         "instance"=>
          {"summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "handler"=>"corr_mgr_inst_summary_handler",
               "help-string"=>"Summary of correlation instances"}},
           "search"=>
            {"category"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"category",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Category"}},
             "type"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"type",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Type"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9+/*]+={0,2}$",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search instances",
               "handler"=>"corr_mgr_search_inst_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"instance",
             "help-string"=>"Correlation instance related debug info"}},
         "filter"=>
          {"search"=>
            {"object"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"object",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Object ID, * for any"}},
             "name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Filter name, * for any"}},
             "start-index"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"start-index",
                 "optional"=>"yes",
                 "type"=>"string",
                 "help-string"=>"Starting from index"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search filters",
               "handler"=>"corr_mgr_search_filters_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"filter", "help-string"=>"Filter related debug info"}},
         "failed"=>
          {"serialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"serialize",
               "help-string"=>"Display last failed serializations",
               "handler"=>"corr_mgr_list_failed_serialize_handler"}},
           "deserialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"deserialize",
               "help-string"=>"Display last failed de-serializations",
               "handler"=>"corr_mgr_list_failed_deserilize_handler"}},
           "action"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"action",
               "help-string"=>
                "Display last records with action match problems",
               "handler"=>"corr_mgr_list_failed_action_handler"}},
           "summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "help-string"=>"Dump last records without summary output",
               "handler"=>"corr_mgr_list_failed_summary_handler"}},
           :obj=>:union,
           :attributes=>{"name"=>"failed", "help-string"=>"Failed"}},
         "back-query"=>
          {"status"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"status",
               "type"=>"enum",
               "optional"=>"yes",
               "help-string"=>"List back query jobs"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"back-query",
             "help-string"=>"List back queries",
             "handler"=>"corr_mgr_list_back_query_handler"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show",
           "help-string"=>
            "Display details of correlation manager components"}},
       :obj=>:union,
       :attributes=>{"name"=>"corr-mgr"}},
     "on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"logging_debug_on_handler",
         "help-string"=>"Turn on logging service debug logging"}},
     "off"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"off",
         "type"=>"enum",
         "handler"=>"logging_debug_off_handler",
         "help-string"=>"Turn off logging debug logging"}},
     "keep_summary_on_disk"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"keep_summary_on_disk",
         "type"=>"enum",
         "handler"=>"cms_sdwan_save_summary_handler",
         "help-string"=>
          "knob to control whether save inline summary on local disk"}},
     "max_total_msgs"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"max_total_msgs",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"50000",
         "handler"=>"logd_set_max_total_msgs_handler",
         "help-string"=>"Max       total messages"}},
     "notifier_q_size"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"notifier_q_size",
         "type"=>"rangedint",
         "min"=>"8",
         "max"=>"2048",
         "handler"=>"logd_set_notifier_queue_size_handler",
         "help-string"=>"Default value = 256"}},
     "contmgr"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"show content manager status",
           "handler"=>"contmgr_status_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"contmgr", "help-string"=>"content manager related debug"}},
     :obj=>:union,
     :attributes=>{"name"=>"logd", "target"=>"logd"}},
   "reportd"=>
    {"corr-mgr"=>
      {"on"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_on_handler",
           "help-string"=>"Turn on correlation manager debug"}},
       "off"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"off",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_off_handler",
           "help-string"=>"Turn off correlation manager debug"}},
       "stats"=>
        {"show"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"show",
             "help-string"=>"Show stats",
             "handler"=>"corr_mgr_show_stats_handler"}},
         "clear"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"clear",
             "help-string"=>"Clear stats",
             "handler"=>"corr_mgr_clear_stats_handler"}},
         :obj=>:union,
         :attributes=>{"name"=>"stats"}},
       "show"=>
        {"brief"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"brief",
             "handler"=>"corr_mgr_show_brief_handler",
             "help-string"=>"Brief info of correleation manager"}},
         "object"=>
          {"list"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"list",
               "handler"=>"corr_mgr_list_objects_handler",
               "help-string"=>"List all correleation objects"}},
           "id"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"id",
               "type"=>"string",
               "handler"=>"corr_mgr_show_object_handler",
               "help-string"=>
                "Display object definition of specified ID or name"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"object",
             "help-string"=>"Correleation object related debug info"}},
         "instance"=>
          {"summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "handler"=>"corr_mgr_inst_summary_handler",
               "help-string"=>"Summary of correlation instances"}},
           "search"=>
            {"category"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"category",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Category"}},
             "type"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"type",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Type"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9+/*]+={0,2}$",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search instances",
               "handler"=>"corr_mgr_search_inst_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"instance",
             "help-string"=>"Correlation instance related debug info"}},
         "filter"=>
          {"search"=>
            {"object"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"object",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Object ID, * for any"}},
             "name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Filter name, * for any"}},
             "start-index"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"start-index",
                 "optional"=>"yes",
                 "type"=>"string",
                 "help-string"=>"Starting from index"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search filters",
               "handler"=>"corr_mgr_search_filters_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"filter", "help-string"=>"Filter related debug info"}},
         "failed"=>
          {"serialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"serialize",
               "help-string"=>"Display last failed serializations",
               "handler"=>"corr_mgr_list_failed_serialize_handler"}},
           "deserialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"deserialize",
               "help-string"=>"Display last failed de-serializations",
               "handler"=>"corr_mgr_list_failed_deserilize_handler"}},
           "action"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"action",
               "help-string"=>
                "Display last records with action match problems",
               "handler"=>"corr_mgr_list_failed_action_handler"}},
           "summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "help-string"=>"Dump last records without summary output",
               "handler"=>"corr_mgr_list_failed_summary_handler"}},
           :obj=>:union,
           :attributes=>{"name"=>"failed", "help-string"=>"Failed"}},
         "back-query"=>
          {"status"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"status",
               "type"=>"enum",
               "optional"=>"yes",
               "help-string"=>"List back query jobs"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"back-query",
             "help-string"=>"List back queries",
             "handler"=>"corr_mgr_list_back_query_handler"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show",
           "help-string"=>
            "Display details of correlation manager components"}},
       :obj=>:union,
       :attributes=>{"name"=>"corr-mgr"}},
     "on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"reporting_debug_on_handler",
         "help-string"=>"Turn on reporting service debug logging"}},
     "off"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"off",
         "type"=>"enum",
         "handler"=>"reporting_debug_off_handler",
         "help-string"=>"Turn off reporting debug logging"}},
     "set-timeout"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"set-timeout",
         "type"=>"rangedint",
         "min"=>"300",
         "max"=>"18000",
         "handler"=>"reporting_debug_timeout_handler",
         "help-string"=>"Set report timeout"}},
     "send-request-to-7k"=>
      {"yes"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"yes",
           "help-string"=>
            "Send query request to 7k regardless software version",
           "handler"=>
            "/usr/local/bin/sdb -n cfg.general.send-request-to-7k=true"}},
       "no"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no",
           "help-string"=>
            "Only send query request to 7k running pre-8.0 software (default)",
           "handler"=>
            "/usr/local/bin/sdb -n cfg.general.send-request-to-7k=false"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "help-string"=>"Show the current setting for send-request-to-7k",
           "handler"=>
            "/usr/local/bin/sdb -n cfg.general.send-request-to-7k | /usr/bin/less -X -E --prompt=smore"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"send-request-to-7k",
         "target"=>"script",
         "help-string"=>"Send query request to 7k regardless the sw version"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"reporting_debug_show_handler",
         "help-string"=>"Display current debug logging setting"}},
     "contmgr"=>
      {"status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "help-string"=>"show content manager status",
           "handler"=>"contmgr_status_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"contmgr", "help-string"=>"content manager related debug"}},
     :obj=>:union,
     :attributes=>{"name"=>"reportd", "target"=>"reportd"}},
   "cord"=>
    {"corr-mgr"=>
      {"on"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_on_handler",
           "help-string"=>"Turn on correlation manager debug"}},
       "off"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"off",
           "type"=>"enum",
           "handler"=>"corr_mgr_debug_off_handler",
           "help-string"=>"Turn off correlation manager debug"}},
       "stats"=>
        {"show"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"show",
             "help-string"=>"Show stats",
             "handler"=>"corr_mgr_show_stats_handler"}},
         "clear"=>
          {"object"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"object",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>"Object ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"clear",
             "help-string"=>"Clear stats",
             "handler"=>"corr_mgr_clear_stats_handler"}},
         :obj=>:union,
         :attributes=>{"name"=>"stats"}},
       "show"=>
        {"brief"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"brief",
             "handler"=>"corr_mgr_show_brief_handler",
             "help-string"=>"Brief info of correleation manager"}},
         "object"=>
          {"list"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"list",
               "handler"=>"corr_mgr_list_objects_handler",
               "help-string"=>"List all correleation objects"}},
           "id"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"id",
               "type"=>"string",
               "handler"=>"corr_mgr_show_object_handler",
               "help-string"=>
                "Display object definition of specified ID or name"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"object",
             "help-string"=>"Correleation object related debug info"}},
         "instance"=>
          {"summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "handler"=>"corr_mgr_inst_summary_handler",
               "help-string"=>"Summary of correlation instances"}},
           "search"=>
            {"category"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"category",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Category"}},
             "type"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"type",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9_-]+$",
                 "help-string"=>"Type"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "regex"=>"^[a-zA-Z0-9+/*]+={0,2}$",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search instances",
               "handler"=>"corr_mgr_search_inst_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"instance",
             "help-string"=>"Correlation instance related debug info"}},
         "filter"=>
          {"search"=>
            {"object"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"object",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Object ID, * for any"}},
             "name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Filter name, * for any"}},
             "start-index"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"start-index",
                 "optional"=>"yes",
                 "type"=>"string",
                 "help-string"=>"Starting from index"}},
             "contains"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"contains",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Search string, * for any"}},
             "skip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"skip",
                 "type"=>"string",
                 "optional"=>"yes",
                 "help-string"=>"Number of entries to skip"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"search",
               "help-string"=>"Search filters",
               "handler"=>"corr_mgr_search_filters_handler"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"filter", "help-string"=>"Filter related debug info"}},
         "failed"=>
          {"serialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"serialize",
               "help-string"=>"Display last failed serializations",
               "handler"=>"corr_mgr_list_failed_serialize_handler"}},
           "deserialize"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"deserialize",
               "help-string"=>"Display last failed de-serializations",
               "handler"=>"corr_mgr_list_failed_deserilize_handler"}},
           "action"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"action",
               "help-string"=>
                "Display last records with action match problems",
               "handler"=>"corr_mgr_list_failed_action_handler"}},
           "summary"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"summary",
               "help-string"=>"Dump last records without summary output",
               "handler"=>"corr_mgr_list_failed_summary_handler"}},
           :obj=>:union,
           :attributes=>{"name"=>"failed", "help-string"=>"Failed"}},
         "back-query"=>
          {"status"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"status",
               "type"=>"enum",
               "optional"=>"yes",
               "help-string"=>"List back query jobs"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"back-query",
             "help-string"=>"List back queries",
             "handler"=>"corr_mgr_list_back_query_handler"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show",
           "help-string"=>
            "Display details of correlation manager components"}},
       :obj=>:union,
       :attributes=>{"name"=>"corr-mgr"}},
     "on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"cord_debug_on_handler",
         "help-string"=>"Turn on cord service debug logging"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "handler"=>"cord_debug_off_handler",
         "help-string"=>"Turn off debug logging"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"cord_debug_show_handler",
         "help-string"=>"Display current debug logging setting"}},
     "stats"=>
      {"show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"cord_debug_stats_show_handler",
           "help-string"=>"View correlation log collection stats"}},
       "clear"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "handler"=>"cord_debug_stats_clear_handler",
           "help-string"=>"View correlation log collection stats"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"stats", "help-string"=>"View/clear logging stats"}},
     "object-stats"=>
      {"show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"cord_debug_object_stats_show_handler",
           "help-string"=>"View correlation per object log collection stats"}},
       "clear"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "handler"=>"cord_debug_object_stats_clear_handler",
           "help-string"=>
            "Clear per object log correlation log collection stats"}},
       "show-setting"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show-setting",
           "handler"=>"cord_debug_object_stats_show_setting_handler",
           "help-string"=>
            "Clear per object log correlation log collection stats"}},
       "set"=>
        {"off"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"off",
             "handler"=>"cord_debug_object_stats_off_handler",
             "help-string"=>"Turn off per object collection"}},
         "on"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"on",
             "handler"=>"cord_debug_object_stats_on_handler",
             "help-string"=>"Turn on per object collection"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"set",
           "help-string"=>"Turn on/off per object stats collection"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"object-stats",
         "help-string"=>"View/clear per object logging stats"}},
     "delete"=>
      {"db"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"db",
           "handler"=>"cord_delete_corr_db_handler",
           "help-string"=>"Delete correlation db.",
           "confirm"=>
            "Deleting db will delete all events from all correlation objects, you also will need to restart cdb and cord. Do you want to continue?"}},
       "events"=>
        {"objectname"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"objectname",
             "type"=>"string",
             "help-string"=>"correlation object name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"events",
           "help-string"=>"Delete correlation events",
           "handler"=>"cord_delete_corr_events_handler",
           "confirm"=>
            "Deleting correlation events will delete all events for given object. Do you want to continue?"}},
       "instances"=>
        {"match"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"match",
             "type"=>"string",
             "help-string"=>"Match pattern, '*' for all"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"instances",
           "help-string"=>"Delete correlation instances",
           "handler"=>"cord_delete_corr_instances_handler",
           "confirm"=>
            "All matching correlation instancess will be deleted. Do you want to continue?"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"delete", "help-string"=>"Delete correlation db"}},
     :obj=>:union,
     :attributes=>{"name"=>"cord", "target"=>"cord"}},
   "sslmgr"=>
    {"on"=>
      {"error"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"error",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=error"}},
       "warn"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"warn",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=warn"}},
       "info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=info"}},
       "debug"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"debug",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=debug"}},
       "dump"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"dump",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=dump"}},
       :obj=>:union,
       :attributes=>{"name"=>"on"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb sw.sslmgr.runtime.debug.level=off"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb sw.sslmgr.runtime.debug.level"}},
     "statistics"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"statistics",
         "handler"=>"sslmgr_debug_stats",
         "help-string"=>"Show CRL/OCSP statistics"}},
     "tar-all-crl"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"tar-all-crl",
         "target"=>"script",
         "handler"=>
          "cd /opt/pancfg/certificates/crl;/bin/tar cfz ./backup/crl.tgz *.c*",
         "help-string"=>"Tar all CRL files"}},
     "save"=>
      {"ocsp"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ocsp",
           "handler"=>"sslmgr_save_ocsp",
           "help-string"=>"Save OCSP cache"}},
       :obj=>:union,
       :attributes=>{"name"=>"save", "help-string"=>"Save OCSP cache"}},
     "view"=>
      {"crl"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"crl",
           "type"=>"string",
           "maxlen"=>"256",
           "complete-handler"=>"sslmgr_file_complete",
           "handler"=>"sslmgr_view_crl",
           "help-string"=>"View CRL cache"}},
       "ocsp"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ocsp",
           "type"=>"multiple",
           "complete-handler"=>"sslmgr_ocsp_url_complete",
           "handler"=>"sslmgr_view_ocsp",
           "help-string"=>"View OCSP cache"}},
       :obj=>:union,
       :attributes=>{"name"=>"view", "help-string"=>"View CRL/OCSP cache"}},
     "delete"=>
      {"crl"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"crl",
           "type"=>"multiple",
           "complete-handler"=>"sslmgr_file_complete",
           "handler"=>"sslmgr_delete_crl",
           "help-string"=>"Delete CRL cache"}},
       "ocsp"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ocsp",
           "type"=>"multiple",
           "complete-handler"=>"sslmgr_ocsp_url_complete",
           "handler"=>"sslmgr_delete_ocsp",
           "help-string"=>"Delete OCSP cache"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"delete", "help-string"=>"Delete CRL/OCSP cache"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"sslmgr",
       "target"=>"sslmgr",
       "help-string"=>"debug option for sslmgr daemon"}},
   "set-content-download-retry"=>
    {"attempts"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"attempts",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"3",
         "optional"=>"no",
         "help-string"=>"Set content download retry attempts"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"set-content-download-retry",
       "target"=>"exec",
       "handler"=>
        "/usr/local/bin/sdb cfg.mgmtsrvr.content-download-retry=$attempts",
       "help-string"=>"Set content download retry attempts"}},
   "skip-policy-address-check"=>
    {"no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-addr-check=no; echo This command must be executed on the peer if in high-availability mode."}},
     "yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-addr-check=yes; echo This command must be executed on the peer if in high-availability mode."}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -n cfg.policy.skip-addr-check"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"skip-policy-address-check",
       "help-string"=>"debug option for skip policy address validation"}},
   "skip-policy-edl-check"=>
    {"no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-edl-check=no; echo This command must be executed on the peer if in high-availability mode."}},
     "yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-edl-check=yes; echo This command must be executed on the peer if in high-availability mode."}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -n cfg.policy.skip-edl-check"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"skip-policy-edl-check",
       "help-string"=>
        "debug option for skip external-list object validation"}},
   "skip-policy-profile-check"=>
    {"no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-profile-check=no; echo This command must be executed on the peer if in high-availability mode."}},
     "yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-profile-check=yes; echo This command must be executed on the peer if in high-availability mode."}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -n cfg.policy.skip-profile-check"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"skip-policy-profile-check",
       "help-string"=>"debug option for skip policy profile validation"}},
   "skip-policy-profile-group-check"=>
    {"no"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-profilegrp-check=no; echo This command must be executed on the peer if in high-availability mode."}},
     "yes"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"yes",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb cfg.policy.skip-profilegrp-check=yes; echo This command must be executed on the peer if in high-availability mode."}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "target"=>"script",
         "handler"=>"/usr/local/bin/sdb -n cfg.policy.skip-profilegrp-check"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"skip-policy-profile-group-check",
       "help-string"=>
        "debug option for skip policy profile-group validation"}},
   "high-availability-agent"=>
    {"on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "handler"=>"ha_debug_on_handler",
         "help-string"=>"Turn on high-availability-agent debug logging"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "handler"=>"ha_debug_off_handler",
         "help-string"=>"Turn off debug logging"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"ha_debug_show_handler",
         "help-string"=>"Display current debug logging setting"}},
     "internal-dump"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"internal-dump",
         "target"=>"dagger",
         "handler"=>"ha_show.dump",
         "help-string"=>"Dump internal state of agent"}},
     :obj=>:union,
     :attributes=>{"name"=>"high-availability-agent", "target"=>"mgmt"}},
   "user-id"=>
    {"set"=>
      {"agent"=>
        {:obj=>:element, :attributes=>{"name"=>"agent", "type"=>"enum"}},
       "userid"=>
        {:obj=>:element, :attributes=>{"name"=>"userid", "type"=>"enum"}},
       "ldap"=>{:obj=>:element, :attributes=>{"name"=>"ldap", "type"=>"enum"}},
       "base"=>{:obj=>:element, :attributes=>{"name"=>"base", "type"=>"enum"}},
       "hip"=>{:obj=>:element, :attributes=>{"name"=>"hip", "type"=>"enum"}},
       "third-party"=>
        {:obj=>:element, :attributes=>{"name"=>"third-party", "type"=>"enum"}},
       "misc"=>{:obj=>:element, :attributes=>{"name"=>"misc", "type"=>"enum"}},
       "all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
       :obj=>:union,
       :attributes=>{"name"=>"set", "handler"=>"debug_set"}},
     "unset"=>
      {"agent"=>
        {:obj=>:element, :attributes=>{"name"=>"agent", "type"=>"enum"}},
       "userid"=>
        {:obj=>:element, :attributes=>{"name"=>"userid", "type"=>"enum"}},
       "ldap"=>{:obj=>:element, :attributes=>{"name"=>"ldap", "type"=>"enum"}},
       "base"=>{:obj=>:element, :attributes=>{"name"=>"base", "type"=>"enum"}},
       "third-party"=>
        {:obj=>:element, :attributes=>{"name"=>"third-party", "type"=>"enum"}},
       "misc"=>{:obj=>:element, :attributes=>{"name"=>"misc", "type"=>"enum"}},
       "all"=>{:obj=>:sequence, :attributes=>{"name"=>"all"}},
       :obj=>:union,
       :attributes=>{"name"=>"unset", "handler"=>"debug_unset"}},
     "on"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on",
         "type"=>"enum",
         "help-string"=>"Turn on user-id debug logging",
         "handler"=>"debug_on"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "help-string"=>"Turn off debug logging",
         "handler"=>"debug_off"}},
     "get"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"get",
         "help-string"=>"Display current debug logging setting",
         "handler"=>"debug_get"}},
     "clear"=>
      {"log"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"log",
           "help-string"=>"Clear debug logs",
           "handler"=>"debug_clear"}},
       "group"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name",
             "help-string"=>"Device group name"}},
         "group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"group",
             "type"=>"multiple",
             "complete-handler"=>"group_complete_handler",
             "help-string"=>"Clear group data"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"group",
           "handler"=>"debug_clear_group",
           "help-string"=>"Show user groups data"}},
       "domain-map"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"domain-map", "handler"=>"clear_dns_map"}},
       "email-cache"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"email-cache",
           "needvsys"=>"yes",
           "handler"=>"clear_email_cache",
           "help-string"=>"Clear email cache"}},
       :obj=>:union,
       :attributes=>{"name"=>"clear", "help-string"=>"Clear data"}},
     "log-ip-user-mapping"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-ip-user-mapping",
         "type"=>"bool",
         "help-string"=>"whether to generate logs for ip user mapping",
         "handler"=>"log_ipuser_handler"}},
     "log-ip-tag-mapping"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-ip-tag-mapping",
         "type"=>"bool",
         "help-string"=>"whether to generate logs for ip tag mapping",
         "handler"=>"log_iptag_handler"}},
     "log-user-tag-mapping"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-user-tag-mapping",
         "type"=>"bool",
         "help-string"=>"whether to generate logs for user tag mapping",
         "handler"=>"log_usertag_handler"}},
     "query-unknown-ip"=>
      {"on"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"on",
           "handler"=>"/usr/local/bin/sdb cfg.useridd.query-unknown-ip=1"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "handler"=>"/usr/local/bin/sdb cfg.useridd.query-unknown-ip=0"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"query-unknown-ip",
         "target"=>"script",
         "help-string"=>"whether to query agent for unknown IPs"}},
     "wmic-dynamic-range"=>
      {"on"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"on",
           "handler"=>"/usr/local/bin/sdb cfg.useridd.wmic-dynamic-range=1"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "handler"=>"/usr/local/bin/sdb cfg.useridd.wmic-dynamic-range=0"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"wmic-dynamic-range",
         "target"=>"script",
         "help-string"=>"enable time range for server monitor with type WMI"}},
     "disable-max-initial-wmi"=>
      {"on"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"on",
           "handler"=>
            "/usr/local/bin/sdb cfg.useridd.disable-max-initial-wmi=True"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "handler"=>
            "/usr/local/bin/sdb cfg.useridd.disable-max-initial-wmi=False"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disable-max-initial-wmi",
         "target"=>"script",
         "help-string"=>"whether to disable max initial wmi queries"}},
     "disable-hip-ha"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"disable-hip-ha",
         "type"=>"bool",
         "help-string"=>"disable HIP reports HA",
         "handler"=>"disable_hip_ha"}},
     "agent"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "maxlen"=>"31",
             "help-string"=>"specify one agent"}},
         "on"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"on",
             "type"=>"enum",
             "help-string"=>"Turn on agent debug logging",
             "handler"=>"debug_agent_on"}},
         "off"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"off",
             "help-string"=>"Turn off agent debug logging",
             "handler"=>"debug_agent_off"}},
         "clear"=>
          {"log"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"log",
               "help-string"=>"Clear local agent debug logs",
               "handler"=>"debug_agent_clear"}},
           "group-mapping"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"group-mapping",
               "type"=>"multiple",
               "complete-handler"=>"$vsys/group-mapping/entry/@name",
               "help-string"=>"Clear group mapping data on agent",
               "handler"=>"debug_agent_clear_group_mapping"}},
           :obj=>:union,
           :attributes=>{"name"=>"clear", "help-string"=>"Clear agent data"}},
         "status"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"status",
             "handler"=>"show_agent_status",
             "help-string"=>"Show agent status"}},
         "group-mapping"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "maxlen"=>"31",
                 "help-string"=>"specify group-mapping"}},
             "group"=>
              {"list"=>
                {:obj=>:sequence,
                 :attributes=>
                  {"name"=>"list", "help-string"=>"List All groups on agent"}},
               "name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                   "maxlen"=>"1023",
                   "help-string"=>"Show group's members on agent"}},
               :obj=>:union,
               :attributes=>
                {"name"=>"group",
                 "handler"=>"show_agent_group",
                 "help-string"=>"Show user groups data"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"group-mapping",
             "help-string"=>"show proxied group mapping data on agent",
             "complete-handler"=>"$vsys/group-mapping/entry/@name"}},
         "receive"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"receive",
             "type"=>"bool",
             "help-string"=>"whether to receive log from agent",
             "handler"=>"debug_agent_on"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"agent",
         "needvsys"=>"yes",
         "help-string"=>"Debug agent",
         "complete-handler"=>
          "$config/panorama/redistribution-agent/entry/@name"}},
     "refresh"=>
      {"user-id"=>
        {"agent"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"agent",
             "type"=>"multiple",
             "complete-handler"=>
              "$config/panorama/redistribution-agent/entry/@name",
             "help-string"=>"specify user-id agent"}},
         "ip"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "optional"=>"yes",
             "help-string"=>"Query IP address"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"user-id",
           "help-string"=>"refetch from user-id agent",
           "handler"=>"refresh_user_id_agent"}},
       "dp-uid-gid"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"dp-uid-gid",
           "help-string"=>"refresh dp's user group info",
           "handler"=>"refresh_dp_uid_gid"}},
       :obj=>:union,
       :attributes=>{"name"=>"refresh", "help-string"=>"Refresh data"}},
     "reset"=>
      {"user-id-agent"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user-id-agent",
           "type"=>"multiple",
           "complete-handler"=>
            "$config/panorama/redistribution-agent/entry/@name",
           "help-string"=>"reconnect user-id agent",
           "handler"=>"reset_user_id_agent"}},
       "device-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-group",
           "type"=>"multiple",
           "complete-handler"=>"dg_complete_handler",
           "help-string"=>"reset user group sync",
           "handler"=>"reset_user_id_dg"}},
       "user-id-manager"=>
        {"type"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"all", "help-string"=>"Reset all types"}},
           "user"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"user", "help-string"=>"Reset users' ids"}},
           "user-group"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"user-group", "help-string"=>"Reset user-groups' ids"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"type",
             "help-string"=>"Reset a specific type or all types"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"user-id-manager",
           "help-string"=>"Clear id manager cache file",
           "handler"=>"reset_idmgr"}},
       "com"=>
        {"statistics"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"statistics",
             "help-string"=>"clear messages statistics"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"com",
           "help-string"=>"clear com messages statistics",
           "handler"=>"reset_com_stats"}},
       "conn-mgr"=>
        {"statistics"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"statistics",
             "help-string"=>"clear messages statistics"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"conn-mgr",
           "help-string"=>"clear conn-mgr messages statistics",
           "handler"=>"reset_conn_mgr"}},
       "ip-user-mapping-stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ip-user-mapping-stats",
           "help-string"=>"clear ip user mapping counters",
           "handler"=>"reset_ip_user_send_to_dp_fail_stats"}},
       :obj=>:union,
       :attributes=>{"name"=>"reset", "help-string"=>"Reset data"}},
     "save"=>
      {"hip-profile-database"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"hip-profile-database",
           "help-string"=>"Save hip-profile db",
           "handler"=>"save_hip_profile_db"}},
       :obj=>:union,
       :attributes=>{"name"=>"save", "help-string"=>"Save data"}},
     "test"=>
      {"agentless"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"agentless",
           "help-string"=>"debug agentless user-id with wmic query",
           "cli-handler"=>"agentless-wmic-query-handler"}},
       "sso-login"=>
        {"ip-address"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip-address",
             "type"=>"ipspec",
             "help-string"=>"Dot format IP address"}},
         "user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"user",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Fully qualified user name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"sso-login",
           "help-string"=>"Test sso login",
           "handler"=>"test_sso_login"}},
       "cp-login"=>
        {"ip-address"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip-address",
             "type"=>"ipspec",
             "help-string"=>"Dot format IP address"}},
         "user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"user",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Fully qualified user name"}},
         "factor-id-1"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-id-1",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "optional"=>"yes",
             "help-string"=>"Factor ID for the first factor"}},
         "factor-timestamp-1"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-timestamp-1",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "optional"=>"yes",
             "help-string"=>"Factor timestamp for the first factor"}},
         "factor-id-2"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-id-2",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "optional"=>"yes",
             "help-string"=>"Factor ID for the second factor"}},
         "factor-timestamp-2"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-timestamp-2",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "optional"=>"yes",
             "help-string"=>"Factor timestamp for the second factor"}},
         "factor-id-3"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-id-3",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "optional"=>"yes",
             "help-string"=>"Factor ID for the third factor"}},
         "factor-timestamp-3"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"factor-timestamp-3",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"4294967295",
             "optional"=>"yes",
             "help-string"=>"Factor timestamp for the third factor"}},
         "traceroute"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"traceroute", "type"=>"bool", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"cp-login",
           "help-string"=>"Test captive-portal login",
           "handler"=>"test_cp_login"}},
       "cp-logout"=>
        {"ip-address"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip-address",
             "type"=>"ipspec",
             "help-string"=>"Dot format IP address"}},
         "user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"user",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Fully qualified user name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"cp-logout",
           "help-string"=>"Test captive-portal logout",
           "handler"=>"test_cp_logout"}},
       "hip-update"=>
        {"ip"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip",
             "type"=>"ipspec",
             "optional"=>"yes",
             "complete-handler"=>"hip_report_ip_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"hip-update",
           "needvsys"=>"yes",
           "help-string"=>
            "Test sending hip update message to user-id collectors",
           "handler"=>"test_hip_update"}},
       "hip-profile-database"=>
        {"size"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"size",
             "type"=>"rangedint",
             "optional"=>"yes",
             "min"=>"1",
             "max"=>"65536"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"hip-profile-database",
           "help-string"=>"Test batch hip-profile db population",
           "timeout"=>"600",
           "handler"=>"test_hip_profile_db"}},
       "idmgr-change-max"=>
        {"type"=>
          {"user-group"=>
            {"new-max-id"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"new-max-id",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295",
                 "help-string"=>"Specify new max id"}},
             :obj=>:union,
             :attributes=>{"name"=>"user-group"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"type",
             "help-string"=>"Change max id for a specific type"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"idmgr-change-max",
           "help-string"=>"Test idmgr change max id",
           "handler"=>"test_idmgr_change_max"}},
       "idmgr-restore-default-max"=>
        {"type"=>
          {"user-group"=>
            {:obj=>:sequence, :attributes=>{"name"=>"user-group"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"type",
             "help-string"=>"Restore the default max id for a specific type"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"idmgr-restore-default-max",
           "help-string"=>"Test idmgr restore default max id",
           "handler"=>"test_idmgr_restore_default_max"}},
       :obj=>:union,
       :attributes=>{"name"=>"test"}},
     "dump"=>
      {"hip-report"=>
        {"user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"user",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"1023",
             "complete-handler"=>"hip_report_user_complete_handler"}},
         "ip"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ip",
             "type"=>"ipspec",
             "complete-handler"=>"hip_report_ip_complete_handler"}},
         "computer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"computer",
             "type"=>"string",
             "maxlen"=>"255",
             "regex"=>"^.+$",
             "complete-handler"=>"hip_report_computer_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"hip-report",
           "help-string"=>"Dump hip-report",
           "handler"=>"dump_hip_report"}},
       "hip-profile-database"=>
        {"ipmapping"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"ipmapping",
             "optional"=>"yes",
             "help-string"=>"Dump the ipmapping of hip-profile db",
             "handler"=>"dump_hip_profile_db_ipmapping"}},
         "statistics"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"statistics",
             "optional"=>"yes",
             "help-string"=>"Dump the statistics of hip-profile db",
             "handler"=>"dump_hip_profile_db_statistics"}},
         "entry"=>
          {"start-from"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"start-from",
               "optional"=>"yes",
               "type"=>"rangedint",
               "min"=>"1",
               "max"=>"131072",
               "help-string"=>"Dump hip-profile db starting from index"}},
           "ip"=>
            {:obj=>:element,
             :attributes=>{"name"=>"ip", "type"=>"ipspec", "optional"=>"yes"}},
           "show-logout"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"show-logout", "type"=>"bool", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"entry", "help-string"=>"Dump hip-profile db entries"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"hip-profile-database",
           "help-string"=>"Dump hip-profile db",
           "handler"=>"dump_hip_profile_db"}},
       "domain-id-table"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name",
             "help-string"=>"Device group name"}},
         "domain"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"all", "help-string"=>"Display all Domain ID mapping"}},
           "name"=>
            {:obj=>:element,
             :attributes=>{"name"=>"name", "type"=>"string", "maxlen"=>"64"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"domain", "help-string"=>"all domains or domain name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"domain-id-table",
           "help-string"=>"Dump Domain ID mapping",
           "handler"=>"dump_domain_table"}},
       "uid-2-primeuid"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name",
             "help-string"=>"Device group name"}},
         "user"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"all", "help-string"=>"Display all Domain ID mapping"}},
           "id"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"id",
               "type"=>"rangedint",
               "min"=>"1",
               "max"=>"4294967295"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"user", "help-string"=>"all users or user id"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"uid-2-primeuid",
           "help-string"=>"Dump alternate uid to Prime uid mapping",
           "handler"=>"dump_uid2primeuid"}},
       "userPrefix-2-uid"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name",
             "help-string"=>"Device group name"}},
         "user"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"all", "help-string"=>"Display all Domain ID mapping"}},
           "name"=>
            {:obj=>:element,
             :attributes=>{"name"=>"name", "type"=>"string", "maxlen"=>"64"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"user", "help-string"=>"all users or user name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"userPrefix-2-uid",
           "help-string"=>"Dump usernamePrefix to uid mapping",
           "handler"=>"dump_userprefix2uid"}},
       "uid-2-metadata"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/device-group/entry/@name",
             "help-string"=>"Device group name"}},
         "user"=>
          {"all"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"all", "help-string"=>"Display all Domain ID mapping"}},
           "id"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"id",
               "type"=>"rangedint",
               "min"=>"1",
               "max"=>"4294967295"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"user", "help-string"=>"all users or user id"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"uid-2-metadata",
           "help-string"=>"Dump uid to metadata mapping",
           "handler"=>"dump_uid2metadata"}},
       "idmgr"=>
        {"high-availability"=>
          {"state"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"state",
               "help-string"=>"Show id manager state compared with peer"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"high-availability", "handler"=>"dump_idmgr_ha_state"}},
         "redis"=>
          {"type"=>
            {"user"=>
              {"all"=>
                {:obj=>:sequence,
                 :attributes=>
                  {"name"=>"all",
                   "help-string"=>"Display all user name and id"}},
               "id"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"id",
                   "type"=>"rangedint",
                   "min"=>"1",
                   "max"=>"4294967295"}},
               "name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                   "maxlen"=>"64"}},
               :obj=>:union,
               :attributes=>
                {"name"=>"user", "help-string"=>"Only user name and id"}},
             "user-group"=>
              {"all"=>
                {:obj=>:sequence,
                 :attributes=>
                  {"name"=>"all",
                   "help-string"=>"Display all user-group name and id"}},
               "id"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"id",
                   "type"=>"rangedint",
                   "min"=>"1",
                   "max"=>"4294967295"}},
               "name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                   "maxlen"=>"64"}},
               :obj=>:union,
               :attributes=>
                {"name"=>"user-group",
                 "help-string"=>"Only user-group name and id"}},
             :obj=>:union,
             :attributes=>
              {"name"=>"type",
               "help-string"=>"Dump specific type",
               "handler"=>"dump_redis_idmgr"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"redis", "help-string"=>"Dump redis idmgr data"}},
         "type"=>
          {"user"=>
            {"all"=>
              {:obj=>:sequence,
               :attributes=>
                {"name"=>"all",
                 "help-string"=>"Display all user name and id"}},
             "id"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"id",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295"}},
             "name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                 "maxlen"=>"64"}},
             :obj=>:union,
             :attributes=>
              {"name"=>"user", "help-string"=>"Only user name and id"}},
           "user-group"=>
            {"all"=>
              {:obj=>:sequence,
               :attributes=>
                {"name"=>"all",
                 "help-string"=>"Display all user-group name and id"}},
             "id"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"id",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295"}},
             "name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
                 "maxlen"=>"64"}},
             :obj=>:union,
             :attributes=>
              {"name"=>"user-group",
               "help-string"=>"Only user-group name and id"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"type",
             "help-string"=>"Dump specific type",
             "handler"=>"dump_idmgr"}},
         :obj=>:union,
         :attributes=>{"name"=>"idmgr", "help-string"=>"Dump idmgr data"}},
       "log-stats"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"log-stats", "handler"=>"show_log_stats"}},
       "uid-req-stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"uid-req-stats", "handler"=>"show_uid_req_stats"}},
       "ip-user-mapping-stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ip-user-mapping-stats",
           "handler"=>"show_ip_user_send_to_dp_fail_stats",
           "help-string"=>"Show IP user mapping counters"}},
       "domain-map"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"domain-map", "handler"=>"show_dns_map"}},
       "ha"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ha",
           "help-string"=>"Dump ha state",
           "handler"=>"show_ha_state"}},
       "memory"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"memory",
           "type"=>"enum",
           "help-string"=>"Dump memory usage",
           "handler"=>"show_memory_usage"}},
       "state"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"state",
           "help-string"=>"Dump user-id daemon state",
           "handler"=>"show_daemon_state"}},
       "com"=>
        {"statistics"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"statistics",
             "help-string"=>"Dump com messages statistics"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"com",
           "help-string"=>"Dump com messages statistics",
           "handler"=>"show_com_stats"}},
       "xmlapi-stats"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"xmlapi-stats",
           "needvsys"=>"yes",
           "handler"=>"show_xmlapi_stats"}},
       "conn-mgr"=>
        {"statistics"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"statistics",
             "help-string"=>"Dump conn-mgr messages statistics"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"conn-mgr",
           "help-string"=>"Dump user-id conn-mgr messages statistics",
           "handler"=>"show_conn_mgr"}},
       "email-cache"=>
        {"all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all", "help-string"=>"Show all entries in email cache"}},
         "email"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"email",
             "type"=>"string",
             "minlen"=>"1",
             "maxlen"=>"255",
             "help-string"=>"Show email entry in email cache"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"email-cache",
           "needvsys"=>"yes",
           "handler"=>"show_email_cache",
           "help-string"=>"Show email cache"}},
       :obj=>:union,
       :attributes=>{"name"=>"dump", "help-string"=>"Dump debug data"}},
     :obj=>:union,
     :attributes=>{"name"=>"user-id", "target"=>"useridd"}},
   "object"=>
    {"registered-ip"=>
      {"clear"=>
        {"all"=>
          {"source-name"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"source-name",
               "type"=>"multiple",
               "optional"=>"yes",
               "complete-handler"=>"$vsys/vm-info-source/entry/@name",
               "timeout"=>"300"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "help-string"=>"Clear all registered ips from all sources"}},
         "ip"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>{"name"=>"name", "type"=>"ipspec"}},
             "source-name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"source-name", "type"=>"multiple", "timeout"=>"300"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"ip",
             "help-string"=>
              "Clear the specified registered ip received XMLAPI/User-id Agent",
             "handler"=>"clear_regip"}},
         "iprange"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"iprangespec",
                 "help-string"=>"Dot format IP range ip1-ip2"}},
             "source-name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"source-name", "type"=>"multiple", "timeout"=>"300"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"iprange",
             "help-string"=>
              "Clear the specified registered ip-range received XMLAPI/User-id Agent",
             "handler"=>"clear_regip"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"clear",
           "handler"=>"clear_regip",
           "needvsys"=>"yes",
           "help-string"=>"Clear registered ip addresses",
           "timeout"=>"300"}},
       "test"=>
        {"download-mode"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"download-mode",
             "help-string"=>"Set download mode for registered ip(s)",
             "type"=>"enum"}},
         "download"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"download",
             "help-string"=>"Trigger download of registered ip(s)"}},
         "register"=>
          {"ip"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"ip",
               "type"=>"ipspec",
               "help-string"=>"Dot format IP address"}},
           "iprange"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"iprange",
               "type"=>"iprangespec",
               "help-string"=>"Dot format IP range ip1-ip2"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag",
               "type"=>"string",
               "maxlen"=>"128",
               "help-string"=>"tag"}},
           "spid"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"spid",
               "type"=>"string",
               "optional"=>"yes",
               "maxlen"=>"128",
               "help-string"=>"Service Profile ID"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"register",
             "help-string"=>"register an ip as XMLAPI",
             "handler"=>"test_regip_reg"}},
         "unregister"=>
          {"ip"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"ip",
               "type"=>"ipspec",
               "help-string"=>"Dot format IP address"}},
           "iprange"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"iprange",
               "type"=>"iprangespec",
               "help-string"=>"Dot format IP range ip1-ip2"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag",
               "type"=>"string",
               "optional"=>"yes",
               "maxlen"=>"128",
               "help-string"=>"tag"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"unregister",
             "help-string"=>"unregister an ip as XMLAPI",
             "handler"=>"test_regip_unreg"}},
         :obj=>:union,
         :attributes=>{"name"=>"test", "handler"=>"test_regip_dnld"}},
       "show"=>
        {"tag-source"=>
          {"ip"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"ip",
               "type"=>"ipspec",
               "help-string"=>"Dot format ip address"}},
           "iprange"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"iprange",
               "type"=>"iprangespec",
               "help-string"=>"Dot format ip range ip1-ip2"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag", "type"=>"multiple", "help-string"=>"Tag"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"tag-source",
             "help-string"=>"Show registered-ip with tag and source"}},
         :obj=>:union,
         :attributes=>{"name"=>"show", "handler"=>"debug_show_regip_tagsrc"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"registered-ip", "help-string"=>"registered-ip Addresses"}},
     "registered-user"=>
      {"clear"=>
        {"all"=>
          {"tag-source"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag-source", "type"=>"multiple", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "help-string"=>"Clear all registered users from all sources"}},
         "user"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$"}},
             "tag-source"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"tag-source", "type"=>"multiple", "optional"=>"yes"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"user",
             "help-string"=>
              "Clear the specified registered user received XMLAPI/User-id Agent"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"clear",
           "handler"=>"clear_reguser",
           "needvsys"=>"yes",
           "help-string"=>"Clear registered users",
           "timeout"=>"300"}},
       "test"=>
        {"register"=>
          {"user"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"user",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "help-string"=>"User name"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag",
               "type"=>"string",
               "maxlen"=>"128",
               "help-string"=>"tag"}},
           "timeout"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"timeout",
               "optional"=>"yes",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"2592000",
               "help-string"=>"Timeout (sec)"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"register",
             "help-string"=>"register a user as XMLAPI",
             "handler"=>"test_reguser_reg"}},
         "unregister"=>
          {"user"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"user",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "help-string"=>"User name"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag",
               "type"=>"string",
               "optional"=>"yes",
               "maxlen"=>"128",
               "help-string"=>"tag"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"unregister",
             "help-string"=>"unregister a user as XMLAPI",
             "handler"=>"test_reguser_unreg"}},
         :obj=>:union,
         :attributes=>{"name"=>"test"}},
       "show"=>
        {"tag-source"=>
          {"user"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"user",
               "type"=>"string",
               "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
               "help-string"=>"User name"}},
           "tag"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"tag", "type"=>"multiple", "help-string"=>"Tag"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"tag-source",
             "help-string"=>"Show registered-user with tag and source"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"show", "handler"=>"debug_show_reguser_tagsrc"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"registered-user", "help-string"=>"registered user names"}},
     :obj=>:union,
     :attributes=>{"name"=>"object", "target"=>"useridd"}},
   "distributord"=>
    {"on"=>
      {"error"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"error",
           "handler"=>
            "/usr/local/bin/sdb sw.distributord.runtime.debug.level=error"}},
       "warn"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"warn",
           "handler"=>
            "/usr/local/bin/sdb sw.distributord.runtime.debug.level=warn"}},
       "info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>
            "/usr/local/bin/sdb sw.distributord.runtime.debug.level=info"}},
       "debug"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"debug",
           "handler"=>
            "/usr/local/bin/sdb sw.distributord.runtime.debug.level=debug"}},
       "dump"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"dump",
           "handler"=>
            "/usr/local/bin/sdb sw.distributord.runtime.debug.level=dump"}},
       :obj=>:union,
       :attributes=>{"name"=>"on"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "handler"=>
          "/usr/local/bin/sdb sw.distributord.runtime.debug.level=off"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"/usr/local/bin/sdb sw.distributord.runtime.debug.level"}},
     "reset"=>
      {"redistribution-agent"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"redistribution-agent",
           "type"=>"multiple",
           "complete-handler"=>
            "$config/panorama/redistribution-agent/entry/@name",
           "help-string"=>"reconnect redistribution agent",
           "handler"=>"reset_redistribution_agent"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"reset",
         "target"=>"distributord",
         "help-string"=>"Reset data"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"distributord",
       "target"=>"script",
       "help-string"=>"debug option for distributor daemon"}},
   "log-collector-group"=>
    {"show"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "optional"=>"yes",
           "type"=>"string",
           "handler"=>"log_collector_grp_debug_handler",
           "help-string"=>"log collector group name",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       "segment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"segment",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"255",
           "help-string"=>"segment id 0-255"}},
       "local"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"local",
           "optional"=>"yes",
           "handler"=>"log_collector_grp_debug_handler",
           "type"=>"enum",
           "help-string"=>"local ring (yes/no)"}},
       "global-redundancy-query-policy"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"global-redundancy-query-policy",
           "optional"=>"yes",
           "handler"=>
            "log_collector_grp_debug_show_gbl_rddcy_qry_plcy_handler",
           "help-string"=>"Global redundancy query policy"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"show", "help-string"=>"show log collector group ring"}},
     "set"=>
      {"global-redundancy-query-policy"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"global-redundancy-query-policy",
           "type"=>"enum",
           "handler"=>"log_collector_grp_debug_set_gbl_rddcy_qry_plcy_handler",
           "help-string"=>"Global redundancy query policy"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set",
         "help-string"=>"set log collector group debug attributes"}},
     "redist"=>
      {"status"=>
        {"runtime"=>
          {"name"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "help-string"=>"log collector group name",
               "complete-handler"=>
                "$config/devices/entry/log-collector-group/entry/@name"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"runtime", "target"=>"mgmt"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "target"=>"mgmt",
           "handler"=>"log_collector_grp_redist_status_handler",
           "help-string"=>"Get redistribution status"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"redist", "help-string"=>"Redistribution control"}},
     :obj=>:union,
     :attributes=>{"name"=>"log-collector-group", "target"=>"mgmt"}},
   "log-collector"=>
    {"redist"=>
      {"start"=>
        {"segment"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"segment",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"255",
             "help-string"=>"segment id"}},
         "from-lc"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-lc",
             "type"=>"string",
             "complete-handler"=>"lcg_collector_complete_handler",
             "help-string"=>"Serial number"}},
         "from-ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         "to-ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"start",
           "target"=>"mgmt",
           "handler"=>"redist_start_handler",
           "prune-on-sdb"=>"cfg.cms.mode=legacy",
           "help-string"=>"Start redistribution"}},
       "stop"=>
        {"segment"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"segment",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"255",
             "help-string"=>"segment id"}},
         "to-ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"stop",
           "target"=>"mgmt",
           "handler"=>"redist_stop_handler",
           "prune-on-sdb"=>"cfg.cms.mode=legacy",
           "help-string"=>"Stop redistribution"}},
       "status"=>
        {"runtime"=>
          {"serial-number"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"serial-number",
               "type"=>"string",
               "help-string"=>"log collector name",
               "complete-handler"=>
                "$config/devices/entry/log-collector/entry/@name"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"runtime", "target"=>"mgmt"}},
         "local"=>
          {"segment"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"segment",
               "optional"=>"yes",
               "type"=>"rangedint",
               "min"=>"0",
               "max"=>"255",
               "help-string"=>"segment id"}},
           "to-ld"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"to-ld",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"2",
               "regex"=>"^[0-9]+$",
               "complete-handler"=>"log_collector_max_ld_complete_handler",
               "help-string"=>"Logical disk num"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"local",
             "target"=>"mgmt",
             "prune-on-sdb"=>"cfg.cms.mode=legacy"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "target"=>"mgmt",
           "handler"=>"redist_status_handler",
           "help-string"=>"Get redistribution status"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"redist", "help-string"=>"Redistribution control"}},
     "log-collection-stats"=>
      {"show"=>
        {"incoming-logs"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"incoming-logs",
             "handler"=>"show_log_collection_stats",
             "help-string"=>"Incoming log collection stats"}},
         "log-forwarding-stats"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"log-forwarding-stats",
             "handler"=>"mgmt_srvr_log_fwd_stats",
             "help-string"=>"Log forwarding stats"}},
         "incoming-blocks"=>
          {"rawlog-blocks"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"rawlog-blocks",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>
                "Show incoming compressed block stats. Applicable to only certain platforms"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"incoming-blocks",
             "handler"=>"show_inc_blks_stats",
             "prune-on-sdb"=>"cfg.cms.mode=legacy",
             "help-string"=>"Incoming block collection stats"}},
         :obj=>:union,
         :attributes=>{"name"=>"show"}},
       "clear"=>
        {"incoming-blocks"=>
          {"rawlog-blocks"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"rawlog-blocks",
               "type"=>"string",
               "optional"=>"yes",
               "help-string"=>
                "Show incoming compressed block stats. Applicable to only certain platforms"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"incoming-blocks",
             "handler"=>"clear_inc_blks_stats",
             "prune-on-sdb"=>"cfg.cms.mode=legacy",
             "help-string"=>"Incoming block collection stats"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"clear", "prune-on-sdb"=>"cfg.cms.mode=legacy"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"log-collection-stats",
         "prune-on-sdb"=>"cfg.cms.mode=management-only",
         "target"=>"mgmt"}},
     "stats"=>
      {"runtime"=>
        {"segment"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"segment",
             "type"=>"string",
             "help-string"=>"segment id. one of all or 0-255"}},
         "ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         "active-segments"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"active-segments",
             "optional"=>"yes",
             "default"=>"yes",
             "type"=>"bool",
             "help-string"=>"Only display active segments"}},
         "interval-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"interval-type",
             "type"=>"enum",
             "default"=>"5",
             "help-string"=>"Interval for the statistics in mins"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"runtime",
           "target"=>"mgmt",
           "handler"=>"show_vld_rstat_handler",
           "help-string"=>"Show runtime statistics"}},
       "storage"=>
        {"segment"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"segment",
             "type"=>"string",
             "help-string"=>"segment id. one of all or 0-255"}},
         "ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         "active-segments"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"active-segments",
             "optional"=>"yes",
             "default"=>"yes",
             "type"=>"bool",
             "help-string"=>"Only display active segments"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"storage",
           "target"=>"mgmt",
           "handler"=>"show_vld_sstat_handler",
           "help-string"=>"Show Storage statistics"}},
       "searchengine"=>
        {"ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"searchengine",
           "target"=>"mgmt",
           "handler"=>"show_vld_es_stat_handler",
           "help-string"=>"Show Search Engine statistics"}},
       "vld"=>
        {"ingestion-stats"=>
          {"show"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"show",
               "handler"=>"debug_mgmt_vld_show_ingestion_stats",
               "help-string"=>"Show ES search engine ingestion stats "}},
           :obj=>:union,
           :attributes=>
            {"name"=>"ingestion-stats",
             "prune-on-sdb"=>"cfg.cms.mode=legacy",
             "help-string"=>"ES search engine stats "}},
         :obj=>:union,
         :attributes=>
          {"name"=>"vld",
           "prune-on-sdb"=>"cfg.cms.mode=management-only",
           "target"=>"mgmt",
           "help-string"=>"vld debug commands"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"stats",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Log collector statistics"}},
     "hints"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"hints",
         "target"=>"mgmt",
         "handler"=>"show_hints_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Show the hints stored on this Log collector"}},
     "hints-stats"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"hints-stats",
         "target"=>"mgmt",
         "handler"=>"show_hints_stats_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>
          "Show the stats on hints stored on this Log collector"}},
     "missing-blocks"=>
      {"slot"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"slot",
           "type"=>"string",
           "maxlen"=>"2",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"log_collector_max_ld_complete_handler",
           "help-string"=>"disk-array"}},
       "segment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"segment",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"255",
           "help-string"=>"segment number 0-max"}},
       "display-orphans"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"display-orphans",
           "optional"=>"yes",
           "default"=>"no",
           "type"=>"bool",
           "help-string"=>"display orphan missing blocks"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"missing-blocks",
         "target"=>"mgmt",
         "handler"=>"show_holes_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Show the holes stored on VLD"}},
     "missing-blocks-stats"=>
      {"slot"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"slot",
           "type"=>"string",
           "maxlen"=>"2",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"log_collector_max_ld_complete_handler",
           "help-string"=>"disk-array"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"missing-blocks-stats",
         "target"=>"mgmt",
         "handler"=>"show_holes_stats_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Show the stats on holes stored on VLD"}},
     "purge-stats"=>
      {"slot"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"slot",
           "type"=>"string",
           "maxlen"=>"2",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"log_collector_max_ld_complete_handler",
           "help-string"=>"disk-array"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"purge-stats",
         "target"=>"mgmt",
         "handler"=>"show_purge_stats_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Show the stats on purging on VLD"}},
     "vld"=>
      {"slot"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"slot",
           "type"=>"string",
           "maxlen"=>"2",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"log_collector_max_ld_complete_handler",
           "help-string"=>"disk-array"}},
       "debug"=>
        {"on"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"on",
             "type"=>"enum",
             "handler"=>"vld_debug_on_handler",
             "help-string"=>"Turn on VLD debug logging"}},
         "off"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"off",
             "handler"=>"vld_debug_off_handler",
             "help-string"=>"Turn off VLD debug logging"}},
         :obj=>:union,
         :attributes=>{"name"=>"debug"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"vld",
         "target"=>"mgmt",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"VLDs on log collector"}},
     "vldmgr"=>
      {"debug"=>
        {"on"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"on",
             "type"=>"enum",
             "handler"=>"vldmgr_debug_on_handler",
             "help-string"=>"Turn on VLD manager debug logging"}},
         "off"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"off",
             "handler"=>"vldmgr_debug_off_handler",
             "help-string"=>"Turn off VLD manager debug logging"}},
         :obj=>:union,
         :attributes=>{"name"=>"debug"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"vldmgr",
         "target"=>"mgmt",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"VLD manager on log collector"}},
     "inter-log-collector"=>
      {"data-compression"=>
        {"set"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"set",
             "type"=>"enum",
             "handler"=>"interlc_data_compression_debug_set_handler",
             "help-string"=>"Set data compression settings"}},
         "show"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"show",
             "handler"=>"interlc_data_compression_debug_show_handler",
             "help-string"=>"Show data compression settings"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"data-compression", "help-string"=>"data compression"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"inter-log-collector",
         "target"=>"mgmt",
         "prune-on-sdb"=>"cfg.cms.mode=legacy",
         "help-string"=>"Inter log collectors"}},
     "tracing"=>
      {"set"=>
        {"type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type", "type"=>"enum", "help-string"=>"Tracing type"}},
         "level"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"level", "type"=>"enum", "help-string"=>"Tracing level"}},
         "marker"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"marker",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"Tracing marker"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"set",
           "target"=>"mgmt",
           "handler"=>"lc_tracing_set_handler",
           "help-string"=>"Set tracing"}},
       "clear"=>
        {"type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"type", "type"=>"enum", "help-string"=>"Tracing type"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"clear",
           "target"=>"mgmt",
           "handler"=>"lc_tracing_clear_handler",
           "help-string"=>"Clear tracing"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"tracing",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>"Log collector tracing"}},
     "wb-cache"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"wb-cache",
         "target"=>"mgmt",
         "handler"=>"show_wb_cache_handler",
         "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
         "help-string"=>
          "Show the write blocks cached in memory waiting to be acknowledged by a remote Log Collector"}},
     "logd-conn-cache"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"logd-conn-cache",
         "target"=>"mgmt",
         "handler"=>"show_logd_conn_handler",
         "help-string"=>"Show connections cached in logd"}},
     "contmgr"=>
      {"status"=>
        {"ld"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ld",
             "type"=>"string",
             "maxlen"=>"2",
             "regex"=>"^[0-9]+$",
             "complete-handler"=>"log_collector_max_ld_complete_handler",
             "help-string"=>"Logical disk num"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"status",
           "target"=>"mgmt",
           "handler"=>"show_vld_contmgr_status_handler",
           "help-string"=>"show content manager status"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"contmgr", "help-string"=>"content manager related debug"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"log-collector",
       "prune-on-sdb"=>"cfg.cms.mode=management-only",
       "target"=>"mgmt"}},
   "logdb-usage"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"logdb-usage",
       "prune-on-sdb"=>"cfg.cms.mode=panorama",
       "help-string"=>"Report logdb usage",
       "target"=>"script",
       "handler"=>
        "cd /opt/pancfg/mgmt/logdb; for db in `ls -1`; do if [ -d $db ]; then echo `/usr/local/bin/cms_log_quota.sh -d $db -m`; fi; done;"}},
   "techsupport"=>
    {"duts"=>
      {"on"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"on",
           "target"=>"dagger",
           "handler"=>"dagger_duts.toggle",
           "help-string"=>"Enable filesize scanning"}},
       "off"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"off",
           "target"=>"dagger",
           "handler"=>"dagger_duts.toggle",
           "help-string"=>"Disable filesize scanning"}},
       "add-search-dir"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"add-search-dir",
           "target"=>"dagger",
           "handler"=>"dagger_duts.add_search_dir",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^/[-_./a-zA-Z0-9]*$",
           "help-string"=>"Add a directory to scan"}},
       "set-byte-threshold"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"set-byte-threshold",
           "target"=>"dagger",
           "handler"=>"dagger_duts.set_byte_threshold",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"1073741823",
           "help-string"=>"Set nontrivial filesize in bytes"}},
       "reset-config"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"reset-config",
           "target"=>"dagger",
           "handler"=>"dagger_duts.reset_config",
           "help-string"=>"Undo custom config for techsupport duts",
           "confirm"=>"Really reset filesize scanning config?"}},
       "run"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"run",
           "target"=>"dagger",
           "handler"=>"dagger_duts.run",
           "help-string"=>"Run techsupport duts right now"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"duts",
         "help-string"=>"Configure filesize scanning for techsupport"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"techsupport",
       "help-string"=>"Advanced configuration for techsupport"}},
   "sysd"=>
    {"top"=>
      {"fetch"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"fetch", "help-string"=>"query top sysd fetch users"}},
       "modify"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"modify", "help-string"=>"query top sysd modify users"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"top",
         "handler"=>"sysd_debug",
         "help-string"=>"query top sysd fetch/modify users"}},
     "summary"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"summary",
         "handler"=>"sysd_debug",
         "help-string"=>"show sysd debug information for tech-support"}},
     "process-query"=>
      {"command"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"command",
           "type"=>"string",
           "complete-handler"=>"sysd_debug.query_cmd_prc_completer",
           "help-string"=>"command to query sysd per-process information"}},
       "process"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"process",
           "type"=>"string",
           "complete-handler"=>"sysd_debug.query_arg_prc_completer",
           "help-string"=>"process to query sysd per-process information"}},
       "trarg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"trarg",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"10",
           "max"=>"100",
           "help-string"=>"optional trailing arg to pass"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"process-query",
         "handler"=>"sysd_debug",
         "help-string"=>"query sysd per-process information command"}},
     "prefix-query"=>
      {"command"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"command",
           "type"=>"string",
           "complete-handler"=>"sysd_debug.query_cmd_pfx_completer",
           "help-string"=>"command to query sysd per-prefix information"}},
       "prefix"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"prefix",
           "type"=>"string",
           "complete-handler"=>"sysd_debug.query_arg_pfx_completer",
           "help-string"=>"prefix to query sysd per-prefix information"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"prefix-query",
         "handler"=>"sysd_debug",
         "help-string"=>"query sysd per-prefix information command"}},
     :obj=>:union,
     :attributes=>{"name"=>"sysd", "target"=>"dagger"}},
   "contentd"=>
    {"status"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"status",
         "handler"=>"contmgrstatus",
         "help-string"=>"show content manager status"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"contentd",
       "target"=>"dagger",
       "help-string"=>"debug content manager"}},
   "snmpd"=>
    {"on"=>
      {"debug"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"debug",
           "target"=>"dagger",
           "handler"=>"snmpd_handler.debug_on_debug",
           "help-string"=>"Only output debug logs"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"on", "help-string"=>"Turn on snmpd debug logging"}},
     "off"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"off",
         "target"=>"dagger",
         "handler"=>"snmpd_handler.debug_off",
         "help-string"=>"Turn off debug logging"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"snmpd", "help-string"=>"debug option for snmpd daemon"}},
   "management-tunnel"=>
    {"restart"=>
      {"tunnel"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"tunnel",
           "type"=>"string",
           "handler"=>"mgmt_tunnel.restart_connection",
           "help-string"=>"Tunnel name to be restarted"}},
       "ipsec-daemon"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ipsec-daemon",
           "handler"=>"mgmt_tunnel.restart_daemon",
           "help-string"=>"Restart IPSec daemon",
           "confirm"=>
            "Note: Restarting IPSec daemon will tear down ALL IPSec connections, including HA clustering connections which have encryption. The connections will not come back up on their own. They would have to be reconfigured. Execute this command only if you are trying to resolve some issue. Do you want to continue?"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"restart",
         "target"=>"dagger",
         "timeout"=>"60",
         "help-string"=>"Management tunnel related restart options"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"management-tunnel",
       "help-string"=>"Debug commands for management tunnel"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"debug",
     "xmlapi-exposed"=>"no",
     "roles"=>"superuser,deviceadmin,panorama-admin",
     "target"=>"device",
     "handler"=>"debug_handler",
     "help-string"=>"Debug and diagnose"}},
 "set"=>
  {"audit-comment"=>
    {"xpath"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"xpath",
         "type"=>"string",
         "regex"=>".*",
         "maxlen"=>"1024",
         "help-string"=>"xpath of the node"}},
     "comment"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"comment",
         "type"=>"string",
         "regex"=>".*",
         "maxlen"=>"256",
         "help-string"=>"comment"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"audit-comment",
       "target"=>"mgmt",
       "handler"=>"set_audit_cmnt_handler",
       "help-string"=>"Set audit comment for an xpath"}},
   "other-user-changes-commit-permission"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"other-user-changes-commit-permission",
       "internal"=>"yes",
       "type"=>"bool",
       "target"=>"mgmt",
       "handler"=>"set_session_commit_other_user_changes_permission_handler"}},
   "management-server"=>
    {"disable-tls1-0"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"disable-tls1-0",
         "type"=>"enum",
         "handler"=>"set_mgmtsrvr_disable_tlsv10_handler",
         "help-string"=>
          "Enable/Disable SSL TLSv1.0 negotiation for management server. Warning: Please restart the management server process or the system for the change to take effect."}},
     "logging"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"logging",
         "type"=>"enum",
         "help-string"=>"Logging",
         "handler"=>"set_logging_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"management-server",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "target"=>"mgmt"}},
   "authentication"=>
    {"saml_signature_digest_algorithm"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"saml_signature_digest_algorithm",
         "type"=>"enum",
         "handler"=>"set_authentication_saml_sign_dig_alg"}},
     "radius-auth-type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"radius-auth-type",
         "type"=>"enum",
         "default"=>"auto",
         "handler"=>"set_authentication_radius_auth_type"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"authentication",
       "target"=>"authd",
       "help-string"=>"Set authentication run-time settings"}},
   "serial-number"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"serial-number",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "type"=>"string",
       "maxlen"=>"15",
       "regex"=>"^([A-Za-z0-9])+$",
       "target"=>"mgmt",
       "help-string"=>"Panorama serial number/software license key",
       "handler"=>"set_serialnum"}},
   "password"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"password",
       "target"=>"cli",
       "cli-handler"=>"change-password-handler"}},
   "ssh-authentication"=>
    {"public-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"public-key",
         "type"=>"string",
         "optional"=>"yes",
         "minlen"=>"1",
         "maxlen"=>"1024",
         "help-string"=>"Public RSA/DSA"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ssh-authentication",
       "taget"=>"mgmt",
       "handler"=>"set_ssh_authentication_handler",
       "help-string"=>"change ssh-authentication password"}},
   "ssh"=>
    {"service-restart"=>
      {"mgmt"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"mgmt",
           "handler"=>"ssh_keys.reset_mgmt_ssh",
           "help-string"=>"Restart the MGMT SSH service",
           "confirm"=>
            "Restarting the MGMT SSH could result in loss of any active SSH sessions including any SCP transfers. Continue?"}},
       "ha"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ha",
           "handler"=>"ssh_keys.reset_ha_ssh",
           "help-string"=>"Restart the HA SSH service",
           "confirm"=>
            "Restarting the HA SSH service will result in system rebooting. If new HA keys were regenerated, make sure that they were exported to the peer before this command is issued otherwise HA pair would not form after the reboot. Continue with reboot?"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"service-restart",
         "target"=>"dagger",
         "help-string"=>"Restart the SSH service for either HA or MGMT"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ssh",
       "timeout"=>"180",
       "help-string"=>"SSH related configurations"}},
   "user-id"=>
    {"data"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"data",
         "regex"=>".*",
         "type"=>"string",
         "maxlen"=>"10485760",
         "help-string"=>"XML content for user id XML API"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"user-id",
       "roles"=>"superuser,deviceadmin,panorama-admin,vsysadmin",
       "needvsys"=>"yes",
       "help-string"=>"User Identification XML API",
       "target"=>"useridd",
       "handler"=>"set_userid_data",
       "timeout"=>"30"}},
   "dlsrvr"=>
    {"poll-interval"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"poll-interval",
         "type"=>"rangedint",
         "min"=>"5",
         "max"=>"60",
         "handler"=>"set_dlsrvr_poll_interval",
         "help-string"=>"polling interval of download jobs in seconds"}},
     "server"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"server",
         "handler"=>
          "echo Server set to: `/usr/local/bin/sdb -n cfg.dlsrvr.server=$server`",
         "target"=>"script",
         "help-string"=>"override server address",
         "type"=>"string",
         "maxlen"=>"128",
         "regex"=>"^([a-zA-Z0-9:\\.\\_-])+([a-zA-Z0-9:\\_-])$"}},
     "distribute"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"distribute",
         "type"=>"bool",
         "target"=>"script",
         "help-string"=>"Set Deployment across HA",
         "handler"=>
          "echo Deployment across HA set to: `/usr/local/bin/sdb -n cfg.dlsrvr.distribute=$distribute`"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"dlsrvr",
       "roles"=>"superuser",
       "target"=>"mgmt",
       "help-string"=>"DLSRVR settings"}},
   "cli"=>
    {"config-output-format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"config-output-format",
         "type"=>"enum",
         "cli-handler"=>"set-cli-config-output-format"}},
     "pager"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pager",
         "optional"=>"yes",
         "type"=>"enum",
         "help-string"=>"Enable / disable pager",
         "cli-handler"=>"set-pager-handler"}},
     "confirmation-prompt"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"confirmation-prompt",
         "optional"=>"yes",
         "type"=>"enum",
         "help-string"=>
          "Enable / disable confirmation prompt for various commands",
         "cli-handler"=>"set-confirmation-prompt-handler"}},
     "scripting-mode"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"scripting-mode",
         "optional"=>"yes",
         "type"=>"enum",
         "help-string"=>"Enable / disable scripting mode",
         "cli-handler"=>"set-scripting-mode-handler"}},
     "timeout"=>
      {"idle"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"idle",
           "type"=>"multiple",
           "optional"=>"yes",
           "help-string"=>"idle timeout - default 60 minutes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"timeout",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"set_session_timeout_handler",
         "help-string"=>"Set administrative session timeout values"}},
     "hide-ip"=>
      {"value"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"value",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"yes/no"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hide-ip",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"set_session_hide_ip_handler",
         "help-string"=>"Hide last octet of IP from logs"}},
     "hide-user"=>
      {"value"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"value",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"yes/no"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hide-user",
         "optional"=>"yes",
         "target"=>"mgmt",
         "handler"=>"set_session_hide_user_handler",
         "help-string"=>"Hide user names from logs"}},
     "terminal"=>
      {"type"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"type",
           "type"=>"enum",
           "optional"=>"yes",
           "target"=>"cli",
           "cli-handler"=>"set-cli-terminal-type",
           "help-string"=>"Set terminal type"}},
       "width"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"width",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"500",
           "optional"=>"yes",
           "target"=>"cli",
           "cli-handler"=>"set-cli-terminal-width",
           "help-string"=>"Set terminal width"}},
       "height"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"height",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"500",
           "optional"=>"yes",
           "target"=>"cli",
           "cli-handler"=>"set-cli-terminal-height",
           "help-string"=>"Set terminal height"}},
       :obj=>:union,
       :attributes=>{"name"=>"terminal", "optional"=>"yes"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"cli", "target"=>"cli", "help-string"=>"Set CLI properties"}},
   "clock"=>
    {"date"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"date",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>
          "^[0-9]{4}/((0?[1-9])|(10)|(11)|(12))/((0?[1-9])|([1-2][0-9])|(30)|(31))$",
         "help-string"=>"YYYY/MM/DD"}},
     "time"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"time",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^(((0|1)[0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])$",
         "help-string"=>"hh:mm:ss"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"clock",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "help-string"=>"Show system date and time",
       "handler"=>"set_clock_handler"}},
   "system"=>
    {"setting"=>
      {"mp-memory-monitor"=>
        {"enable"=>
          {"yes"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"yes",
               "handler"=>
                "/usr/local/bin/sdb -n cfg.monitor.memory=True > /dev/null",
               "help-string"=>"Enable monitoring of management memory"}},
           "no"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no",
               "handler"=>
                "/usr/local/bin/sdb -n cfg.monitor.memory=False > /dev/null",
               "help-string"=>"Disable monitoring of management memory"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"enable",
             "help-string"=>"Enable/disable monitoring of management memory"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"mp-memory-monitor",
           "target"=>"script",
           "help-string"=>"Set monitoring of management memory"}},
       "url-database"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"url-database",
           "type"=>"enum",
           "target"=>"mgmt",
           "help-string"=>"URL database",
           "handler"=>"set_system_setting_urldb_handler",
           "optional"=>"yes"}},
       "target"=>
        {"device-group"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group",
             "type"=>"string",
             "help-string"=>"target device group for operational commands",
             "complete-handler"=>"$device/device-group/entry/@name",
             "optional"=>"yes"}},
         "template"=>
          {"name"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "help-string"=>"target template for operational commands",
               "complete-handler"=>"$device/template/entry/@name",
               "optional"=>"yes"}},
           "vsys"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"vsys",
               "type"=>"string",
               "help-string"=>"target template vsys for operational commands",
               "complete-handler"=>"complete_target_tpl_vsys_handler",
               "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"template",
             "help-string"=>"target template for operational commands"}},
         "none"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"none",
             "help-string"=>
              "unset target device group or template for operational commands"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"target",
           "help-string"=>
            "target device group or template for operational commands",
           "handler"=>"set_target_dg_tpl_handler",
           "optional"=>"yes"}},
       "correlation"=>
        {"enable"=>
          {"yes"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"yes",
               "handler"=>
                "/usr/local/bin/sdb -n cfg.corr.enabled=True > /dev/null",
               "help-string"=>"Enable data correlation"}},
           "no"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"no",
               "handler"=>
                "/usr/local/bin/sdb -n cfg.corr.enabled=False > /dev/null",
               "help-string"=>"Disable data correlation"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"enable",
             "help-string"=>"Enable/disable monitoring of management memory"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"correlation",
           "roles"=>"superuser,deviceadmin,panorama-admin",
           "target"=>"script",
           "help-string"=>"Turn on/off data correlation"}},
       "default-wildfire-server"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"default-wildfire-server",
           "type"=>"string",
           "minlen"=>"1",
           "maxlen"=>"255",
           "regex"=>"^([a-zA-Z0-9._-])+$",
           "target"=>"mgmt",
           "help-string"=>"Default Wildfire Server",
           "handler"=>"set_system_setting_defwf_handler",
           "optional"=>"yes"}},
       :obj=>:union,
       :attributes=>{"name"=>"setting", "help-string"=>"set system setting"}},
     "nfs"=>
      {"dynamic-logging-partition"=>
        {"threshold"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"threshold",
             "target"=>"exec",
             "type"=>"rangedint",
             "min"=>"3",
             "max"=>"999999",
             "handler"=>
              "/usr/local/bin/sdb cfg.panlogs.nfs.runtime['failures']=$threshold",
             "help-string"=>"Set NFS test failure threshold"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dynamic-logging-partition",
           "help-string"=>"dynamic logging partition"}},
       :obj=>:union,
       :attributes=>{"name"=>"nfs", "help-string"=>"NFS mounts"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"system",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "help-string"=>"System setting"}},
   "max-num-images"=>
    {"count"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"count",
         "type"=>"rangedint",
         "min"=>"2",
         "max"=>"64",
         "handler"=>"set_max_num_images"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"max-num-images",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "help-string"=>"Show maximum number of software or content images"}},
   "ssl-conn-on-cert"=>
    {"fail-all-conns"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"fail-all-conns",
         "type"=>"enum",
         "handler"=>"set_ssl_conn_fail_on_cert_handler",
         "help-string"=>"Fail all connections"}},
     "fail-syslog-conns"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"fail-syslog-conns",
         "type"=>"enum",
         "handler"=>"set_syslog_ssl_conn_fail_on_cert_handler",
         "help-string"=>"Fail syslog connections"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"ssl-conn-on-cert",
       "target"=>"mgmt",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>
        "Setting for failing SSL connections on non-compliant/invalid cert"}},
   "syslogng-ssl-conn-validation"=>
    {"all-conns"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"all-conns",
         "type"=>"enum",
         "handler"=>"set_syslogng_ssl_all_conn_validation_handler",
         "help-string"=>"Validation options for all connections"}},
     "explicit"=>
      {"CRL"=>
        {"enforce"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"enforce",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Enforce CRL validation for all connections. Default."}},
         "skip"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"skip",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>"Skip CRL validation for all connections"}},
         "prefer"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"prefer",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Explicitly enforce CRL validation for all connections"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"CRL",
           "help-string"=>"CRL Validation for all connections"}},
       "OCSP"=>
        {"enforce"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"enforce",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Enforce OCSP validation for all connections. Default."}},
         "skip"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"skip",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>"Skip OCSP validation for all connections"}},
         "prefer"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"prefer",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Explicitly enforce OCSP validation for all connections"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"OCSP",
           "help-string"=>"OCSP validation for all connections"}},
       "EKU"=>
        {"enforce"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"enforce",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Enforce EKU validation for all connections. Default."}},
         "skip"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"skip",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>"Skip EKU validation for all connections"}},
         "prefer"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"prefer",
             "handler"=>"set_syslogng_ssl_explicit_validation_handler",
             "help-string"=>
              "Explicitly enforce EKU validation for all connections"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"EKU",
           "help-string"=>
            "EKU validation for all connections. This parameter is used when CRL and OCSP are not set to 'skip'."}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"explicit",
         "help-string"=>
          "Explicit SSL cert parameter validation settings for all connections."}},
     :obj=>:union,
     :attributes=>
      {"name"=>"syslogng-ssl-conn-validation",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>
        "Settings for syslog SSL connection's certificate validation"}},
   "device-telemetry"=>
    {"inherit-panorama-settings"=>
      {"all-template-stacks"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"all-template-stacks",
           "optional"=>"yes",
           "handler"=>"set_device_telemetry_all_template_stacks_handler",
           "help-string"=>"Apply to all template-stacks."}},
       "template-stack"=>
        {"name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "minlen"=>"1",
             "maxlen"=>"63",
             "complete-handler"=>
              "$config/devices/entry/template-stack/entry/@name",
             "help-string"=>"template-stack name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"template-stack",
           "optional"=>"yes",
           "handler"=>"set_device_telemetry_template_stack_handler",
           "help-string"=>"Apply to a template-stack instance."}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"inherit-panorama-settings",
         "help-string"=>
          "Inherit panorama's device telemetry settings. A commit is required to save the change."}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-telemetry",
       "help-string"=>"Settings for device telemetry"}},
   "reportd"=>
    {"timeout"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"timeout",
         "type"=>"rangedint",
         "min"=>"300",
         "max"=>"18000",
         "handler"=>"reporting_debug_timeout_handler",
         "help-string"=>"Set report timeout"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"reportd", "target"=>"reportd"}},
   "policy-app-edit"=>
    {"rules"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member", "type"=>"string", "maxlen"=>"64", "regex"=>".*"}},
       :obj=>:array,
       :attributes=>{"name"=>"rules", "help-string"=>"List of Rules"}},
     "apps-to-delete"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member", "type"=>"string", "maxlen"=>"64", "regex"=>".*"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"apps-to-delete", "help-string"=>"List of Apps to delete"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Rulebase-Type"}},
     "position"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"position",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Position"}},
     "vsysName"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsysName",
         "type"=>"string",
         "maxlen"=>"512",
         "target"=>"mgmt",
         "help-string"=>"Device Group Name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"policy-app-edit",
       "hidden"=>"yes",
       "target"=>"mgmt",
       "handler"=>"set_policy_app_edit",
       "help-string"=>"Set Policy App Edit"}},
   "log-collector-group-preference-list"=>
    {"log-collector-group"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"log-collector-group",
         "type"=>"string",
         "help-string"=>"log collector group name"}},
     "collector-preference-list"=>
      {"entry"=>
        {"devices"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "maxlen"=>"64",
                 "regex"=>"^[0-9A-Z]+$",
                 "help-string"=>"device name"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>{"name"=>"devices", "optional"=>"yes"}},
         "collectors"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "maxlen"=>"64",
                 "regex"=>"^([0-9a-zA-Z:./_-])+$",
                 "help-string"=>"log collector name"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"collectors",
             "optional"=>"yes",
             "help-string"=>"list of preferred primary log collectors"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"collector-preference-list"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-collector-group-preference-list",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "internal"=>"yes",
       "handler"=>"set_log_collector_group_preference_list"}},
   "auto-tag"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "type"=>"string",
         "maxlen"=>"32",
         "help-string"=>"vsys",
         "optional"=>"yes"}},
     "user"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"user",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "help-string"=>"User name"}},
     "users"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$"}},
       :obj=>:array,
       :attributes=>{"name"=>"users", "help-string"=>"User list"}},
     "timeout"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"timeout",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"43200",
         "optional"=>"yes",
         "default"=>"0",
         "help-string"=>"timeout in minutes"}},
     "tag-dest"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "maxlen"=>"31",
             "subtype"=>"object-name",
             "help-string"=>"alphanumeric string"}},
         "registration"=>
          {"localhost"=>
            {:obj=>:sequence,
             :attributes=>{"name"=>"localhost", "help-string"=>"Local"}},
           "panorama"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"panorama", "help-string"=>"Panorama User-ID Agent"}},
           "remote"=>
            {"http-profile"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"http-profile",
                 "type"=>"string",
                 "complete-handler"=>"autotag_destination_complete_handler",
                 "help-string"=>"HTTP profile name"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"remote",
               "help-string"=>"Remote device User-ID Agent"}},
           :obj=>:union,
           :attributes=>{"name"=>"registration"}},
         "tags"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "minlen"=>"1",
               "maxlen"=>"127",
               "regex"=>"^[^]'[]*$",
               "help-string"=>"Tag name"}},
           :obj=>:array,
           :attributes=>{"name"=>"tags"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"tag-dest", "help-string"=>"Tags on each destination"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"auto-tag",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"add_autotag",
       "help-string"=>"add user/tag mapping"}},
   "customer-reference-id"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"customer-reference-id",
       "type"=>"string",
       "maxlen"=>"64",
       "target"=>"mgmt",
       "help-string"=>
        "Set Customer Reference ID obtained from the support portal",
       "handler"=>"set_cust_ref_id"}},
   "quarantine"=>
    {"data"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"data",
         "regex"=>".*",
         "type"=>"string",
         "maxlen"=>"10485760",
         "help-string"=>"XML content for quarantine XML API"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"quarantine",
       "roles"=>"superuser,deviceadmin,panorama-admin,vsysadmin",
       "needvsys"=>"yes",
       "help-string"=>"Quarantine XML API",
       "target"=>"iotd",
       "handler"=>"set_iot_data",
       "timeout"=>"30"}},
   "auth"=>
    {"strict-username-check"=>
      {"yes"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"yes",
           "handler"=>
            "/usr/local/bin/sdb -n cfg.auth.strict_check=True >/dev/null"}},
       "no"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no",
           "handler"=>
            "/usr/local/bin/sdb -n cfg.auth.strict_check=False >/dev/null"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"strict-username-check", "target"=>"script"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"auth"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"set",
     "target"=>"mgmt",
     "handler"=>"set_handler",
     "help-string"=>"Set operational parameters"}},
 "request"=>
  {"api"=>
    {"key"=>
      {"expiration"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"expiration",
           "roles"=>"superuser,deviceadmin,panorama-admin",
           "help-string"=>
            "Will force all of the API keys to expire immediately.",
           "target"=>"script",
           "handler"=>
            "/usr/local/bin/sdb -e -n \"cfg.api.expiration-ts='`date`'\""}},
       :obj=>:union,
       :attributes=>
        {"name"=>"key", "help-string"=>"All API key related operations"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"api", "help-string"=>"All API related operations"}},
   "global-protect-portal"=>
    {"ticket"=>
      {"portal"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"portal",
           "type"=>"string",
           "maxlen"=>"31",
           "complete-handler"=>
            "$config/devices/entry[@name='localhost.localdomain']/template/entry/config/devices/entry[@name='localhost.localdomain']/vsys/entry[@name='vsys1']/global-protect/global-protect-portal/entry/@name",
           "help-string"=>"name of the GlobalProtect portal"}},
       "request"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"request",
           "type"=>"string",
           "regex"=>"^[0-9A-F]{4}-[0-9A-F]{4}$",
           "help-string"=>
            "request string in format ^[0-9A-F]{4}-[0-9A-F]{4}$"}},
       "duration"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"duration",
           "help-string"=>"agent user override duration in minutes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"65535"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ticket",
         "help-string"=>"global-protect-portal agent user override ticket",
         "handler"=>"global_protect_portal_ticket_handler",
         "target"=>"mgmt",
         "prune-on"=>"fips-mode"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"global-protect-portal",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "help-string"=>"request to perform global-protect-portal functions"}},
   "report-storage-size"=>
    {"set"=>
      {"size"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"size",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"4",
           "handler"=>
            "if [ $size == 0 ] ; then /usr/local/bin/sdb cfg.report-storage-size-gb=None; else /usr/local/bin/sdb cfg.report-storage-size-gb=$size; fi;",
           "help-string"=>"size in GB, 0 reset to default"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"set report storage size"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>
          "size=`/usr/local/bin/sdb -ne cfg.report-storage-size-gb`; if [ $size ]; then ((size = size * 1073741824)); else size=`/usr/local/bin/sdb -ne cfg.report-storage-size`; if [ -z $size ]; then size=209715200; fi; fi; echo $size;",
         "help-string"=>"report storage size"}},
     :obj=>:union,
     :attributes=>{"name"=>"report-storage-size", "target"=>"script"}},
   "max-report-keys"=>
    {"set"=>
      {"limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"50",
           "handler"=>
            "if [ $limit == 0 ] ; then /usr/local/bin/sdb cfg.report.max-keys-limit=None; else /usr/local/bin/sdb cfg.report.max-keys-limit=$limit; fi;",
           "help-string"=>"unit is 1000, 0 reset to default"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"set report max keys"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>
          "max_keys=`/usr/local/bin/sdb -ne cfg.report.max-keys-limit`; if [ -z $max_keys ]; then max_keys=50; model=`/usr/local/bin/sdb -ne cfg.platform.model`; if [ $model == 'M-100' ]; then max_keys=25; else mode=`/usr/local/bin/sdb -ne cfg.cms.mode`; if [ $mode ]; then if [ $mode == 'legacy' ]; then max_keys=25; fi; fi; fi; fi; ((max_keys=max_keys*1000)); echo $max_keys;",
         "help-string"=>"report max key limit"}},
     :obj=>:union,
     :attributes=>{"name"=>"max-report-keys", "target"=>"script"}},
   "min-report-keys"=>
    {"set"=>
      {"limit"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"limit",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"15",
           "handler"=>
            "if [ $limit == 0 ] ; then /usr/local/bin/sdb cfg.report.min-keys-limit=None; else /usr/local/bin/sdb cfg.report.min-keys-limit=$limit; fi;",
           "help-string"=>"unit is 1000, 0 reset to default"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"set",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"set report min keys"}},
     "show"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>
          "min_keys=`/usr/local/bin/sdb -ne cfg.report.min-keys-limit`; if [ -z $min_keys ]; then min_keys=10; model=`/usr/local/bin/sdb -ne cfg.platform.model`; if [ $model == 'M-100' ]; then min_keys=5; else mode=`/usr/local/bin/sdb -ne cfg.cms.mode`; if [ $mode ]; then if [ $mode == 'legacy' ]; then min_keys=5; fi; fi; fi; fi; ((min_keys=min_keys*1000)); echo $min_keys;",
         "help-string"=>"report min key limit"}},
     :obj=>:union,
     :attributes=>{"name"=>"min-report-keys", "target"=>"script"}},
   "plugins"=>
    {"install"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"install",
         "type"=>"string",
         "maxlen"=>"128",
         "complete-handler"=>"get-plugin-packages-completer",
         "handler"=>"install-plugin-handler"}},
     "uninstall"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"uninstall",
         "type"=>"string",
         "maxlen"=>"128",
         "confirm"=>"Are you sure to uninstall the plugin?",
         "complete-handler"=>"get-uninstall-plugin-completer",
         "handler"=>"uninstall-plugin-handler"}},
     "upload"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"upload", "handler"=>"plugin-upload-handler"}},
     "check"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"check",
         "handler"=>"plugin-upgrade-check-handler",
         "help-string"=>"Get information from Palo Alto Networks server"}},
     "download"=>
      {"file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file",
           "type"=>"string",
           "maxlen"=>"64",
           "complete-handler"=>"plugin-upgrade-download-file-complete-handler",
           "handler"=>"plugin-upgrade-download-file-handler",
           "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
           "help-string"=>"Download plugin package by file name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"download", "help-string"=>"Download plugin packages"}},
     "reset-plugin"=>
      {"plugin-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"plugin-name",
           "type"=>"string",
           "complete-handler"=>"get-installed-plugin-completer"}},
       "only"=>
        {:obj=>:element,
         :attributes=>{"name"=>"only", "type"=>"enum", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"reset-plugin",
         "handler"=>"reset-plugin-handler",
         "help-string"=>"Reset Plugin"}},
     "reset-password"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"reset-password",
         "type"=>"string",
         "handler"=>"plugin-reset-password-handler",
         "complete-handler"=>"get-installed-plugin-completer"}},
     "delete-package"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"delete-package",
         "type"=>"string",
         "maxlen"=>"128",
         "handler"=>"delete-plugin-package-handler",
         "complete-handler"=>"get-plugin-packages-completer"}},
     "list-config-path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"list-config-path",
         "internal"=>"yes",
         "type"=>"string",
         "maxlen"=>"128",
         "handler"=>"list-plugin-config-path-handler",
         "complete-handler"=>"get-installed-plugin-completer"}},
     "debug"=>
      {"plugin-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"plugin-name",
           "type"=>"string",
           "complete-handler"=>"get-installed-plugin-completer"}},
       "level"=>
        {:obj=>:element, :attributes=>{"name"=>"level", "type"=>"enum"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"debug",
         "handler"=>"set-plugin-debug-level",
         "help-string"=>"Plugin debug settings"}},
     "dau"=>
      {"plugin-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"plugin-name",
           "type"=>"string",
           "complete-handler"=>"get-installed-plugin-completer",
           "help-string"=>"Plugin name"}},
       "unblock-device-push"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"unblock-device-push",
           "type"=>"enum",
           "handler"=>"plugin-dau-deactivate-handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dau", "help-string"=>"Enable/disable dau plugin"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"plugins",
       "roles"=>"superuser,panorama-admin",
       "help-string"=>"Request information of plugins"}},
   "session-role"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"session-role",
       "internal"=>"yes",
       "target"=>"mgmt",
       "help-string"=>"Request session role information",
       "handler"=>"get_session_role_info"}},
   "autofocus"=>
    {"meta-data"=>
      {"content"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"content",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"256"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"meta-data", "handler"=>"autofocus_metadata_handler"}},
     "data"=>
      {"content"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"content",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"1024"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"data", "handler"=>"autofocus_data_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"autofocus",
       "target"=>"mgmt",
       "internal"=>"yes",
       "help-string"=>"autofocus internal cmd"}},
   "authentication"=>
    {"unlock-admin"=>
      {"user"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"user",
           "type"=>"string",
           "help-string"=>"Username of administrator",
           "complete-handler"=>"admin_unlock_complete_handler",
           "handler"=>"admin_unlock_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"unlock-admin",
         "target"=>"authd",
         "help-string"=>"Unlock locked administrators"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"authentication",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Show authentication settings"}},
   "device-config-import"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"device serial number"}},
     "template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"^[0-9a-zA-Z._-]+$",
         "help-string"=>"template to be created"}},
     "import-rules-as-prerules"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"import-rules-as-prerules",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>
          "import rules from device to pre-rules in device group"}},
     "import-to-shared"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"import-to-shared",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"yes",
         "help-string"=>
          "import shared configuration of device objects to shared configuration of panorama"}},
     "device-group-prefix"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-group-prefix",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"prefix for names of device groups to be created"}},
     "device-group"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name", "type"=>"string", "help-string"=>"vsys id"}},
         "device-group-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"device-group-name",
             "maxlen"=>"31",
             "regex"=>"^[0-9a-zA-Z._-]+$",
             "type"=>"string",
             "help-string"=>"device group name corresponding to vsys"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"device-group", "optional"=>"yes", "internal"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"device-config-import",
       "target"=>"mgmt",
       "help-string"=>"Import device configuration to Panorama",
       "handler"=>"config_import",
       "internal"=>"yes"}},
   "clone-variable-config"=>
    {"template-stack"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template-stack",
         "type"=>"string",
         "help-string"=>"template stack",
         "complete-handler"=>
          "$$config/devices/entry/template-stack/entry/@name"}},
     "from"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from",
         "type"=>"string",
         "help-string"=>"from device serial",
         "complete-handler"=>"complete_clone_device_options_handler"}},
     "to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to",
         "type"=>"string",
         "help-string"=>"to device serial",
         "complete-handler"=>"complete_device_under_tplstack_handler"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"clone-variable-config",
       "target"=>"mgmt",
       "handler"=>"clone_device_variable_cfg_handler",
       "help-string"=>
        "Clone variable definition of a device in Template Stack"}},
   "retrieve-variable-object"=>
    {"template-stack"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template-stack",
         "type"=>"string",
         "help-string"=>"template stack",
         "complete-handler"=>
          "$$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"device serial",
         "complete-handler"=>"complete_device_under_tplstack_handler"}},
     "variable-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"variable-name",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^\\$([a-zA-Z0-9._-])+$",
         "help-string"=>"Variable Object Name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"retrieve-variable-object",
       "target"=>"mgmt",
       "handler"=>"retrieve_variable_obj_value_handler",
       "help-string"=>"Retrieve value from device for variable object"}},
   "retrieve-variable-list"=>
    {"template-stack"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template-stack",
         "type"=>"string",
         "help-string"=>"template stack",
         "complete-handler"=>
          "$$config/devices/entry/template-stack/entry/@name"}},
     "device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"device serial",
         "complete-handler"=>"complete_device_under_tplstack_handler"}},
     "variable-name"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "maxlen"=>"64",
           "regex"=>"^\\$([a-zA-Z0-9._-])+$"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"variable-name", "help-string"=>"List of Variable Object"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"retrieve-variable-list",
       "target"=>"mgmt",
       "handler"=>"retrieve_variable_obj_list_handler",
       "help-string"=>
        "Retrieve value from device for list of variable objects",
       "internal"=>"yes"}},
   "retrieve-cluster-members"=>
    {"serial"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"serial",
         "type"=>"string",
         "help-string"=>"controller serial number",
         "complete-handler"=>
          "$$config/devices/entry/wildfire-appliance/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"retrieve-cluster-members",
       "target"=>"mgmt",
       "handler"=>"wf_retrieve_cluster_members",
       "help-string"=>"Retrieve cluster members from controller",
       "internal"=>"yes"}},
   "private-cloud-import"=>
    {"cluster"=>
      {"cluster-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"cluster-name",
           "type"=>"string",
           "help-string"=>"cluster name",
           "maxlen"=>"31"}},
       "controller-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"controller-serial",
           "type"=>"string",
           "help-string"=>"controller serial number",
           "complete-handler"=>
            "$$config/devices/entry/wildfire-appliance/entry/@name"}},
       "backup-serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"backup-serial",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"controller-backup serial number",
           "complete-handler"=>
            "$$config/devices/entry/wildfire-appliance/entry/@name"}},
       "cluster-members"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "help-string"=>"member serial number",
             "complete-handler"=>
              "$$config/devices/entry/wildfire-appliance/entry/@name"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"cluster-members",
           "help-string"=>"members of this cluster",
           "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cluster",
         "target"=>"mgmt",
         "handler"=>"wf_cluster_config_import"}},
     "node"=>
      {"serial"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serial",
           "type"=>"string",
           "help-string"=>"node serial number",
           "complete-handler"=>
            "$$config/devices/entry/wildfire-appliance/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"node",
         "target"=>"mgmt",
         "handler"=>"wf_node_config_import"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"private-cloud-import",
       "target"=>"mgmt",
       "help-string"=>"Import private cloud configuration to Panorama"}},
   "move-dg"=>
    {"entry"=>
      {"name"=>
        {:obj=>:"attr-req",
         :attributes=>
          {"name"=>"name", "type"=>"string", "help-string"=>"dgname"}},
       "create-dg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"create-dg",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>"create new dg"}},
       "new-parent-dg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"new-parent-dg",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"New parent for dgname",
           "complete-handler"=>
            "$$config/devices/entry/device-group/entry/@name"}},
       "dg-config"=>
        {"devices"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "subtype"=>"object-name",
                 "maxlen"=>"64",
                 "help-string"=>"Device serial no"}},
             "vsys"=>
              {"entry"=>
                {"name"=>
                  {:obj=>:"attr-req",
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "subtype"=>"object-name",
                     "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"entry"}},
               :obj=>:array,
               :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"list of devices",
             "optional"=>"yes"}},
         "reference-templates"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "maxlen"=>"64",
               "help-string"=>"template",
               "complete-handler"=>
                "$$config/devices/entry/template/entry/@name"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"reference-templates",
             "optional"=>"yes",
             "help-string"=>"directly referred templates"}},
         "master-device"=>
          {"device"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"device",
               "type"=>"string",
               "maxlen"=>"64",
               "complete-handler"=>"$config/mgt-config/devices/entry/@name"}},
           "vsys"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"vsys", "type"=>"string", "optional"=>"yes"}},
           "sync-group"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"sync-group",
               "type"=>"bool",
               "default"=>"yes",
               "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"master-device",
             "optional"=>"yes",
             "help-string"=>
              "device from which user and user groups will be retrieved"}},
         "description"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"description",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"255",
             "help-string"=>"Description"}},
         "authorization-code"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"authorization-code",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"63",
             "help-string"=>"Authorization code"}},
         "to-sw-version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-sw-version",
             "optional"=>"yes",
             "type"=>"multiple",
             "default"=>"None",
             "help-string"=>
              "Automatically upgrade software to this version for new deployments"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dg-config",
           "internal"=>"yes",
           "optional"=>"yes",
           "help-stirng"=>"Configuration used for device-group"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"entry"}},
     :obj=>:array,
     :attributes=>
      {"name"=>"move-dg",
       "target"=>"mgmt",
       "help-string"=>"Move dg to a new hierarchy",
       "handler"=>"move_dg_handler"}},
   "resolve"=>
    {"address"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"address",
         "type"=>"string",
         "maxlen"=>"63",
         "regex"=>"^([a-zA-Z0-9:\\.\\_-])+([a-zA-Z0-9:\\_-])$",
         "help-string"=>"Address name you want to resolve"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"resolve",
       "help-string"=>"resolve address to ip address",
       "target"=>"mgmt",
       "handler"=>"resolve_address_ip"}},
   "session"=>
    {"change-domain"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"change-domain",
         "type"=>"string",
         "maxlen"=>"63",
         "help-string"=>"change user session access domain",
         "handler"=>"change_session_ado",
         "complete-handler"=>"domain_complete_handler"}},
     "show-domain"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"show-domain",
         "help-string"=>"show current user session access domain",
         "handler"=>"show_session_ado"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"session",
       "internal"=>"yes",
       "help-string"=>"dg/tpl admin session related commands"}},
   "feature"=>
    {"feature-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"feature-name",
         "type"=>"enum",
         "help-string"=>"feature name"}},
     "enable"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"enable",
         "type"=>"enum",
         "help-string"=>"enable or disable the feature"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"feature",
       "handler"=>"enable_feature",
       "help-string"=>"Enable/disable a feature"}},
   "check-xpaths"=>
    {"xpaths"=>
      {"entry"=>
        {"xpath"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"xpath",
             "type"=>"string",
             "regex"=>".*",
             "maxlen"=>"1024",
             "help-string"=>"relative xpath"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>
        {"name"=>"xpaths", "help-string"=>"list of xpaths to check"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"check-xpaths",
       "help-string"=>"Check if xpath has children",
       "handler"=>"check_empty_nodes"}},
   "export-load-config-bundle"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"device serial number"}},
     "triggercommit"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"triggercommit",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"trigger commit on device?"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"export-load-config-bundle",
       "target"=>"mgmt",
       "help-string"=>"Export and load imported configuration to device",
       "handler"=>"export_load_config_bundle"}},
   "analyze-shared-policy"=>
    {"shared-obj-precedence"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-obj-precedence",
         "type"=>"bool",
         "optional"=>"yes",
         "help-string"=>"preview if shared objects take precedence"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"analyze-shared-policy",
       "target"=>"mgmt",
       "handler"=>"analyze_shared_policy_handler",
       "help-string"=>"Show shadowed object analysis"}},
   "log-fwd-ctrl"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "help-string"=>"serial number of device"}},
     "action"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"action",
         "type"=>"enum",
         "default"=>"start",
         "help-string"=>"start or stop log forwarding"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-fwd-ctrl",
       "prune-on-sdb"=>"cfg.cms.mode=management-only",
       "target"=>"mgmt",
       "handler"=>"panorama_log_fwd_ctrl_handler",
       "help-string"=>"control log forwarding to Panorama from a device"}},
   "device-status"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"serial number of device"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"device-status",
       "target"=>"mgmt",
       "handler"=>"panorama_device_status_handler",
       "help-string"=>"get status information from device to Panorama"}},
   "password-hash"=>
    {"password"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"password",
         "type"=>"string",
         "regex"=>"^.*$",
         "help-string"=>"plain text password",
         "secret"=>"yes"}},
     "username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "type"=>"string",
         "regex"=>"^.*$",
         "optional"=>"yes",
         "help-string"=>"plain text username"}},
     "templatename"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"templatename",
         "type"=>"string",
         "regex"=>"^.*$",
         "optional"=>"yes",
         "help-string"=>"template name",
         "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
     "templatestackname"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"templatestackname",
         "type"=>"string",
         "regex"=>"^.*$",
         "optional"=>"yes",
         "help-string"=>"template stack name",
         "complete-handler"=>
          "$config/devices/entry/template-stack/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"password-hash",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Generate password hash",
       "handler"=>"generate_phash_handler"}},
   "password-change-history"=>
    {"re-encrypt"=>
      {"old-master-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"old-master-key",
           "type"=>"string",
           "help-string"=>"Old masterkey used to encrypt historical passwords",
           "secret"=>"yes"}},
       "master-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"master-key",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"masterkey to encrypt historical passwords",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"re-encrypt",
         "handler"=>"pw_history_re_encrypt_handler",
         "help-stirng"=>
          "Re-Encrypt historical passwords using current or new master key"}},
     "dump-history"=>
      {"master-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"master-key",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Master key used to encrypt passwords",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dump-history",
         "handler"=>"pw_history_dump_handler",
         "help-string"=>"Dump content of password history"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"password-change-history",
       "roles"=>"superuser,panorama-admin",
       "target"=>"authd",
       "help-string"=>"Password History"}},
   "bootstrap"=>
    {"vm-auth-key"=>
      {"generate"=>
        {"lifetime"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"lifetime",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"8760",
             "help-string"=>"Lifetime of auth-key in hours"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"generate",
           "help-string"=>"Generate random key",
           "handler"=>"generate_vm_auth_key"}},
       "revoke"=>
        {"vm-auth-key"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"vm-auth-key",
             "type"=>"string",
             "help-string"=>"Enter vm-auth-key"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"revoke",
           "help-string"=>"Revoke bootstrap vm-auth key",
           "handler"=>"revoke_vm_auth_key"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "help-string"=>"Show bootstrap vm-auth-keys with expiry time",
           "handler"=>"show_vm_auth_keys"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"vm-auth-key", "help-string"=>"Authentication key for VM"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"bootstrap",
       "roles"=>"superuser,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Bootstrap options"}},
   "master-key"=>
    {"new-master-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"new-master-key",
         "type"=>"string",
         "minlen"=>"16",
         "maxlen"=>"16",
         "help-string"=>"New master-key",
         "secret"=>"yes"}},
     "current-master-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"current-master-key",
         "regex"=>"^[^;|`&'\"$]+$",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"Current master-key",
         "secret"=>"yes"}},
     "lifetime"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"lifetime",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"438000",
         "help-string"=>"lifetime of new key in hours"}},
     "reminder"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"reminder",
         "optional"=>"yes",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"8760",
         "default"=>"168",
         "help-string"=>"when to send expiry reminder in hours"}},
     "on-hsm"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"on-hsm",
         "optional"=>"yes",
         "type"=>"bool",
         "default"=>"no",
         "help-string"=>"master key is on hsm"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"master-key",
       "roles"=>"superuser,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Change masterkey",
       "handler"=>"modify_masterkey_handler"}},
   "encryption-level"=>
    {"level"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"level",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"2",
         "help-string"=>"0 is for default encryption level"}},
     "re-encrypt"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"re-encrypt",
         "optional"=>"yes",
         "type"=>"bool",
         "default"=>"yes",
         "help-string"=>"will not do re-encryption, for 'no'"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"encryption-level",
       "roles"=>"superuser,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Change encryption level",
       "handler"=>"modify_encryption_level_handler"}},
   "hsm"=>
    {"authenticate"=>
      {"server"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"server",
           "type"=>"string",
           "minlen"=>"1",
           "maxlen"=>"31",
           "complete-handler"=>
            "$device/deviceconfig/system/hsm-settings/provider/safenet-network/hsm-server/entry/@name",
           "help-string"=>"Server name"}},
       "password"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"password",
           "password-prompt"=>"yes",
           "type"=>"string",
           "regex"=>"^.*$",
           "help-string"=>"HSM server admin password",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"authenticate",
         "roles"=>"superuser,panorama-admin",
         "optional"=>"yes",
         "target"=>"cryptod",
         "timeout"=>"30",
         "help-string"=>"Authenticate Luna SA HSM server",
         "handler"=>"hsm_authentication_server_handler"}},
     "login"=>
      {"password"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"password",
           "password-prompt"=>"yes",
           "type"=>"string",
           "regex"=>"^.*$",
           "minlen"=>"7",
           "maxlen"=>"255",
           "help-string"=>"HSM server partition password",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"login",
         "roles"=>"superuser,panorama-admin",
         "optional"=>"yes",
         "target"=>"cryptod",
         "help-string"=>"Luna SA HSM login",
         "handler"=>"hsm_login_handler"}},
     "client-version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"client-version",
         "type"=>"enum",
         "help-string"=>"HSM client version",
         "timeout"=>"30",
         "handler"=>"hsm_version_handler",
         "confirm"=>
          "Executing this command will reboot the device. Do you want to continue?"}},
     "ha"=>
      {"create-ha-group"=>
        {"password"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"password",
             "password-prompt"=>"yes",
             "regex"=>"^.*$",
             "type"=>"string",
             "minlen"=>"7",
             "maxlen"=>"255",
             "help-string"=>"HSM server partition password",
             "secret"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"create-ha-group",
           "roles"=>"superuser,panorama-admin",
           "optional"=>"yes",
           "timeout"=>"300",
           "target"=>"cryptod",
           "help-string"=>"HSM create HA group",
           "handler"=>"hsm_ha_create_group_handler"}},
       "synchronize"=>
        {"password"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"password",
             "password-prompt"=>"yes",
             "regex"=>"^.*$",
             "type"=>"string",
             "minlen"=>"7",
             "maxlen"=>"255",
             "help-string"=>"HSM server partition password",
             "secret"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"synchronize",
           "roles"=>"superuser,panorama-admin",
           "optional"=>"yes",
           "timeout"=>"60",
           "target"=>"cryptod",
           "help-string"=>
            "HSM synchronize the contents of members of the HA group",
           "handler"=>"hsm_ha_sync_handler"}},
       "replace-server"=>
        {"password"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"password",
             "password-prompt"=>"yes",
             "regex"=>"^.*$",
             "type"=>"string",
             "minlen"=>"7",
             "maxlen"=>"255",
             "help-string"=>"HSM server partition password",
             "secret"=>"yes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"replace-server",
           "roles"=>"superuser,panorama-admin",
           "optional"=>"yes",
           "timeout"=>"300",
           "target"=>"cryptod",
           "help-string"=>"Replace one HSM server in the HA group",
           "handler"=>"hsm_ha_replace_server_handler"}},
       "recover"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"recover",
           "optional"=>"yes",
           "help-string"=>
            "Allow a previously removed member to rejoin an HA group, or a new appliance to replace a member that failed and was removed.",
           "handler"=>"hsm_ha_recover_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ha",
         "roles"=>"superuser,panorama-admin",
         "optional"=>"yes",
         "target"=>"cryptod",
         "help-string"=>"Luna SA HSM HA setup"}},
     "support-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"support-info",
         "roles"=>"superuser,panorama-admin",
         "optional"=>"yes",
         "timeout"=>"30",
         "target"=>"cryptod",
         "help-string"=>"Create HSM support info. Only valid for Luna SA",
         "handler"=>"hsm_support_info_handler"}},
     "server-enroll"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"server-enroll",
         "type"=>"string",
         "optional"=>"yes",
         "minlen"=>"1",
         "maxlen"=>"31",
         "complete-handler"=>
          "$device/deviceconfig/system/hsm-settings/provider/ncipher-nshield-connect/hsm-server/entry/@name",
         "help-string"=>
          "Enter nShield Connect HSM server name to enroll server",
         "handler"=>"hsm_server_enroll_handler"}},
     "rfs-setup"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"rfs-setup",
         "optional"=>"yes",
         "help-string"=>"Set up RFS for nShield Connect",
         "handler"=>"hsm_rfs_setup_handler"}},
     "rfs-sync"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"rfs-sync",
         "optional"=>"yes",
         "help-string"=>"Get update from rfs for nShield Connect",
         "handler"=>"hsm_rfs_sync_handler"}},
     "reset"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"reset",
         "optional"=>"yes",
         "help-string"=>
          "Clean up HSM client side data: cert, key files, cache, etc.",
         "handler"=>"hsm_reset_handler"}},
     "mkey-wrapping-key-rotation"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"mkey-wrapping-key-rotation",
         "optional"=>"yes",
         "help-string"=>"Encrypt mkey with a new wrapping key on HSM",
         "handler"=>"hsm_mkey_wrapping_key_rotation"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"hsm",
       "roles"=>"superuser,panorama-admin",
       "target"=>"cryptod",
       "help-string"=>"HSM operations"}},
   "commit-lock"=>
    {"add"=>
      {"comment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"comment",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"comment"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"add",
         "help-string"=>"Prevent other users from committing",
         "handler"=>"add_commit_lock_handler"}},
     "remove"=>
      {"admin"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"admin",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>"commit_locks_admin_complete_handler",
           "help-string"=>"administrator holding the lock"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"remove",
         "help-string"=>"Release commit lock previosuly held",
         "handler"=>"remove_commit_lock_handler"}},
     :obj=>:union,
     :attributes=>{"name"=>"commit-lock", "target"=>"mgmt"}},
   "config-lock"=>
    {"add"=>
      {"comment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"comment",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"comment"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"add",
         "help-string"=>"Prevent other users from changing configuration",
         "handler"=>"add_config_lock_handler"}},
     "remove"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"remove",
         "help-string"=>"Release config lock previously held",
         "handler"=>"remove_config_lock_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"config-lock",
       "roles"=>"vsysadmin,superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt"}},
   "config-backup"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "complete-handler"=>"$config/mgt-config/devices/entry/@name",
         "help-string"=>"device name"}},
     "file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "complete-handler"=>"show_config_repo_file_complete_handler",
         "handler"=>"request_config_backup_file_handler",
         "help-string"=>"Named snapshot"}},
     "running-config"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"running-config",
         "handler"=>"request_config_backup_versions_handler",
         "help-string"=>"Versioned running config"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"config-backup",
       "help-string"=>"Back up device configuration"}},
   "fetch"=>
    {"ring"=>
      {"from"=>
        {"log-collector"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collector",
             "type"=>"string",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name",
             "handler"=>"request_ring_fetch_handler",
             "help-string"=>"Fetch operations ring from log collector"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"from"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"ring"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"fetch",
       "roles"=>"vsysadmin,superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt"}},
   "tech-support"=>
    {"dump"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"dump", "handler"=>"techsupport_dump_handler"}},
     "copy-to-remote-host"=>
      {"remote-hostname"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-hostname",
           "type"=>"string",
           "maxlen"=>"255",
           "regex"=>"^[a-zA-Z0-9_.-]+$",
           "help-string"=>"Remote hostname"}},
       "remote-storing-path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-storing-path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Remote host storing path"}},
       "username"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"username",
           "type"=>"string",
           "maxlen"=>"255",
           "regex"=>"^[a-zA-Z0-9_.-]+$",
           "help-string"=>"scp username"}},
       "password"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"password",
           "type"=>"string",
           "password-prompt"=>"yes",
           "regex"=>"^.*$",
           "maxlen"=>"255",
           "help-string"=>"scp password",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"copy-to-remote-host",
         "handler"=>"techsupport_cp_to_remote_handler",
         "help-string"=>"Copy the dumped tech-support file to remote host"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"tech-support",
       "target"=>"mgmt",
       "help-string"=>"Generate tech support dump"}},
   "quota-enforcement"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"quota-enforcement",
       "target"=>"mgmt",
       "handler"=>"quota_enforcement_handler",
       "help-string"=>
        "Manually enforce disk quota enforcement for logs and pcaps"}},
   "shutdown"=>
    {"system"=>
      {"with-swap-scrub"=>
        {"nnsa"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"nnsa",
             "help-string"=>
              "Use NNSA scrub pattern for scrubbing the swap partition"}},
         "dod"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"dod",
             "help-string"=>
              "Use DOD scrub pattern for scrubbing the swap partition"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"with-swap-scrub",
           "optional"=>"yes",
           "prune-on"=>"non-fips-mode",
           "help-string"=>"Scrub swap partition before system shuts down.",
           "confirm"=>
            "Warning: executing this command will scrub the swap partition and leave the system in a shutdown state. Power must be removed and reapplied for the system to restart. Do you want to continue?"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"system",
         "handler"=>"shutdown_system_handler",
         "help-string"=>"Shutdown the system",
         "confirm"=>
          "Warning: executing this command will leave the system in a shutdown state. Power must be removed and reapplied for the system to restart.  Do you want to continue?",
         "cli-handler"=>"request-shutdown-system-handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"shutdown",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt",
       "handler"=>"shutdown_handler",
       "help-string"=>"Shutdown the system or software modules"}},
   "device-telemetry"=>
    {"collect-now"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"collect-now",
         "target"=>"mgmt",
         "handler"=>"set_device_telemetry_collect_now_handler",
         "help-string"=>"Collect device telemetry data now"}},
     "cancel-collect-now"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"cancel-collect-now",
         "optional"=>"yes",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/sdb -n 'cfg.device-telem[collect-now-canceled]=1' > /dev/null"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-telemetry",
       "help-string"=>"Settings for device telemetry"}},
   "address-update"=>
    {"type"=>{:obj=>:element, :attributes=>{"name"=>"type", "type"=>"enum"}},
     "source"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"source",
         "type"=>"string",
         "regex"=>".*",
         "optional"=>"yes",
         "maxlen"=>"128"}},
     "container"=>
      {"entry"=>
        {"device-group"=>
          {"member"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"member",
               "type"=>"string",
               "maxlen"=>"63",
               "complete-handler"=>
                "$config/devices/entry/device-group/entry/@name"}},
           :obj=>:array,
           :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
         "tag"=>
          {"entry"=>
            {"name"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "regex"=>".*",
                 "maxlen"=>"128"}},
             "source"=>
              {:obj=>:"attr-req",
               :attributes=>
                {"name"=>"source",
                 "type"=>"string",
                 "regex"=>".*",
                 "maxlen"=>"256"}},
             "address"=>
              {"member"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"member",
                   "type"=>"string",
                   "regex"=>".*",
                   "maxlen"=>"63"}},
               :obj=>:array,
               :attributes=>
                {"name"=>"address",
                 "help-string"=>"list of addresses",
                 "optional"=>"yes"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"entry"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"tag", "help-string"=>"list of tags", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"container", "target"=>"mgmt"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"address-update",
       "xmlapi-exposed"=>"no",
       "target"=>"mgmt",
       "handler"=>"address-update-handler",
       "help-string"=>"Process a dynamic address update"}},
   "sdwan-push-file"=>
    {"from-file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from-file",
         "type"=>"string",
         "maxlen"=>"256",
         "optional"=>"yes",
         "default"=>"cluster-gen.py",
         "help-string"=>"Enter input filename"}},
     "from-dir"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from-dir",
         "type"=>"string",
         "maxlen"=>"256",
         "optional"=>"yes",
         "default"=>"/opt/pancfg/mgmt/tmp/",
         "help-string"=>"Enter input dir"}},
     "to-file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to-file",
         "type"=>"string",
         "maxlen"=>"256",
         "optional"=>"yes",
         "default"=>"cluster-gen.py",
         "help-string"=>"Enter destination filename"}},
     "to-dir"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to-dir",
         "type"=>"string",
         "maxlen"=>"256",
         "optional"=>"yes",
         "default"=>"/opt/pancfg/mgmt/tmp/",
         "help-string"=>"Enter destination dir"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"sdwan-push-file",
       "internal"=>"yes",
       "target"=>"mgmt",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "handler"=>"sdwan_script_push_handler",
       "help-string"=>"SDWAN script push request"}},
   "push-report-definitions"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"push-report-definitions",
       "target"=>"mgmt",
       "handler"=>"push_reportdefs_handler",
       "help-string"=>"Push report definitions to devices"}},
   "gather-ha-state"=>
    {:obj=>:sequence,
     :attributes=>
      {"internal"=>"yes",
       "name"=>"gather-ha-state",
       "target"=>"mgmt",
       "handler"=>"gather_ha_state_handler",
       "help-string"=>"Gather Panorama HA state from all devices"}},
   "restart"=>
    {"system"=>
      {"with-swap-scrub"=>
        {"nnsa"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"nnsa",
             "help-string"=>
              "Use NNSA scrub pattern for scrubbing the swap partition"}},
         "dod"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"dod",
             "help-string"=>
              "Use DOD scrub pattern for scrubbing the swap partition"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"with-swap-scrub",
           "optional"=>"yes",
           "prune-on"=>"non-fips-mode",
           "help-string"=>"Scrub swap partition before system reboots",
           "confirm"=>
            "Executing this command will disconnect the current session and scrub the swap partition. Do you want to continue?"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"system",
         "handler"=>"restart_system_handler",
         "help-string"=>"Reboot the system",
         "confirm"=>
          "Executing this command will disconnect the current session. Do you want to continue?",
         "cli-handler"=>"request-restart-system-handler"}},
     "software"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"software",
         "prune-on"=>"fips-mode",
         "handler"=>"restart_software_handler",
         "help-string"=>"Restart all system software",
         "confirm"=>
          "Executing this command will disconnect the current session. Do you want to continue?",
         "cli-handler"=>"quit-when-done-handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"restart",
       "target"=>"mgmt",
       "handler"=>"restart_handler",
       "help-string"=>"Restart the system or software modules"}},
   "log-migration-update-logger"=>
    {"from"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from",
         "type"=>"string",
         "help-string"=>"from log collector"}},
     "to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to", "type"=>"string", "help-string"=>"to log collector"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-migration-update-logger",
       "handler"=>"request_log_migration_update_logger",
       "help-string"=>"Create metadata for purging logs, for RMA only."}},
   "log-migration-set-start"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"log-migration-set-start",
       "handler"=>"request_log_migration_set_start",
       "help-string"=>
        "Set start for log migration, for RMA only. The next Panorama commit sets end of log migration implicitly"}},
   "log-migration-set-end"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"log-migration-set-end",
       "handler"=>"request_log_migration_set_end",
       "help-string"=>"Set end for log migration explicitly, for RMA only."}},
   "log-migration"=>
    {"from"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from",
         "type"=>"string",
         "help-string"=>"from log collector",
         "complete-handler"=>
          "$config/devices/entry/log-collector/entry/@name"}},
     "old-disk-pair"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"old-disk-pair",
         "type"=>"string",
         "regex"=>"^[A-L]",
         "help-string"=>"from log collector disk-pair A-L"}},
     "to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to",
         "type"=>"string",
         "help-string"=>"to log collector",
         "complete-handler"=>
          "$config/devices/entry/log-collector/entry/@name"}},
     "new-disk-pair"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"new-disk-pair",
         "type"=>"string",
         "regex"=>"^[A-L]",
         "help-string"=>"to log collector disk-pair A-L"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"log-migration",
       "handler"=>"request_migrate_log_collector",
       "help-string"=>"migrate log collector disks, for RMA only."}},
   "logdb"=>
    {"update-collector-group-after-replace"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"update-collector-group-after-replace",
         "help-string"=>"Update collector group after a logger is replaced",
         "handler"=>"logdb_update_cg_after_replace_handler"}},
     "downgrade"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name",
           "type"=>"string",
           "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"downgrade",
         "help-string"=>"Migrate logdb to old version.",
         "handler"=>"downgrade_logdb_handler",
         "confirm"=>
          "After starting this command, the Log Collector cannot receive any new logs and any existing logs, log queries, and reports will be unavailable until you downgrade the Panorama software. Do you want to proceed?"}},
     "downgrade-in-progress"=>
      {"collector-group"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"collector-group",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>
            "$config/devices/entry/log-collector-group/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"downgrade-in-progress",
         "help-string"=>"Downgrade in progress of logdb.",
         "handler"=>"downgrade_in_progress_logdb_handler"}},
     "cleanup"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"cleanup",
         "prune-on-sdb"=>"cfg.cms.mode=legacy",
         "help-string"=>"Cleanup logdb",
         "target"=>"script",
         "handler"=>"/usr/local/bin/clean_legacy_log.sh",
         "confirm"=>
          "Executing this command will cleanup traffic/threat logs so log migration can't be done, Do you want to proceed?"}},
     "migrate"=>
      {"vm"=>
        {"start"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"start", "help-string"=>"start to migrate logs"}},
         "stop"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"stop",
             "hidden"=>"yes",
             "help-string"=>"stopping log migration"}},
         "reset"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"reset",
             "hidden"=>"yes",
             "help-string"=>"resetting log migration"}},
         "status"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"status", "help-string"=>"status of log migration"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"vm",
           "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
           "help-string"=>"Migrate logdb to Searchengine.",
           "handler"=>"logd_logdb_migrate_vm_handler"}},
       "lc"=>
        {"serial-number"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"serial-number",
             "type"=>"string",
             "help-string"=>"log collector name",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         "start"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"start",
             "help-string"=>"Start logdb migration now.",
             "handler"=>"upgrade_migration_start_handler"}},
         "stop"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"stop",
             "help-string"=>"Pause logdb migration now.",
             "handler"=>"upgrade_migration_stop_handler"}},
         "abandon"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"abandon",
             "hidden"=>"yes",
             "help-string"=>"No Logdb Migration is required.",
             "handler"=>"upgrade_migration_abandon_handler"}},
         "status"=>
          {"verbose"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"verbose",
               "type"=>"bool",
               "optional"=>"yes",
               "default"=>"no",
               "help-string"=>"Show local debug counters"}},
           "slot"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"slot",
               "target"=>"mgmt",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"2",
               "regex"=>"^[0-9]+$",
               "complete-handler"=>"log_collector_max_ld_complete_handler",
               "help-string"=>"disk-array"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"status",
             "help-string"=>"Show Upgrade Logdb Migration State",
             "handler"=>"upgrade_migration_status_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"lc",
           "prune-on-sdb"=>"cfg.cms.mode=management-only",
           "help-string"=>"Migrate VLD to Searchengine."}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"migrate", "help-string"=>"Migrate logdb to new version."}},
     :obj=>:union,
     :attributes=>{"name"=>"logdb", "help-string"=>"logdb"}},
   "metadata-regenerate"=>
    {"slot"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"slot",
         "target"=>"mgmt",
         "type"=>"string",
         "maxlen"=>"2",
         "regex"=>"^[0-9]+$",
         "complete-handler"=>"log_collector_max_ld_complete_handler",
         "help-string"=>"disk-array",
         "handler"=>"request_metadata_regenerate"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"metadata-regenerate",
       "prune-on-sdb"=>"cfg.cms.mode=legacy,cfg.cms.mode=management-only",
       "help-string"=>"regenerate metadata for disk-array"}},
   "system"=>
    {"self-test"=>
      {"crypto"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"crypto",
           "help-string"=>"Run crypto self-tests",
           "target"=>"dagger",
           "timeout"=>"60",
           "handler"=>"fipstest_op.run_crypto"}},
       "software-integrity"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"software-integrity",
           "help-string"=>"Run software-integrity self-test",
           "target"=>"dagger",
           "timeout"=>"60",
           "handler"=>"fipstest_op.run_integrity_check"}},
       "force-software-integrity-failure"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"force-software-integrity-failure",
           "help-string"=>"Force a software integrity self-test failure",
           "target"=>"dagger",
           "timeout"=>"60",
           "handler"=>"fipstest_op.force_error_on_integrity_check",
           "confirm"=>
            "Executing this command will cause a FIPS-CC failure on the next self-test.  Are you sure you want to continue?"}},
       "force-crypto-failure"=>
        {"mp"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"mp",
             "help-string"=>"Fail test on MP",
             "type"=>"string",
             "regex"=>"^[a-zA-Z0-9][a-zA-Z0-9_-]*",
             "target"=>"dagger",
             "handler"=>"fipstest_op.force_error_on_mp",
             "complete-handler"=>"fipstest_op.force_error_complete_handler",
             "confirm"=>
              "Executing this command will cause a FIPS failure on the next self-test.  Are you sure you want to continue? (y/n)"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"force-crypto-failure",
           "help-string"=>"Force a crypto self-test failure"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"self-test",
         "help-string"=>"FIPS/CC self test commands",
         "roles"=>"superuser,deviceadmin"}},
     "self-test-job"=>
      {"crypto"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"crypto",
           "help-string"=>"Run crypto self-tests job",
           "handler"=>"system-self-test-job-crypto-handler"}},
       "software-integrity"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"software-integrity",
           "help-string"=>"Run software-integrity self-test job",
           "handler"=>"system-self-test-job-software-integrity-handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"self-test-job",
         "help-string"=>"Run FIPS/CC self test job",
         "roles"=>"superuser,deviceadmin"}},
     "clone-system-disk"=>
      {"target"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"target",
           "type"=>"string",
           "complete-handler"=>"disk_migration_handler.completer_disk",
           "handler"=>"disk_migration_handler.save_target_disk",
           "help-string"=>"Select target disk",
           "confirm"=>
            "Executing this command will copy data from system disk and delete all data on the target disk. System will reboot and start the disk cloning procedure. The command will take at least 20 minutes to complete. Progress information will be available only via the Console. Do you wish to continue?",
           "timeout"=>"300"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"clone-system-disk",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "target"=>"dagger",
         "help-string"=>"Copy and migrate system disk"}},
     "private-data-reset"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"private-data-reset",
         "help-string"=>
          "Delete private data, keep software, content installations.",
         "target"=>"script",
         "handler"=>
          "/usr/local/bin/light-reset.sh && /usr/local/bin/root_reboot Private Data Reset CMS Cmd Initiated",
         "prune-on"=>"fips-mode",
         "confirm"=>
          "Executing this command will remove all logs and configuration will revert back to factory defaults. The system will restart and then reset the data. Are you sure you want to continue? (y/n)"}},
     "software"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"system_upgrade_info_handler",
           "help-string"=>
            "Show information about available software packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"system_upgrade_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       "download"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"string",
             "complete-handler"=>
              "system_upgrade_download_version_complete_handler",
             "handler"=>"system_upgrade_download_version_handler",
             "help-string"=>"Download software packages by version"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"64",
             "complete-handler"=>
              "system_upgrade_download_file_complete_handler",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "handler"=>"system_upgrade_download_file_handler",
             "help-string"=>"Downloaded software packages by filename"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download", "help-string"=>"Download software packages"}},
       "install"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"string",
             "complete-handler"=>
              "system_upgrade_install_version_complete_handler",
             "handler"=>"system_upgrade_install_version_handler",
             "help-string"=>"Upgrade to a software package by version",
             "confirm"=>
              "Executing this command will install a new version of software. It will not take effect until system is restarted. Downgrading from PAN-OS 9.0 to an earlier release requires downgrading the logging infrastructure. After downgrade, you must migrate your log data to the previous format. For more information, please refer to Downgrade from Panorama 9.0 in https://docs.paloaltonetworks.com/downgrade-panorama. Do you want to continue?"}},
         "load-config"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"load-config",
             "type"=>"string",
             "maxlen"=>"32",
             "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
             "complete-handler"=>"downgrade_load_config_complete_handler",
             "help-string"=>"Configuration to use for booting new software"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install",
           "help-string"=>"Install a downloaded software package"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"software",
         "help-string"=>"Perform system software installation functions"}},
     "external-list"=>
      {"global-find"=>
        {"string"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"string",
             "type"=>"string",
             "maxlen"=>"256",
             "help-string"=>"Find this string"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"global-find",
           "handler"=>"system_ext_list_global_find_handler",
           "help-string"=>"Returns Predefined IP list"}},
       "show"=>
        {"type"=>
          {"predefined-ip"=>
            {"name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "subtype"=>"object-name",
                 "help-string"=>"Name of predefined ip list.",
                 "complete-handler"=>
                  "$$predefined/ip-block-list-v2/entry/@name"}},
             "anchor"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"anchor",
                 "optional"=>"yes",
                 "default"=>"1",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295",
                 "internal"=>"yes",
                 "help-string"=>"starting from"}},
             "num-records"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"num-records",
                 "optional"=>"yes",
                 "default"=>"100",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295",
                 "internal"=>"yes",
                 "help-string"=>"number of records"}},
             "find"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"find",
                 "type"=>"string",
                 "maxlen"=>"256",
                 "optional"=>"yes",
                 "help-string"=>"Search this string"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"predefined-ip", "help-string"=>"Predefined IP List"}},
           "predefined-url"=>
            {"name"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"name",
                 "type"=>"string",
                 "subtype"=>"object-name",
                 "help-string"=>"Name of predefined url list.",
                 "complete-handler"=>
                  "$$predefined/url-predefined/entry/@name"}},
             "anchor"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"anchor",
                 "optional"=>"yes",
                 "default"=>"1",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295",
                 "internal"=>"yes",
                 "help-string"=>"starting from"}},
             "num-records"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"num-records",
                 "optional"=>"yes",
                 "default"=>"100",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"4294967295",
                 "internal"=>"yes",
                 "help-string"=>"number of records"}},
             "find"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"find",
                 "type"=>"string",
                 "maxlen"=>"256",
                 "optional"=>"yes",
                 "help-string"=>"Search this string"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"predefined-url",
               "handler"=>"system_ext_url_list_show_handler",
               "help-string"=>"Predefined URL List"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"type",
             "maxlen"=>"63",
             "help-string"=>"Predefined block list file from content"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "handler"=>"system_ext_list_show_handler",
           "help-string"=>"Print Predefined IP list"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"external-list",
         "help-string"=>
          "Perform external-list sanity functions for predefined IP block lists"}},
     "system-mode"=>
      {"panorama"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"panorama",
           "prune-on-sdb"=>"cfg.cms.mode=panorama,cfg.cms.mode=legacy",
           "target"=>"mgmt",
           "handler"=>"system_mode_to_panorama_handler"}},
       "logger"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"logger",
           "prune-on-sdb"=>"cfg.cms.mode=logger,cfg.cms.mode=management-only",
           "target"=>"mgmt",
           "handler"=>"system_mode_to_logger_handler",
           "confirm"=>
            "Executing this command will change the system to logger mode, logs will be removed. This will restart the system. Are you sure you want to continue?"}},
       "management-only"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"management-only",
           "prune-on-sdb"=>"cfg.cms.mode=management-only",
           "target"=>"mgmt",
           "handler"=>"panorama_mgmt_only_mode_handler",
           "confirm"=>
            "Executing this command will change the system to management-only mode, logs will be removed. This will restart the system. Are you sure you want to continue?",
           "timeout"=>"200"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"system-mode",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Set system mode"}},
     "disk"=>
      {"add"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"add",
           "type"=>"string",
           "complete-handler"=>"panlogs_vld_mgr_handler.completer_disks_add",
           "handler"=>"panlogs_vld_mgr_handler.add",
           "help-string"=>
            "Add the physical disk to partition into virtual logging disk(s)",
           "confirm"=>
            "Executing this command will delete all data on the drive being added. Do you want to continue?",
           "timeout"=>"200"}},
       "remove"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remove",
           "type"=>"string",
           "complete-handler"=>
            "panlogs_vld_mgr_handler.completer_disks_remove",
           "handler"=>"panlogs_vld_mgr_handler.remove",
           "help-string"=>"Remove a disk being used as VLD",
           "confirm"=>
            "Executing this command will delete all data on the drive being removed. Do you want to continue? (y/n)",
           "timeout"=>"200"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"disk",
         "prune-on-sdb"=>"cfg.cms.mode=management-only",
         "help-string"=>"Perform disks managment operations",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "target"=>"dagger"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"system", "help-string"=>"Perform system-level operations"}},
   "device-quarantine-list"=>
    {"add"=>
      {"ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip",
           "type"=>"ipspec",
           "unicast-only"=>"yes",
           "optional"=>"yes",
           "help-string"=>"IPv4 address of device"}},
       "ipv6"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ipv6",
           "type"=>"ipspec",
           "unicast-only"=>"yes",
           "optional"=>"yes",
           "help-string"=>"IPv6 address of device"}},
       "hostid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hostid",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"host id"}},
       "serialno"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serialno",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"serial number"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"add",
         "handler"=>"request_quarantine_add",
         "help-string"=>"Add device to quarantine list"}},
     "delete"=>
      {"host"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"host",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"host id or serial number"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"delete",
         "handler"=>"request_quarantine_delete",
         "help-string"=>"Delete device from quarantine list"}},
     "show"=>
      {"all"=>
        {"option"=>
          {:obj=>:element,
           :attributes=>{"name"=>"option", "type"=>"enum", "optional"=>"yes"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"all", "help-string"=>"Show all devices"}},
       "hostid"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hostid",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"hostid of a device"}},
       "serialno"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"serialno",
           "type"=>"string",
           "maxlen"=>"127",
           "help-string"=>"serial number of a device"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"show",
         "handler"=>"request_quarantine_show",
         "help-string"=>"Show quarantine list"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"device-quarantine-list",
       "target"=>"iotd",
       "help-string"=>"Device quarantine list handler"}},
   "iot"=>
    {"upgrade"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"iot_upgrade_info_handler",
           "help-string"=>"Show information about available iot packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"iot_upgrade_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"upgrade", "help-string"=>"Perform iot upgrade functions"}},
     "validity-check"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validity-check",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^[0-9]+-[0-9]+$",
         "maxlen"=>"64",
         "handler"=>"iot_validity_check_handler",
         "help-string"=>
          "Request iot validity check by version (Example: 123-456)."}},
     :obj=>:union,
     :attributes=>
      {"name"=>"iot", "help-string"=>"Perform iot upgrade operations"}},
   "content"=>
    {"downgrade"=>
      {"skip-content-validity-check"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"skip-content-validity-check",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Skip content pre install validation check with the Paloalto Networks Inc. update server."}},
       "install"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"install",
           "type"=>"string",
           "help-string"=>"Install content packages",
           "complete-handler"=>"content_downgrade_install_complete_handler",
           "handler"=>"content_downgrade_install_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"downgrade",
         "help-string"=>"Perform content downgrade functions"}},
     "upgrade"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"content_upgrade_info_handler",
           "help-string"=>
            "Show information about available content packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"content_upgrade_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       "download"=>
        {"latest"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"latest",
             "optional"=>"yes",
             "handler"=>"content_upgrade_download_latest_handler",
             "help-string"=>"Most recent content package"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "hidden"=>"yes",
             "optional"=>"yes",
             "maxlen"=>"64",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "help-string"=>"content filename",
             "handler"=>"content_upgrade_download_file_handler"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download", "help-string"=>"Download content packages"}},
       "install"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"enum",
             "handler"=>"content_upgrade_install_latest_handler"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "maxlen"=>"64",
             "help-string"=>"Imported content package",
             "complete-handler"=>
              "content_upgrade_install_file_complete_handler",
             "handler"=>"content_upgrade_install_file_handler"}},
         "commit"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"commit",
             "type"=>"bool",
             "help-string"=>"Skip commit after installing content"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         "disable-new-content"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"disable-new-content",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Disable new applications"}},
         "skip-content-validity-check"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"skip-content-validity-check",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>
              "Skip content pre install validation check with the Paloalto Networks Inc. update server."}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install", "help-string"=>"Install content packages"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"upgrade",
         "help-string"=>"Perform content upgrade functions"}},
     "validity-check"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validity-check",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^[0-9]+-[0-9]+$",
         "maxlen"=>"64",
         "handler"=>"content_validity_check_handler",
         "help-string"=>
          "Request content validity check by version (Example: 123-456)."}},
     :obj=>:union,
     :attributes=>
      {"name"=>"content",
       "help-string"=>"Perform content upgrade operations"}},
   "anti-virus"=>
    {"downgrade"=>
      {"install"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"install",
           "type"=>"string",
           "maxlen"=>"64",
           "help-string"=>"Install anti-virus packages",
           "complete-handler"=>"av_downgrade_install_complete_handler",
           "handler"=>"av_downgrade_install_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"downgrade",
         "help-string"=>"Perform anti-virus downgrade functions"}},
     "upgrade"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"av_upgrade_info_handler",
           "help-string"=>
            "Show information about available anti-virus packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"av_upgrade_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       "download"=>
        {"latest"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"latest",
             "optional"=>"yes",
             "handler"=>"av_upgrade_download_latest_handler",
             "help-string"=>"Most recent av package"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "hidden"=>"yes",
             "type"=>"string",
             "optional"=>"yes",
             "maxlen"=>"64",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "help-string"=>"av filename",
             "handler"=>"av_upgrade_download_file_handler"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download", "help-string"=>"Download anti-virus packages"}},
       "install"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"enum",
             "handler"=>"av_upgrade_install_latest_handler"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"64",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "help-string"=>"Imported anti-virus package",
             "complete-handler"=>"av_upgrade_install_file_complete_handler",
             "handler"=>"av_upgrade_install_file_handler"}},
         "commit"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"commit",
             "type"=>"bool",
             "help-string"=>"Skip commit after installing anti-virus"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install", "help-string"=>"Install anti-virus packages"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"upgrade",
         "help-string"=>"Perform anti-virus upgrade functions"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"anti-virus",
       "help-string"=>"Perform anti-virus upgrade operations"}},
   "wildfire"=>
    {"downgrade"=>
      {"install"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"install",
           "type"=>"string",
           "maxlen"=>"64",
           "help-string"=>"Install wildfire packages",
           "complete-handler"=>"wildfire_downgrade_install_complete_handler",
           "handler"=>"wildfire_downgrade_install_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"downgrade",
         "help-string"=>"Perform wildfire downgrade functions"}},
     "upgrade"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"wildfire_upgrade_info_handler",
           "help-string"=>"Show information about wildfire packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"wildfire_upgrade_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       "download"=>
        {"latest"=>
          {"sync-to-peer"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"sync-to-peer",
               "type"=>"bool",
               "optional"=>"yes",
               "default"=>"no",
               "help-string"=>"Send a copy to HA peer"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"latest", "help-string"=>"Most recent wildfire package"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download wildfire packages",
           "handler"=>"wildfire_upgrade_download_latest_handler"}},
       "install"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"enum",
             "handler"=>"wildfire_upgrade_install_latest_handler"}},
         "file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"64",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "help-string"=>"Imported wildfire package",
             "complete-handler"=>
              "wildfire_upgrade_install_file_complete_handler",
             "handler"=>"wildfire_upgrade_install_file_handler"}},
         "commit"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"commit",
             "type"=>"bool",
             "help-string"=>"Skip commit after installing wildfire"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install", "help-string"=>"Install wildfire packages"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"upgrade",
         "help-string"=>"Perform wildfire upgrade functions"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"wildfire",
       "help-string"=>"Perform wildfire upgrade operations"}},
   "wf-private"=>
    {"downgrade"=>
      {"install"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"install",
           "type"=>"string",
           "maxlen"=>"64",
           "help-string"=>"Install wildfire private cloud packages",
           "complete-handler"=>
            "wildfire_private_cloud_downgrade_install_complete_handler",
           "handler"=>"wildfire_private_cloud_downgrade_install_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"downgrade",
         "help-string"=>"Perform wildfire private cloud downgrade functions"}},
     "upgrade"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"wildfire_private_cloud_upgrade_info_handler",
           "help-string"=>
            "Show information about wildfire private cloud packages"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"wildfire_private_cloud_upgrade_check_handler",
           "help-string"=>
            "Get information from Wildfire Private Cloud server"}},
       "download"=>
        {"latest"=>
          {"sync-to-peer"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"sync-to-peer",
               "type"=>"bool",
               "optional"=>"yes",
               "default"=>"no",
               "help-string"=>"Send a copy to HA peer"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"latest",
             "help-string"=>"Most recent wildfire private cloud package"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download wildfire private cloud packages",
           "handler"=>
            "wildfire_private_cloud_upgrade_download_latest_handler"}},
       "install"=>
        {"version"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"version",
             "type"=>"enum",
             "handler"=>
              "wildfire_private_cloud_upgrade_install_latest_handler"}},
         "commit"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"commit",
             "type"=>"bool",
             "help-string"=>
              "Skip commit after installing wildfire private cloud"}},
         "sync-to-peer"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"sync-to-peer",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Send a copy to HA peer"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install",
           "help-string"=>"Install wildfire private cloud packages"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"upgrade",
         "help-string"=>"Perform wildfire private cloud upgrade functions"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"wf-private",
       "help-string"=>"Perform WF-Private upgrade operations"}},
   "address-expansion"=>
    {"expand"=>
      {"object-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"object-name",
           "type"=>"string",
           "regex"=>"[ 0-9a-zA-Z._-]",
           "maxlen"=>"64",
           "help-string"=>"address/address-group name."}},
       "dg-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"dg-name",
           "type"=>"string",
           "regex"=>"[ 0-9a-zA-Z._-]",
           "optional"=>"yes",
           "maxlen"=>"64",
           "help-string"=>"device group name."}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"expand",
         "target"=>"mgmt",
         "handler"=>"addr_exp_test_handler",
         "help-string"=>"expand given object name."}},
     :obj=>:union,
     :attributes=>
      {"name"=>"address-expansion",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "help-string"=>"address/address-group expansion handler."}},
   "license"=>
    {"info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "handler"=>"license_info_handler",
         "help-string"=>"Show information about owned license(s)"}},
     "fetch"=>
      {"auth-code"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"auth-code",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>"^[0-9a-zA-Z]*$",
           "help-string"=>"Authentication code"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"fetch",
         "handler"=>"license_fetch_handler",
         "help-string"=>"Get new license(s) using an authentication code"}},
     "fetch-tokens"=>
      {"auth-code"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"auth-code",
           "type"=>"string",
           "regex"=>"^[0-9a-zA-Z]*$",
           "help-string"=>"Authentication code"}},
       "tokens"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"tokens",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"2000000",
           "help-string"=>"Number of tokens to fetch"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"fetch-tokens",
         "handler"=>"license_fetch_tokens_handler",
         "help-string"=>"Get new license(s) using an authentication code"}},
     "tokens-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"tokens-info",
         "handler"=>"license_tokens_info_handler",
         "help-string"=>"Get license info for Token based licenses"}},
     "check"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"check",
         "internal"=>"yes",
         "handler"=>"devmgmt_license_check_handler",
         "help-string"=>"Check Device Management License on Panorama"}},
     "vm-panorama-info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"vm-panorama-info",
         "internal"=>"yes",
         "handler"=>"vmpanorama_info_file_handler",
         "help-string"=>
          "Generate file with VM Panorama information for Device Management License"}},
     "install"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"install",
         "type"=>"string",
         "subtype"=>"base64",
         "multiline-prompt"=>
          "Please enter (copy and paste) your license key in one or more lines.",
         "maxlen"=>"1024",
         "help-string"=>"Install a license key",
         "handler"=>"license_install_handler"}},
     "deactivate"=>
      {"agent-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"agent-id", "type"=>"string", "help-string"=>"Agent id"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"deactivate",
         "handler"=>"license_deactivate_handler",
         "help-string"=>"Deactivate license(s)"}},
     "api-key"=>
      {"set"=>
        {"key"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"key",
             "type"=>"string",
             "secret"=>"yes",
             "maxlen"=>"64",
             "help-string"=>"API-Key"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"set",
           "target"=>"mgmt",
           "handler"=>"license_set_api_key_handler",
           "help-string"=>"Set api-key"}},
       "delete"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "target"=>"mgmt",
           "handler"=>"license_delete_api_key_handler",
           "help-string"=>"Delete api-key"}},
       "show"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"show",
           "target"=>"mgmt",
           "handler"=>"license_show_api_key_handler",
           "help-string"=>"Show api-key"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"api-key",
         "roles"=>"superuser",
         "help-string"=>"Perform api-key related operations"}},
     "cms-license-store"=>
      {"upload"=>
        {"filename"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"filename",
             "type"=>"string",
             "maxlen"=>"64",
             "help-string"=>"tar file name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_upload_handler",
           "help-string"=>"Upload local license store tar file"}},
       "download"=>
        {"filename"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"filename",
             "type"=>"string",
             "maxlen"=>"64",
             "help-string"=>"tar file name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_download_handler",
           "help-string"=>"Download local license store tar file"}},
       "add"=>
        {"auth-code"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"auth-code",
             "type"=>"string",
             "regex"=>"^[0-9a-zA-Z]*$",
             "maxlen"=>"64",
             "help-string"=>"Authorization code"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"add",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_add_handler",
           "help-string"=>"Add a given authcode to license store"}},
       "delete"=>
        {"auth-code"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"auth-code",
             "type"=>"string",
             "regex"=>"^[0-9a-zA-Z]*$",
             "maxlen"=>"64",
             "help-string"=>"Authorization code"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_delete_handler",
           "help-string"=>"Delete a given authcode from license store"}},
       "info"=>
        {"auth-code"=>
          {"value"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"value",
               "type"=>"string",
               "regex"=>"^[0-9a-zA-Z]*$",
               "maxlen"=>"64",
               "help-string"=>"Authorization code value"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"auth-code",
             "target"=>"mgmt",
             "handler"=>"cms_license_store_info_one_handler",
             "help-string"=>"Display License info for a given authcode"}},
         "all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "target"=>"mgmt",
             "handler"=>"cms_license_store_info_all_handler",
             "help-string"=>"Display all License info from license store"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"info",
           "target"=>"mgmt",
           "help-string"=>"Display license store information"}},
       "refresh"=>
        {"auth-code"=>
          {"value"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"value",
               "type"=>"string",
               "regex"=>"^[0-9a-zA-Z]*$",
               "maxlen"=>"64",
               "help-string"=>"Authorization code value"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"auth-code",
             "target"=>"mgmt",
             "handler"=>"cms_license_store_refresh_one_handler",
             "help-string"=>"Refresh a given authcode from license store"}},
         "all"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"all",
             "target"=>"mgmt",
             "handler"=>"cms_license_store_refresh_all_handler",
             "help-string"=>"Refresh all License from license store"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"refresh",
           "target"=>"mgmt",
           "help-string"=>"Refresh license store information"}},
       "fetch"=>
        {"auth-code"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"auth-code",
             "type"=>"string",
             "regex"=>"^[0-9a-zA-Z]*$",
             "maxlen"=>"64",
             "help-string"=>"Authorization code"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"fetch",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_fetch_handler",
           "help-string"=>
            "Fetch License for a given authcode from license store"}},
       "renew"=>
        {"auth-codes"=>
          {"auth-code-value"=>
            {"old"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"old",
                 "maxlen"=>"64",
                 "regex"=>"^[0-9a-zA-Z]*$",
                 "type"=>"string",
                 "help-string"=>"Old authorization code"}},
             "new"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"new",
                 "maxlen"=>"64",
                 "rregex"=>"^[0-9a-zA-Z]*$",
                 "type"=>"string",
                 "help-string"=>"New authorization code"}},
             :obj=>:sequence,
             :attributes=>{"name"=>"auth-code-value"}},
           :obj=>:array,
           :attributes=>
            {"name"=>"auth-codes", "help-string"=>"Authorization codes"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"renew",
           "target"=>"mgmt",
           "handler"=>"cms_license_store_renew_handler",
           "help-string"=>"Renew the given authcode from license store"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"cms-license-store",
         "roles"=>"superuser",
         "help-string"=>"Panorama local license store"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"license",
       "help-string"=>"Perform license related operations"}},
   "support"=>
    {"info"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"info",
         "handler"=>"support_info_handler",
         "help-string"=>
          "Show information about downloaded support information"}},
     "check"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"check",
         "handler"=>"support_check_handler",
         "help-string"=>
          "Get support information from PaloAlto Networks server"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"support", "help-string"=>"Technical support information"}},
   "certificate"=>
    {"generate"=>
      {"for-use-by"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"for-use-by",
           "optional"=>"yes",
           "type"=>"enum",
           "help-string"=>"Purpose of this certificate"}},
       "name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"128",
           "help-string"=>"IP or FQDN to appear on the certificate"}},
       "algorithm"=>
        {"RSA"=>
          {"rsa-nbits"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"rsa-nbits",
               "type"=>"string",
               "complete-handler"=>"generate_cert_nbits_complete_handler",
               "help-string"=>"Length of the key"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"RSA"}},
         "ECDSA"=>
          {"ecdsa-nbits"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"ecdsa-nbits",
               "type"=>"string",
               "complete-handler"=>
                "generate_ecdsa_cert_nbits_complete_handler",
               "help-string"=>"Length of the key"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"ECDSA"}},
         :obj=>:union,
         :attributes=>{"name"=>"algorithm"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "digest"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"digest",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>"generate_cert_digest_complete_handler",
           "help-string"=>"Digest Algorithm"}},
       "country-code"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"country-code",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"2",
           "help-string"=>"Country code"}},
       "state"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"state",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"32",
           "help-string"=>"State/province"}},
       "locality"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"locality",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"64",
           "help-string"=>"Locality"}},
       "organization"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"organization",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"64",
           "help-string"=>"Organization"}},
       "organization-unit"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "max-count"=>"4",
             "type"=>"string",
             "maxlen"=>"64"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"organization-unit",
           "optional"=>"yes",
           "help-string"=>"Department"}},
       "email"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"email",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"255",
           "help-string"=>"Email address of the contact person"}},
       "filename"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"filename",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"255",
           "help-string"=>"file name for the certificate"}},
       "ca"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ca",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"CA for the certificate"}},
       "block-private-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"block-private-key",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"Block private key"}},
       "signed-by"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"signed-by", "optional"=>"yes", "type"=>"multiple"}},
       "hostname"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "max-count"=>"4",
             "regex"=>"^([*a-zA-Z0-9./_-])+$",
             "minlen"=>"1",
             "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"hostname",
           "optional"=>"yes",
           "help-string"=>"Subject alternate name DNS type"}},
       "ip"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member", "type"=>"ipspec", "max-count"=>"4"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"ip",
           "optional"=>"yes",
           "help-string"=>"Subject alternate name IP type"}},
       "alt-email"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member", "type"=>"string", "max-count"=>"4"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"alt-email",
           "optional"=>"yes",
           "help-string"=>"Subject alternate Email type"}},
       "ocsp-responder-url"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ocsp-responder-url",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"255",
           "complete-handler"=>"$$scope/ocsp-responder/entry/@name",
           "help-string"=>"URL for OCSP responder"}},
       "days-till-expiry"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"days-till-expiry",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"7300",
           "help-string"=>"Number of days till expiry"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"generate",
         "help-string"=>"Generate certificate",
         "handler"=>"generate_certificate_handler",
         "timeout"=>"90"}},
     "generate-scep-client-cert"=>
      {"certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "maxlen"=>"31",
           "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
       "scep-profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-profile",
           "type"=>"string",
           "maxlen"=>"31",
           "needvsys"=>"yes",
           "complete-handler"=>"$$scope/scep/entry/@name",
           "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
       "scep-challenge"=>
        {"none"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"none", "help-string"=>"No challenge used for SCEP"}},
         "fixed"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"fixed",
             "type"=>"string",
             "minlen"=>"0",
             "maxlen"=>"1024",
             "regex"=>"[^']*",
             "helpstring"=>
              "Challenge to use for SCEP server on mobile clients"}},
         "dynamic"=>
          {"otp-server-url"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"otp-server-url",
               "type"=>"string",
               "prune-on"=>"fips-mode",
               "regex"=>"^(http|https)://.+$",
               "minlen"=>"0",
               "maxlen"=>"255",
               "help-string"=>"URL to get the One-Time-Password",
               "uiHint-fieldLabel"=>"Server URL"}},
           "username"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"username",
               "type"=>"string",
               "minlen"=>"0",
               "maxlen"=>"255",
               "help-string"=>
                "Username to authenticate to the SCEP server for procuring OTP"}},
           "password"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"password",
               "type"=>"string",
               "encrypt"=>"yes",
               "minlen"=>"0",
               "maxlen"=>"255",
               "help-string"=>
                "Password to authenticate to the SCEP server for procuring OTP"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"dynamic",
             "help-string"=>
              "Choose to fetch One-Time-Passwords from the SCEP server dynamically"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"scep-challenge",
           "help-string"=>
            "Challenge for SCEP server configuration on mobile clients",
           "uiHint-fieldLabel"=>"SCEP Challenge"}},
       "scep-url"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-url",
           "type"=>"string",
           "prune-on"=>"fips-mode",
           "regex"=>"^(http|https)://.+$",
           "minlen"=>"0",
           "maxlen"=>"255",
           "help-string"=>"The base URL for the SCEP server"}},
       "scep-ca-cert"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-ca-cert",
           "optional"=>"yes",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"1024",
           "help-string"=>"SCEP Server CA Certificate"}},
       "scep-client-cert"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-client-cert",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"1024",
           "optional"=>"yes",
           "help-string"=>
            "Client Certificate to use when connecting to SCEP Server over SSL"}},
       "ca-identity-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ca-identity-name",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"255",
           "help-string"=>"Name of the SCEP server CA Identity"}},
       "subject"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"subject",
           "regex"=>"(.*)CN=(.*?)(.*)",
           "type"=>"string",
           "default"=>"CN=$USERNAME",
           "minlen"=>"0",
           "maxlen"=>"1024",
           "help-string"=>"Representation of a X.500 name"}},
       "algorithm"=>
        {"rsa"=>
          {"rsa-nbits"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"rsa-nbits",
               "type"=>"string",
               "complete-handler"=>"generate-cert-nbits-complete-handler",
               "help-string"=>"Length of the key"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"rsa"}},
         :obj=>:union,
         :attributes=>{"name"=>"algorithm"}},
       "digest"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"digest",
           "type"=>"string",
           "complete-handler"=>"generate-cert-digest-complete-handler",
           "help-string"=>"Digest Algorithm for CSR"}},
       "fingerprint"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"fingerprint",
           "type"=>"string",
           "optional"=>"yes",
           "minlen"=>"0",
           "maxlen"=>"255",
           "help-string"=>"Hex String to use as a fingerprint"}},
       "certificate-attributes"=>
        {"rfc822name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"rfc822name",
             "type"=>"string",
             "optional"=>"yes",
             "minlen"=>"0",
             "maxlen"=>"255",
             "help-string"=>"rfc822Name"}},
         "dnsname"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"dnsname",
             "type"=>"string",
             "optional"=>"yes",
             "minlen"=>"0",
             "maxlen"=>"255",
             "help-string"=>"dNSName"}},
         "uniform-resource-identifier"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uniform-resource-identifier",
             "optional"=>"yes",
             "type"=>"string",
             "minlen"=>"0",
             "maxlen"=>"255",
             "help-string"=>"uniformResourceIdentifier"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"certificate-attributes",
           "optional"=>"yes",
           "help-string"=>"Certificate Attributes"}},
       "use-as-digital-signature"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"use-as-digital-signature",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"yes",
           "help-string"=>"Use as digital signature",
           "uiHint-fieldLabel"=>"Use as digital signature"}},
       "use-for-key-encipherment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"use-for-key-encipherment",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"yes",
           "help-string"=>"Use for key encipherment",
           "uiHint-fieldLabel"=>"Use for key encipherment"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"generate-scep-client-cert",
         "target"=>"sslmgr",
         "handler"=>"sslmgr_scep_gen_client_certificate",
         "help-string"=>"Generate Client Certificate using SCEP",
         "timeout"=>"90"}},
     "import-scep-ca-cert"=>
      {"certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "maxlen"=>"31",
           "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
       "scep-profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-profile",
           "type"=>"string",
           "maxlen"=>"31",
           "needvsys"=>"yes",
           "complete-handler"=>"$$scope/scep/entry/@name",
           "help-string"=>"alphanumeric string [ 0-9a-zA-Z._-]"}},
       "scep-url"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-url",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"255",
           "help-string"=>"The base URL for the SCEP server"}},
       "ca-identity-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ca-identity-name",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"255",
           "help-string"=>"Name of the SCEP server CA Identity"}},
       "scep-ca-cert"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-ca-cert",
           "optional"=>"yes",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"1024",
           "needvsys"=>"yes",
           "complete-handler"=>
            "$$scope/certificate/entry[not(csr)][ca='yes']/@name",
           "help-string"=>"SCEP Server CA Certificate"}},
       "scep-client-cert"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"scep-client-cert",
           "type"=>"string",
           "minlen"=>"0",
           "maxlen"=>"1024",
           "optional"=>"yes",
           "needvsys"=>"yes",
           "complete-handler"=>
            "$$scope/certificate/entry[not(csr)][private-key]/@name",
           "help-string"=>
            "Client Certificate to use when connecting to SCEP Server over SSL"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"import-scep-ca-cert",
         "target"=>"sslmgr",
         "handler"=>"sslmgr_scep_import_ca_certificate",
         "help-string"=>"Import SCEP CA Certificates",
         "timeout"=>"90"}},
     "renew"=>
      {"certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "days-till-expiry"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"days-till-expiry",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"7300",
           "help-string"=>"Number of days till expiry"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"renew",
         "help-string"=>"Renew certificate",
         "handler"=>"renew_certificate_handler",
         "timeout"=>"90"}},
     "revoke"=>
      {"certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "handler"=>"cert_revoke_handler",
           "help-string"=>"Certificate name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"revoke",
         "help-string"=>"Revoke certificate",
         "timeout"=>"90"}},
     "fetch"=>
      {"otp"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"otp",
           "skip-validation"=>"yes",
           "type"=>"string",
           "maxlen"=>"512",
           "help-string"=>"One time password to generate the certificate"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"fetch",
         "roles"=>"superuser",
         "help-string"=>"Fetch device certificate",
         "handler"=>"fetch_certificate_handler"}},
     "batch-otp-install"=>
      {"otp-response"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"otp-response",
           "type"=>"string",
           "regex"=>"^[a-zA-Z0-9+/=-_]*",
           "maxlen"=>"8192",
           "help-string"=>
            "Batch OTP response obtained from Customer Support Portal"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"batch-otp-install",
         "internal"=>"yes",
         "handler"=>"upload_otp_handler",
         "help-string"=>
          "Install batch OTP to get device certs for firewalls"}},
     "gen-otp-req"=>
      {"devices"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "max-length"=>"63",
             "type"=>"string",
             "target"=>"mgmt",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"devices",
           "target"=>"mgmt",
           "help-string"=>"list of devices"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"gen-otp-req",
         "target"=>"mgmt",
         "handler"=>"generate_otp_request_handler",
         "help-string"=>"Generate request to get OTPs for multiple devices"}},
     "is-blocked"=>
      {"certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "help-string"=>"Name of a certificate"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"is-blocked",
         "handler"=>"show_cert_key_block_handler",
         "help-string"=>"Check if certificate private key is blocked"}},
     "show-blocked"=>
      {"tpl"=>
        {"tpl-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"tpl-name",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"tpl name",
             "maxlen"=>"63"}},
         "vsys-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"vsys-name",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"vsys name",
             "maxlen"=>"63"}},
         "shared"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"shared", "help-string"=>"shared certificate"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tpl", "help-string"=>"template"}},
       "tpl-stack"=>
        {"tpl-stack-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"tpl-stack-name",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"tpl stack name",
             "maxlen"=>"63"}},
         "vsys-name"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"vsys-name",
             "optional"=>"yes",
             "type"=>"string",
             "help-string"=>"vsys name",
             "maxlen"=>"63"}},
         "shared"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"shared", "help-string"=>"shared certificate"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tpl-stack", "help-string"=>"template stack"}},
       "panorama"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"panorama", "help-string"=>"panorama certificates"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"show-blocked",
         "handler"=>"show_cert_list_key_block_handler",
         "help-string"=>
          "Give list of certificates in template template stack or panorama which are blocked"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"certificate",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "help-string"=>"Manage certificates"}},
   "high-availability"=>
    {"sync-to-remote"=>
      {"candidate-config"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"candidate-config",
           "handler"=>"ha_candidate_config_sync_handler",
           "help-string"=>"Sync candidate configuration to peer",
           "confirm"=>
            "Executing this command will overwrite the candidate configuration on the peer. Do you want to continue(y/n)?"}},
       "running-config"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"running-config",
           "handler"=>"ha_running_config_sync_handler",
           "help-string"=>"Sync running configuration to peer",
           "confirm"=>
            "Executing this command will overwrite the candidate configuration on the peer and trigger a commit on the peer. Do you want to continue(y/n)?"}},
       "clock"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"clock",
           "handler"=>"ha_peer_clock_sync_handler",
           "help-string"=>"Sync the local time and date to the peer"}},
       "ssh-key"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"ssh-key",
           "handler"=>"ha_ssh_key_sync_handler",
           "help-string"=>"Sync ha ssh key to peer",
           "confirm"=>
            "Executing this command will sync the local ha ssh key to peer and the peers ha ssh to the local box. Do you want to contunue(y/n)?"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"sync-to-remote",
         "help-string"=>"Perform configuration sync operations"}},
     "state"=>
      {"suspend"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"suspend",
           "handler"=>"ha_suspend_state_handler",
           "help-string"=>"Set local HA state to suspended"}},
       "functional"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"functional",
           "handler"=>"ha_functional_state_handler",
           "help-string"=>"Set local HA state to a functional state"}},
       "peer"=>
        {"suspend"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"suspend",
             "handler"=>"ha_peer_suspend_state_handler",
             "help-string"=>"Set peer HA state to suspended"}},
         "functional"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"functional",
             "handler"=>"ha_peer_functional_state_handler",
             "help-string"=>"Set peer HA state to a functional state"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"peer",
           "help-string"=>"Set the HA state of the peer device"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"state",
         "target"=>"mgmt",
         "help-string"=>"Set the HA state of the device"}},
     "convert-to-primary"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"convert-to-primary",
         "target"=>"mgmt",
         "handler"=>"convert_to_primary_handler",
         "confirm"=>
          "Executing this command will modify the filesystem ownership on NFS mounts and may interfere with operation of another server using the same NFS mount. Please make sure any external dependencies are removed before executing this command. Do you want to continue(y/n)?",
         "help-string"=>
          "Convert this device to take ownership of configured NFS mount"}},
     "session-reestablish"=>
      {"force"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"force",
           "optional"=>"yes",
           "help-string"=>
            "Force the session reestablishment if HA1 Backup is not configured"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"session-reestablish",
         "target"=>"dagger",
         "handler"=>"ha_conn_ctrl.session_reestablish",
         "help-string"=>"Perform session reestablishment",
         "confirm"=>
          "Executing this command will reestablish the HA sessions with the peer causing momentary disruptions to the HA control traffic synching ability. Do you want to continue(y/n)?"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"high-availability",
       "roles"=>"superuser,deviceadmin,panorama-admin",
       "target"=>"mgmt",
       "help-string"=>"Perform HA operations"}},
   "batch"=>
    {"address-update"=>
      {"force-sync"=>
        {"device"=>
          {:obj=>:element,
           :attributes=>
            {"optional"=>"yes",
             "name"=>"device",
             "type"=>"string",
             "maxlen"=>"63",
             "help-string"=>"device serial number",
             "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"force-sync",
           "target"=>"mgmt",
           "handler"=>"batch_address_update_request_forcesync_handler",
           "help-string"=>"Request full sync for specific device"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"address-update", "help-string"=>"Manage address update"}},
     "software"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Available software versions on panorama",
           "handler"=>"batch_software_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>
            "check available software versions from PaloAlto Networks server",
           "handler"=>"batch_software_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_download_file_complete_handler",
             "help-string"=>"software filename"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download software packages to panorama",
           "handler"=>"batch_software_download_file_handler"}},
       "upload"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_upload_file_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"List of devices to upload software onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_software_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>"List of log-collectors to upload software onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload",
           "help-string"=>"upload a downloaded software package onto devices",
           "handler"=>"batch_software_upload_file_handler"}},
       "install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_install_file_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"List of devices to install software onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_software_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>"List of log-collectors to install software onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install",
           "help-string"=>"Install a downloaded software package",
           "handler"=>"batch_software_install_file_handler",
           "confirm"=>
            "Executing this command will install a new version of system software. It will not take effect until system is restarted. Do you want to continue?"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_install_file_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of devices to upload and install software onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_software_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>
              "List of log-collectors to upload and install software onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         "reboot"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"reboot",
             "optional"=>"yes",
             "help-string"=>"reboot after install",
             "type"=>"enum"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and Install a downloaded software package",
           "handler"=>"batch_software_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install a new version of system software. It will not take effect until system is restarted. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_install_file_complete_handler",
             "handler"=>"batch_software_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given software package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_software_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given software package",
           "handler"=>"batch_software_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"software",
         "help-string"=>"Perform system software operations"}},
     "vpnclient"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available vpnclient packages on panorama",
           "handler"=>"batch_vpnclient_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>
            "Check available vpnclient packages from PaloAlto Networks server",
           "handler"=>"batch_vpnclient_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_download_file_complete_handler",
             "help-string"=>"vpnclient filename "}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download vpnclient packages to panorama",
           "handler"=>"batch_vpnclient_download_file_handler"}},
       "upload"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_upload_file_complete_handler",
             "help-string"=>"vpnclient pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_uploadedfile_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install vpnclient on",
             "type"=>"string",
             "maxlen"=>"131072"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload",
           "help-string"=>"Upload a downloaded vpnclient package onto devices",
           "handler"=>"batch_vpnclient_upload_file_handler"}},
       "activate"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_file_complete_handler",
             "help-string"=>"vpnclient pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_uploadedfile_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install vpnclient on",
             "type"=>"string",
             "maxlen"=>"131072"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"activate",
           "help-string"=>
            "activate a downloaded vpnclient package onto devices",
           "handler"=>"batch_vpnclient_install_file_handler"}},
       "upload-activate"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_file_complete_handler",
             "help-string"=>"vpnclient pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_uploadedfile_complete_handler",
             "help-string"=>"vpnclient pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install vpnclient on",
             "type"=>"string",
             "maxlen"=>"131072"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-activate",
           "help-string"=>
            "Upload and activate a downloaded vpnclient package onto devices",
           "handler"=>"batch_vpnclient_uploadinstall_file_handler"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_file_complete_handler",
             "handler"=>"batch_vpnclient_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_uploadedfile_complete_handler",
             "handler"=>
              "batch_vpnclient_install_uploadedfile_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given vpnclient package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_vpnclient_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given vpnclient package",
           "handler"=>"batch_vpnclient_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"vpnclient",
         "help-string"=>"Perform vpnclient package operations"}},
     "global-protect-client"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>
            "Check available GlobalProtect client packages on panorama",
           "handler"=>"batch_global_protect_client_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>
            "Check available GlobalProtect client packages from PaloAlto Networks server",
           "handler"=>"batch_global_protect_client_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_download_file_complete_handler",
             "help-string"=>"GlobalProtect client filename "}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download GlobalProtect client packages to panorama",
           "handler"=>"batch_global_protect_client_download_file_handler"}},
       "upload"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_upload_file_complete_handler",
             "help-string"=>"GlobalProtect client pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_uploadedfile_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install GlobalProtect client on",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_global_protect_client_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload",
           "help-string"=>
            "Upload a downloaded GlobalProtect client package onto devices",
           "handler"=>"batch_global_protect_client_upload_file_handler"}},
       "activate"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_file_complete_handler",
             "help-string"=>"GlobalProtect client pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_uploadedfile_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install GlobalProtect client on",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_global_protect_client_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"activate",
           "help-string"=>
            "activate a downloaded GlobalProtect client package onto devices",
           "handler"=>"batch_global_protect_client_install_file_handler"}},
       "upload-activate"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_file_complete_handler",
             "help-string"=>"GlobalProtect client pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_uploadedfile_complete_handler",
             "help-string"=>"GlobalProtect client pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of comma seperated devices to install GlobalProtect client on",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_global_protect_client_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-activate",
           "help-string"=>
            "Upload and activate a downloaded GlobalProtect client package onto devices",
           "handler"=>
            "batch_global_protect_client_uploadinstall_file_handler"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_file_complete_handler",
             "handler"=>"batch_global_protect_client_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_uploadedfile_complete_handler",
             "handler"=>
              "batch_global_protect_install_uploadedfile_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given GlobalProtect client package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_global_protect_client_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given GlobalProtect client package",
           "handler"=>"batch_global_protect_client_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"global-protect-client",
         "help-string"=>"Perform GlobalProtect client package operations"}},
     "content"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available content packages on panorama",
           "handler"=>"batch_content_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>"check available content versions",
           "handler"=>"batch_content_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_content_download_file_complete_handler",
             "help-string"=>"content filename"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download content packages to panorama",
           "handler"=>"batch_content_download_file_handler"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_content_install_file_complete_handler",
             "help-string"=>"content pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_content_install_uploadedfile_complete_handler",
             "help-string"=>"content pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_content_install_eligible_complete_handler",
             "help-string"=>
              "List of devices to upload and install software onto"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>
              "List of log-collectors to upload and install content onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         "disable-new-content"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"disable-new-content",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>"Disable new applications"}},
         "skip-content-validity-check"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"skip-content-validity-check",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>
              "Skip content pre install validation check with the Paloalto Networks Inc. update server."}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and Install a content package",
           "handler"=>"batch_content_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install and commit a new version of content. Do you want to continue?"}},
       "install-previous"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_content_install_eligible_complete_handler",
             "help-string"=>"List of devices to revert content version"}},
         "skip-content-validity-check"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"skip-content-validity-check",
             "type"=>"bool",
             "optional"=>"yes",
             "default"=>"no",
             "help-string"=>
              "Skip content pre install validation check with the Paloalto Networks Inc. update server."}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install-previous",
           "help-string"=>"Revert to a  previous version of a content package",
           "handler"=>"batch_content_installprevious_handler",
           "confirm"=>
            "Executing this command will revert to a previous version of content. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_content_install_file_complete_handler",
             "handler"=>"batch_content_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_content_install_uploadedfile_complete_handler",
             "handler"=>
              "batch_content_install_uploadedfile_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given content package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_content_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given content package",
           "handler"=>"batch_content_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"content", "help-string"=>"Perform content operations"}},
     "anti-virus"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available antivirus packages on panorama",
           "handler"=>"batch_antivirus_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>"check available antivirus package versions",
           "handler"=>"batch_antivirus_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_download_file_complete_handler",
             "help-string"=>"antivirus filename"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download antivirus packages to panorama",
           "handler"=>"batch_antivirus_download_file_handler"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_install_file_complete_handler",
             "help-string"=>"antivirus pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_install_uploadedfile_complete_handler",
             "help-string"=>"antivirus pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"List of devices to upload and install av onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_antivirus_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>
              "List of log-collectors to upload and install av onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and install an antivirus package",
           "handler"=>"batch_antivirus_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install and commit a new version of antivirus. Do you want to continue?"}},
       "install-previous"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_antivirus_eligible_complete_handler",
             "help-string"=>"List of devices to revert antivirus version"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install-previous",
           "help-string"=>"Revert to a  previous version of antivirus package",
           "handler"=>"batch_antivirus_installprevious_handler",
           "confirm"=>
            "Executing this command will revert to a previous version of antivirus. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_install_file_complete_handler",
             "handler"=>"batch_antivirus_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_install_uploadedfile_complete_handler",
             "handler"=>
              "batch_antivirus_install_uploadedfile_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given antivirus package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_antivirus_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given antivirus package",
           "handler"=>"batch_antivirus_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"anti-virus",
         "help-string"=>"Perform antivirus package operations"}},
     "wildfire"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available wildfire packages on panorama",
           "handler"=>"batch_wildfire_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>"check available wildfire package versions",
           "handler"=>"batch_wildfire_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_download_file_complete_handler",
             "help-string"=>"wildfire filename"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download wildfire packages to panorama",
           "handler"=>"batch_wildfire_download_file_handler"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_install_file_complete_handler",
             "help-string"=>"wildfire pkg filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_install_uploadedfile_complete_handler",
             "help-string"=>"wildfire pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of devices to upload and install wildfire onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_wildfire_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>
              "List of log-collectors to upload and install wildfire onto",
             "type"=>"string",
             "maxlen"=>"4096",
             "complete-handler"=>
              "$config/devices/entry/log-collector/entry/@name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and install an wildfire package",
           "handler"=>"batch_wildfire_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install and commit a new version of wildfire. Do you want to continue?"}},
       "install-previous"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_wildfire_eligible_complete_handler",
             "help-string"=>"List of devices to revert wildfire version"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install-previous",
           "help-string"=>"Revert to a  previous version of wildfire",
           "handler"=>"batch_wildfire_installprevious_handler",
           "confirm"=>
            "Executing this command will revert to a previous version of wildfire. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_install_file_complete_handler",
             "handler"=>"batch_wildfire_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_install_uploadedfile_complete_handler",
             "handler"=>
              "batch_wildfire_install_uploadedfile_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given wildfire package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wildfire_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given wildfire package",
           "handler"=>"batch_wildfire_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"wildfire",
         "help-string"=>"Perform wildfire package operations"}},
     "url-filtering"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available url filtering DB on panorama",
           "handler"=>"batch_url_filtering_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>"check available url filtering DB versions",
           "handler"=>"batch_url_filtering_check_handler"}},
       "download"=>
        {"latest"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"latest",
             "handler"=>"batch_url_filtering_download_latest_handler",
             "help-string"=>"Most recent url filtering DB"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download url filtering DB to panorama"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_url_filtering_install_file_complete_handler",
             "help-string"=>"url filtering DB filename"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_url_filtering_install_uploadedfile_complete_handler",
             "help-string"=>"url filtering DB filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"List of devices to upload url filtering DB onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>
              "batch_url_filtering_eligible_complete_handler"}},
         "log-collectors"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"log-collectors",
             "help-string"=>
              "List of log-collectors to upload and install url filtering DB onto",
             "type"=>"string",
             "maxlen"=>"4096"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and install an url filtering DB",
           "handler"=>"batch_url_filtering_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install and commit a new version of url filtering DB. Do you want to continue?"}},
       "eligible"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given url filtering DB",
           "handler"=>"batch_url_filtering_eligible_handler"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_url_filtering_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given url filtering DB",
           "handler"=>"batch_url_filtering_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"url-filtering",
         "help-string"=>"Perform url filtering DB operations",
         "err"=>"Not available for PAN-DB"}},
     "reboot"=>
      {"devices"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"devices",
           "help-string"=>"List of devices to reboot",
           "type"=>"string",
           "maxlen"=>"131072",
           "complete-handler"=>"batch_reboot_devices_complete_handler"}},
       "log-collectors"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"log-collectors",
           "help-string"=>"List of log-collectors to reboot",
           "type"=>"string",
           "maxlen"=>"4096",
           "complete-handler"=>
            "$config/devices/entry/log-collector/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"reboot",
         "help-string"=>"Reboot devices",
         "handler"=>"batch_reboot_devices_handler"}},
     "license"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>
            "Get license info for all manager devices on panorama",
           "handler"=>"batch_license_info_handler"}},
       "refresh"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "help-string"=>"List of comma seperated devices ",
             "maxlen"=>"65536"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"refresh",
           "help-string"=>"Refresh license check of given devices ",
           "handler"=>"batch_license_refresh_devices_handler"}},
       "activate"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "help-string"=>"list of comma seperated devices ",
             "maxlen"=>"65536"}},
         "authcodes"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"authcodes",
             "type"=>"string",
             "help-string"=>
              "List of comma seperated authcodes to associate with list of devices",
             "maxlen"=>"4096"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"activate",
           "help-string"=>"activate new license on given devices",
           "handler"=>"batch_license_activate_devices_handler"}},
       "deactivate"=>
        {"VM-Capacity"=>
          {"devices"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"devices",
               "type"=>"string",
               "target"=>"mgmt",
               "regex"=>"^([,a-zA-Z0-9:._-])+$",
               "complete-handler"=>"show_vm_devices_complete_handler",
               "help-string"=>"List of comma seperated devices ",
               "maxlen"=>"131072"}},
           "mode"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"mode",
               "type"=>"enum",
               "help-string"=>"de-activation mode"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"VM-Capacity",
             "help-string"=>
              "leads to deactivation of ALL subscription licenses on VM device"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"deactivate",
           "help-string"=>"Deactivate licenses from VM devices",
           "handler"=>"batch_deactivate_vm_handler"}},
       "eligibility-check"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"eligibility-check",
           "type"=>"enum",
           "hidden"=>"yes",
           "handler"=>"batch_license_eligibility_check_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"license", "help-string"=>"Perform license operations"}},
     "wf-content"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "handler"=>"batch_wfm_info_handler",
           "help-string"=>
            "Show information about available wildfire metadata packages on panorama"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "handler"=>"batch_wfm_check_handler",
           "help-string"=>"Get information from PaloAlto Networks server"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "help-string"=>"Wildfire metadata package name",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_wfm_download_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download wildfire metadata packages",
           "handler"=>"batch_wfm_download_handler"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"64",
             "help-string"=>"Imported wildfire metadata package",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_wfm_install_file_complete_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "help-string"=>"Wildfire metadata package",
             "complete-handler"=>
              "batch_wfm_install_uploadedfile_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of devices to upload wildfire metadata package onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_wfm_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Install wildfire metadata packages",
           "handler"=>"batch_wfm_uploadinstall_handler",
           "confirm"=>
            "Executing this command will install and commit a new version of wildfire metadata package. Do you want to continue?"}},
       "install-previous"=>
        {"devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>
              "List of devices to revert wildfire metadata package",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_wfm_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install-previous",
           "help-string"=>
            "Revert to a previous version of wildfire metadata packages",
           "handler"=>"batch_wfm_installprevious_handler",
           "confirm"=>
            "Executing this command will revert to a previous version of wildfire metadata package. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_wfm_install_file_complete_handler",
             "handler"=>"batch_wfm_eligible_handler"}},
         "uploaded-file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"uploaded-file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_wfm_install_uploadedfile_complete_handler",
             "handler"=>"batch_wfm_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given wildfire metadata packages"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_wfm_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given wildfire metadata package",
           "handler"=>"batch_wfm_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"wf-content",
         "help-string"=>"Perform wf-content package operations"}},
     "plugin"=>
      {"info"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"info",
           "help-string"=>"Check available plugin packages on panorama",
           "handler"=>"batch_plugin_info_handler"}},
       "check"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"check",
           "help-string"=>"check available plugin versions",
           "handler"=>"batch_plugin_check_handler"}},
       "download"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_plugin_download_file_complete_handler",
             "help-string"=>"plugin filename"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"download",
           "help-string"=>"Download plugin packages to panorama",
           "handler"=>"batch_plugin_download_file_handler"}},
       "upload"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_plugin_upload_file_complete_handler"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "help-string"=>"List of devices to upload plugin onto",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_plugin_eligible_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload",
           "help-string"=>"upload a downloaded plugin package onto devices",
           "handler"=>"batch_plugin_upload_file_handler"}},
       "install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_plugin_install_file_complete_handler",
             "help-string"=>"plugin pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_plugin_eligible_complete_handler",
             "help-string"=>
              "List of devices to upload and install plugin onto"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"install",
           "help-string"=>"Install a plugin package",
           "handler"=>"batch_plugin_install_file_handler",
           "confirm"=>
            "Executing this command will install plugin of this version to eligible platforms. Do you want to continue?"}},
       "upload-install"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_plugin_install_file_complete_handler",
             "help-string"=>"plugin pkg filename"}},
         "devices"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"devices",
             "type"=>"string",
             "maxlen"=>"131072",
             "complete-handler"=>"batch_plugin_eligible_complete_handler",
             "help-string"=>
              "List of devices to upload and install plugin onto"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"upload-install",
           "help-string"=>"Upload and install a downloaded plugin package",
           "handler"=>"batch_plugin_uploadinstall_file_handler",
           "confirm"=>
            "Executing this command will install plugin of this version to eligible platforms. Do you want to continue?"}},
       "eligible"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>"batch_plugin_install_file_complete_handler",
             "handler"=>"batch_plugin_eligible_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"eligible",
           "help-string"=>
            "Get list of devices eligible for a given plugin package"}},
       "delete"=>
        {"file"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"file",
             "type"=>"string",
             "maxlen"=>"256",
             "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
             "complete-handler"=>
              "batch_plugin_install_file_complete_handler"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"delete",
           "help-string"=>"Delete a given plugin package",
           "handler"=>"batch_plugin_delete_file_handler"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"plugin",
         "help-string"=>"Perform plugin deployment operations"}},
     "deploy-master-key"=>
      {"new-master-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"new-master-key",
           "type"=>"string",
           "minlen"=>"16",
           "maxlen"=>"16",
           "help-string"=>"New master-key",
           "secret"=>"yes"}},
       "current-master-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"current-master-key",
           "regex"=>"^[^;|`&'\"$]+$",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Current master-key",
           "secret"=>"yes"}},
       "lifetime"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"lifetime",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"438000",
           "help-string"=>"lifetime of new key in hours"}},
       "reminder"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"reminder",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"8760",
           "default"=>"168",
           "help-string"=>"when to send expiry reminder in hours"}},
       "on-hsm"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"on-hsm",
           "optional"=>"yes",
           "type"=>"bool",
           "default"=>"no",
           "help-string"=>"master key is on hsm"}},
       "type"=>
        {"wildfire-appliances"=>
          {"list"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "max-count"=>"500",
                 "type"=>"string",
                 "maxlen"=>"63",
                 "help-string"=>"serial number"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"list",
               "help-string"=>
                "list of wildfire appliances to deploy masterkey on"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"wildfire-appliances",
             "help-string"=>"wildfire appliances"}},
         "log-collectors"=>
          {"list"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "max-count"=>"500",
                 "type"=>"string",
                 "maxlen"=>"63",
                 "help-string"=>"serial number"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"list",
               "help-string"=>
                "list of log collectors to deploy masterkey on"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"log-collectors", "help-string"=>"log collectors"}},
         "devices"=>
          {"list"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "max-count"=>"500",
                 "type"=>"string",
                 "maxlen"=>"63",
                 "help-string"=>"serial number"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"list",
               "help-string"=>
                "list of firewall devices to deploy masterkey on"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"devices", "help-string"=>"firewall devices"}},
         :obj=>:union,
         :attributes=>{"name"=>"type", "help-string"=>"type to deploy on"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"deploy-master-key",
         "roles"=>"superuser,panorama-admin",
         "target"=>"mgmt",
         "help-string"=>"Deploy masterkey from Panorama",
         "handler"=>"batch_deploy_masterkey_handler"}},
     :obj=>:union,
     :attributes=>{"name"=>"batch", "help-string"=>"Manage devices"}},
   "get-ha-cluster-config-for-device"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"get-ha-cluster-config-for-device",
       "target"=>"mgmt",
       "help-string"=>"Get HA cluster configuration for a device",
       "handler"=>"get_ha_cluster_config_for_device"}},
   "add-device-to-ha-cluster"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"add-device-to-ha-cluster",
       "target"=>"mgmt",
       "help-string"=>"Add device as cluster member",
       "handler"=>"add_device_to_ha_cluster"}},
   "refresh-ha-cluster-config"=>
    {"devices"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"devices",
         "type"=>"string",
         "maxlen"=>"131072",
         "help-string"=>"comma separated device serial numbers"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"refresh-ha-cluster-config",
       "target"=>"mgmt",
       "help-string"=>"Refresh cluster configuration",
       "handler"=>"refresh_ha_cluster_config"}},
   "get-hostname-from-devid"=>
    {"devices"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"devices",
         "type"=>"string",
         "maxlen"=>"131072",
         "help-string"=>"list of comma separated device serial numbers"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"get-hostname-from-devid",
       "target"=>"mgmt",
       "internal"=>"yes",
       "help-string"=>"Get Hostname from device serial numbers",
       "handler"=>"get_hostname_from_devids"}},
   "check-site-license-status"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"check-site-license-status",
       "target"=>"mgmt",
       "help-string"=>"Check site license status with Update Server",
       "handler"=>"check_site_license_handler"}},
   "determine-new-applications"=>
    {"version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"version",
         "type"=>"string",
         "help-string"=>"content version number"}},
     "rulebase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"rulebase",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"rule type"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"determine-new-applications",
       "target"=>"mgmt",
       "help-string"=>"Determine new applications in content",
       "handler"=>"determine_new_apps"}},
   "determine-modified-applications"=>
    {"version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"version",
         "type"=>"string",
         "help-string"=>"content version number"}},
     "rulebase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"rulebase",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"rule type"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"determine-modified-applications",
       "target"=>"mgmt",
       "internal"=>"yes",
       "help-string"=>"Determine modified applications in content",
       "handler"=>"determine_modified_apps"}},
   "list-content-downloads"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"list-content-downloads",
       "target"=>"mgmt",
       "prune-on-sdb"=>"cfg.general.feature.disabled[content_upd]",
       "help-string"=>"List content downloads",
       "handler"=>"list_content_downloads"}},
   "get-disabled-applications"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"get-disabled-applications",
       "target"=>"mgmt",
       "help-string"=>"List disabled applications in content",
       "handler"=>"list_disabled_apps"}},
   "get-application-status"=>
    {"application"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"application",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"[0-9a-zA-Z._-]"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"get-application-status",
       "target"=>"mgmt",
       "help-string"=>"Get application status",
       "handler"=>"get_app_status"}},
   "set-application-status"=>
    {"device-group"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"device group name"}},
         "status"=>
          {nil=>
            {:obj=>:enum,
             :attributes=>
              {"value"=>"disabled", "help-string"=>"Disable application"}},
           :obj=>:"attr-req",
           :attributes=>
            {"name"=>"status",
             "type"=>"enum",
             "help-string"=>"application status"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
     "enable-dependent-apps"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"enable-dependent-apps",
         "optional"=>"yes",
         "type"=>"bool",
         "default"=>"no",
         "help-string"=>"enable dependent applications"}},
     "application"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"application",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"[0-9a-zA-Z._-]"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"set-application-status",
       "target"=>"mgmt",
       "help-string"=>"Set application status",
       "handler"=>"set_app_status",
       "internal"=>"yes"}},
   "set-application-status-recursive"=>
    {"enable-dependent-apps"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"enable-dependent-apps",
         "optional"=>"yes",
         "type"=>"bool",
         "default"=>"no",
         "help-string"=>"enable dependent applications"}},
     "application"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"application",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"[0-9a-zA-Z._-]"}},
     "status"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"status",
         "type"=>"enum",
         "help-string"=>"Application status"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"set-application-status-recursive",
       "target"=>"mgmt",
       "help-string"=>"Set application status",
       "handler"=>"set_app_status_recursive"}},
   "clear-commit-tasks"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"clear-commit-tasks",
       "target"=>"mgmt",
       "handler"=>"flush_commit_tasks_handler",
       "help-string"=>"Clear all commit tasks"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"request",
     "target"=>"mgmt",
     "handler"=>"request_handler",
     "help-string"=>"Make system-level requests"}},
 "check"=>
  {"pending-changes"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"pending-changes",
       "handler"=>"check_pending_changes_handler",
       "help-string"=>"Check for uncommitted changes"}},
   "full-commit-required"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"full-commit-required",
       "handler"=>"check_full_commit_required_handler",
       "help-string"=>"Check if full commit is required"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"check",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "help-string"=>"Check configuration status"}},
 "save"=>
  {"config"=>
    {"to"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"to",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"save_config_complete_handler",
         "help-string"=>"Filename"}},
     "partial"=>
      {"admin"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
       "shared-object"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
       "device-and-network"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
       "shared-object-write"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object-write",
           "internal"=>"yes",
           "type"=>"enum",
           "optional"=>"yes"}},
       "no-device-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "no-template"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "no-template-stack"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "no-log-collector"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
       "log-collector"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
       "no-log-collector-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
       "log-collector-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
       "no-wildfire-appliance"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
       "wildfire-appliance"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
       "no-wildfire-appliance-cluster"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
       "wildfire-appliance-cluster"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"partial", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"save_config_handler"}},
   "device-state"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"device-state",
       "handler"=>"save_device_state_handler",
       "help-string"=>"Save files needed to restore device"}},
   "import-bundle"=>
    {"device"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"import-bundle",
       "handler"=>"save_config_import_bundle",
       "help-string"=>
        "Save files needed to load imported configuration to device"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"save",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "help-string"=>"Save configuration to disk"}},
 "export"=>
  {"config"=>
    {"partial"=>
      {"template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"partial", "handler"=>"ado_export_config_handler"}},
     "to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target directory"}},
     "version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"version",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target directory"}},
     "from"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target directory"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"ado_export_config_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"export",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "help-string"=>"Export partial config to disk",
     "internal"=>"yes"}},
 "revert"=>
  {"config"=>
    {"skip-validate"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"skip-validate",
         "type"=>"enum",
         "default"=>"no",
         "help-string"=>
          "Skip validation for reverted config to improve revert performance"}},
     "partial"=>
      {"admin"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
       "shared-object"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
       "device-and-network"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
       "shared-object-write"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object-write",
           "internal"=>"yes",
           "type"=>"enum",
           "optional"=>"yes"}},
       "no-device-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "no-template"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "no-template-stack"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "no-log-collector"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
       "log-collector"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
       "no-log-collector-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
       "log-collector-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
       "no-wildfire-appliance"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
       "wildfire-appliance"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
       "no-wildfire-appliance-cluster"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
       "wildfire-appliance-cluster"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"partial", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"revert_config_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"revert",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "help-string"=>"Revert changes from configuration"}},
 "load"=>
  {"config"=>
    {"key"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"key",
         "type"=>"multiple",
         "secret"=>"yes"}},
     "regenerate-rule-uuid-all"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"regenerate-rule-uuid-all",
         "roles"=>"superuser",
         "type"=>"enum",
         "default"=>"no",
         "help-string"=>
          "Regenerate UUID for all rule, ignoring existing UUID from named configuration"}},
     "retain-rule-uuid"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"retain-rule-uuid",
         "roles"=>"superuser",
         "type"=>"enum",
         "default"=>"no",
         "help-string"=>"Retain UUID for policy rules from load config"}},
     "skip-validate"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"skip-validate",
         "type"=>"enum",
         "default"=>"no",
         "help-string"=>
          "Skip validation for loaded config to improve load performance"}},
     "last-saved"=>
      {:obj=>:sequence,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"last-saved",
         "handler"=>"load_config_handler",
         "help-string"=>"Last saved configuration"}},
     "from"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"from",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "complete-handler"=>"load_config_complete_handler",
         "help-string"=>"Filename"}},
     "version"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"version",
         "type"=>"multiple",
         "help-string"=>"Version",
         "complete-handler"=>"load_config_audit_complete_handler"}},
     "partial"=>
      {"shared-objects"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-objects", "type"=>"enum", "optional"=>"yes"}},
       "shared-policies"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-policies", "type"=>"enum", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "complete-handler"=>"load_config_complete_handler",
           "help-string"=>"Filename"}},
       "from-xpath"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from-xpath",
           "optional"=>"yes",
           "type"=>"string",
           "regex"=>".*",
           "maxlen"=>"1024",
           "help-string"=>"xpath of the source node"}},
       "to-xpath"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to-xpath",
           "type"=>"string",
           "optional"=>"yes",
           "regex"=>".*",
           "maxlen"=>"1024",
           "help-string"=>"xpath of the destination's parent"}},
       "mode"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"mode",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"mode in which to load"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"partial", "help-string"=>"partial config loading"}},
     "repo"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "complete-handler"=>"$config/mgt-config/devices/entry/@name",
           "help-string"=>"device name"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
           "complete-handler"=>"show_config_repo_file_complete_handler",
           "help-string"=>"Filename"}},
       "version"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"version",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[0-9]+$",
           "complete-handler"=>"show_config_repo_version_complete_handler",
           "help-string"=>"Version"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"repo",
         "handler"=>"load_config_repo_handler",
         "help-string"=>"Load config from backup repository"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"load_config_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"load",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "help-string"=>"Load configuration from disk"}},
 "import-load"=>
  {"config"=>
    {"skip-validate"=>
      {:obj=>:element,
       :attributes=>
        {"optional"=>"yes",
         "name"=>"skip-validate",
         "type"=>"enum",
         "default"=>"no",
         "help-string"=>
          "Skip validation for loaded config to improve import-load performance"}},
     "partial"=>
      {"device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "maxlen"=>"32",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "mode"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"mode",
           "type"=>"enum",
           "optional"=>"yes",
           "help-string"=>"mode in which to load"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"partial", "help-string"=>"partial config loading"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"import_load_config_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"import-load",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "target"=>"mgmt",
     "context"=>"configuration-mode",
     "help-string"=>"Load configuration from disk"}},
 "upload"=>
  {"generic_chunks"=>
    {"todir"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"todir",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target directory"}},
     "tofile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"tofile",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target filename"}},
     "offset"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"offset",
         "type"=>"rangedint",
         "min"=>"0",
         "max"=>"419430600",
         "help-string"=>"offset 400MB"}},
     "endoffile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"endoffile", "type"=>"bool", "help-string"=>"end of file"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"4194400",
         "help-string"=>"base64 encoded file chunk, upto 4MB"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"generic_chunks", "handler"=>"upload_generic_chunks_handler"}},
   "generic"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"419430600",
         "help-string"=>"base64 encoded file, upto 400MB"}},
     "todir"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"todir",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target directory"}},
     "tofile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"tofile",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Target filename"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"generic", "handler"=>"upload_generic_handler"}},
   "config"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"32",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"419430600",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"config", "handler"=>"upload_config_handler"}},
   "variable-config"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Template Stack name"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"419430600",
         "help-string"=>"base64 encoded config, upto 400MB"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"variable-config",
       "handler"=>"upload_variable_config_handler"}},
   "software"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"419430400",
         "help-string"=>"content"}},
     "sync-to-peer"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"sync-to-peer",
         "type"=>"bool",
         "optional"=>"yes",
         "default"=>"no",
         "help-string"=>"Send a copy to HA peer"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"software", "handler"=>"upload_software_handler"}},
   "content"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"209715200",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"content", "handler"=>"upload_content_handler"}},
   "anti-virus"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"209715200",
         "help-string"=>"base64 encoded content, upto 200MB"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"anti-virus", "handler"=>"upload_av_handler"}},
   "wildfire"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"209715200",
         "help-string"=>"base64 encoded content, upto 200MB"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"wildfire", "handler"=>"upload_wildfire_handler"}},
   "license"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"license", "handler"=>"upload_license_handler"}},
   "idp-metadata"=>
    {"profile-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"profile-name",
         "type"=>"string",
         "subtype"=>"object-name",
         "maxlen"=>"31",
         "help-string"=>"idp server profile name"}},
     "max-clock-skew"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"max-clock-skew",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"max time offset between saml systems"}},
     "admin-use-only"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"admin-use-only",
         "optional"=>"yes",
         "type"=>"bool",
         "help-string"=>"profile for admins only"}},
     "validate-idp-certificate"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validate-idp-certificate",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"validate idp cert or not"}},
     "metadata-validation-cert-profile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"metadata-validation-cert-profile",
         "optional"=>"yes",
         "type"=>"string",
         "complete-handler"=>"$$scope/certificate-profile/entry/@name",
         "help-string"=>
          "validate the certificate used to sign the meatdate with the specified certificate profile"}},
     "validate-metadata-signature"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"validate-metadata-signature",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>
          "validate the imported metadata signature if present."}},
     "name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][ ,\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"1000000",
         "help-string"=>"idp metadata"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"idp-metadata", "handler"=>"upload_idp_metadata_handler"}},
   "certificate"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][ ,\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "passphrase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"passphrase",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"^.+$",
         "help-string"=>"Passphrase in case of pkcs12",
         "secret"=>"yes"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"1048576",
         "help-string"=>"content",
         "secret"=>"yes"}},
     "certificate-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-name",
         "type"=>"string",
         "subtype"=>"object-name",
         "maxlen"=>"31",
         "help-string"=>"Name of the certificate object"}},
     "format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"format",
         "type"=>"enum",
         "help-string"=>"Format of the keypair"}},
     "private-key-on-hsm"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"private-key-on-hsm",
         "optional"=>"yes",
         "default"=>"no",
         "type"=>"bool",
         "help-string"=>"Private key stored in Hardware Security Module"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"certificate", "handler"=>"upload_v2cert_handler"}},
   "private-key"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][ ,\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "passphrase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"passphrase",
         "type"=>"string",
         "minlen"=>"6",
         "maxlen"=>"31",
         "regex"=>"^.+$",
         "help-string"=>"Passphrase",
         "secret"=>"yes"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content",
         "secret"=>"yes"}},
     "certificate-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-name",
         "type"=>"string",
         "subtype"=>"object-name",
         "maxlen"=>"31",
         "help-string"=>"Name of the certificate object"}},
     "format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"format",
         "type"=>"enum",
         "help-string"=>"Format of the keypair"}},
     "block-private-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"block-private-key",
         "optional"=>"yes",
         "type"=>"bool",
         "help-string"=>"Block private key"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"private-key", "handler"=>"upload_v2key_handler"}},
   "keypair"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][ ,\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "passphrase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"passphrase",
         "type"=>"string",
         "maxlen"=>"31",
         "regex"=>"^.+$",
         "help-string"=>"Passphrase",
         "secret"=>"yes"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content",
         "secret"=>"yes"}},
     "certificate-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-name",
         "type"=>"string",
         "subtype"=>"object-name",
         "maxlen"=>"31",
         "help-string"=>"Name of the certificate object"}},
     "format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"format",
         "type"=>"enum",
         "help-string"=>"Format of the keypair"}},
     "block-private-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"block-private-key",
         "optional"=>"yes",
         "type"=>"bool",
         "help-string"=>"Block private key"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"keypair", "handler"=>"upload_v2keypair_handler"}},
   "ssl-optout-text"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ssl-optout-text",
       "handler"=>"upload_ssl_optout_text_handler"}},
   "ssl-cert-status-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ssl-cert-status-page",
       "handler"=>"upload_ssl_cert_status_page_handler"}},
   "sslvpn-custom-login-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "subtype"=>"object-name",
         "help-string"=>"Profile name"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"sslvpn-custom-login-page",
       "handler"=>"upload_sslvpn_custom_login_page_handler"}},
   "global-protect-portal-custom-login-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "subtype"=>"object-name",
         "help-string"=>"Profile name"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"global-protect-portal-custom-login-page",
       "handler"=>"upload_global_protect_portal_custom_login_page_handler"}},
   "global-protect-portal-custom-home-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "subtype"=>"object-name",
         "help-string"=>"Profile name"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"global-protect-portal-custom-home-page",
       "handler"=>"upload_global_protect_portal_custom_home_page_handler"}},
   "global-protect-portal-custom-help-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "subtype"=>"object-name",
         "help-string"=>"Profile name"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"global-protect-portal-custom-help-page",
       "handler"=>"upload_global_protect_portal_custom_help_page_handler"}},
   "captive-portal-text"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"captive-portal-text",
       "handler"=>"upload_captive_portal_text_handler"}},
   "url-coach-text"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"url-coach-text", "handler"=>"upload_url_coach_text_handler"}},
   "file-block-continue-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"file-block-continue-page",
       "handler"=>"upload_file_blocking_continue_comfort_page_handler"}},
   "file-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"file-block-page",
       "handler"=>"upload_file_blocking_comfort_page_handler"}},
   "data-filter-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"data-filter-block-page",
       "handler"=>"upload_data_filter_blocking_comfort_page_handler"}},
   "application-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"application-block-page",
       "handler"=>"upload_app_blocking_comfort_page_handler"}},
   "safe-search-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"safe-search-block-page",
       "handler"=>"upload_safe_search_blocking_comfort_page_handler"}},
   "url-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"url-block-page",
       "handler"=>"upload_url_filtering_comfort_page_handler"}},
   "virus-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"virus-block-page",
       "handler"=>"upload_virus_comfort_page_handler"}},
   "credential-block-page"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"credential-block-page",
       "handler"=>"upload_credential_comfort_page_handler"}},
   "credential-coach-text"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"credential-coach-text",
       "handler"=>"upload_credential_coach_text_handler"}},
   "logo"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"16777216",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"logo", "handler"=>"upload_logo_handler"}},
   "ui-translation-mapping"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "regex"=>"^[.0-9a-zA-Z_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"4194400",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"ui-translation-mapping",
       "handler"=>"upload_ui_translation_mapping_handler"}},
   "hsm-server-cert"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "type"=>"string",
         "subtype"=>"base64",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     "hsm-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"hsm-name",
         "optional"=>"yes",
         "type"=>"string",
         "minlen"=>"1",
         "maxlen"=>"31",
         "help-string"=>"hsm server name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"hsm-server-cert",
       "roles"=>"superuser,panorama-admin",
       "handler"=>"upload_hsm_server_cert_handler"}},
   "custom-logo"=>
    {"login-screen"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"File name"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Full pathname of content file"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"login-screen",
         "handler"=>"upload_custom_logo_login_screen_handler"}},
     "main-ui"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"File name"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Full pathname of content file"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"main-ui", "handler"=>"upload_custom_logo_main_ui_handler"}},
     "pdf-report-header"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"File name"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Full pathname of content file"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"pdf-report-header",
         "handler"=>"upload_custom_logo_pdf_report_header_handler"}},
     "pdf-report-footer"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"File name"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Full pathname of content file"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"pdf-report-footer",
         "handler"=>"upload_custom_logo_pdf_report_footer_handler"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"custom-logo"}},
   "custom-application"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "regex"=>".*",
         "help-string"=>"content"}},
     "location"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"location",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"panorama-pushed | private"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-application",
       "handler"=>"upload_custom_application_handler"}},
   "custom-threat"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "regex"=>".*",
         "help-string"=>"content"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"vulnerability | spyware"}},
     "location"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"location",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"panorama-pushed | private"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-threat", "handler"=>"upload_custom_threat_handler"}},
   "deploy-software"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"deploy-software",
       "handler"=>"upload_deploy_software_handler"}},
   "deploy"=>
    {"software"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"software", "handler"=>"upload_deploy_software_handler"}},
     "vpnclient"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"vpnclient", "handler"=>"upload_deploy_vpnclient_handler"}},
     "global-protect-client"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-client",
         "handler"=>"upload_deploy_global-protect-client_handler"}},
     "content"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"content", "handler"=>"upload_deploy_content_handler"}},
     "anti-virus"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"anti-virus", "handler"=>"upload_deploy_antivirus_handler"}},
     "wildfire"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"wildfire", "handler"=>"upload_deploy_wildfire_handler"}},
     "wf-content"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"wf-content", "handler"=>"upload_deploy_wfm_handler"}},
     "signed-url-database"=>
      {"path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "subtype"=>"pathname",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"signed-url-database",
         "handler"=>"upload_deploy_signed_urldb_handler"}},
     "plugin"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"256",
           "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
           "help-string"=>"Filename"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "type"=>"string",
           "maxlen"=>"256",
           "help-string"=>"Path"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"plugin", "handler"=>"upload_deploy_plugin_handler"}},
     :obj=>:union,
     :attributes=>{"name"=>"deploy", "help-string"=>"Manage devices"}},
   "high-availability-key"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     "content"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"content",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"1048576",
         "help-string"=>"content"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"high-availability-key",
       "handler"=>"upload_high_availability_key_handler"}},
   "plugin"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^[a-zA-Z0-9][\\.a-zA-Z0-9_-]+$",
         "help-string"=>"Filename"}},
     "path"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"path",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Path"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"plugin", "handler"=>"plugin-upload-handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"upload",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>"You should never see this"}},
 "download"=>
  {"threat-extpcap"=>
    {"serialno"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"serialno",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"Device serial number"}},
     "pcapid"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pcapid",
         "type"=>"string",
         "regex"=>"^[0-9]+$",
         "help-string"=>"Packet capture ID (numeric string)"}},
     "search-time"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"search-time",
         "type"=>"string",
         "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
         "regex"=>
          "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
         "minlen"=>"12",
         "maxlen"=>"20"}},
     "search-time-end"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"search-time-end",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. 2006/08/01 10:00:00)",
         "regex"=>
          "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
         "minlen"=>"12",
         "maxlen"=>"20"}},
     "device_name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device_name",
         "type"=>"string",
         "help-string"=>"Device name"}},
     "sessionid"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"sessionid",
         "type"=>"string",
         "regex"=>"^[0-9]+$",
         "help-string"=>"Session ID (numeric string)"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"threat-extpcap",
       "handler"=>"download_threat_extpcap_handler",
       "help-string"=>"Download extended packet capture"}},
   "report"=>
    {"predefined"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {nil=>{:obj=>:enum, :attributes=>{"value"=>"shared"}},
             :obj=>:"attr-req",
             :attributes=>{"name"=>"name", "type"=>"enum"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"multiple",
                   "complete-handler"=>
                    "download_report_file_complete_handler"}},
               "format"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"format",
                   "type"=>"enum",
                   "help-string"=>"File Format"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>"download_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"predefined", "handler"=>"download_report_handler"}},
     "custom"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "maxlen"=>"64",
               "help-string"=>"device-group name|shared"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"multiple",
                   "complete-handler"=>
                    "download_custom_report_file_complete_handler"}},
               "format"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"format",
                   "type"=>"enum",
                   "help-string"=>"File Format"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>
                "download_custom_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"custom", "handler"=>"download_custom_report_handler"}},
     "summary"=>
      {"scope"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "maxlen"=>"64",
               "help-string"=>"device-group name|shared"}},
           "report-name"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Report name"}},
               "file-name"=>
                {:obj=>:element,
                 :attributes=>
                  {"name"=>"file-name",
                   "type"=>"multiple",
                   "complete-handler"=>
                    "download_summary_report_file_complete_handler"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"report-name",
               "complete-handler"=>
                "download_summary_report_name_complete_handler"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"scope"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"summary", "handler"=>"download_summary_report_handler"}},
     :obj=>:union,
     :attributes=>{"name"=>"report"}},
   "hip-report"=>
    {"vsys"=>{:obj=>:element, :attributes=>{"name"=>"vsys", "type"=>"string"}},
     "username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "maxlen"=>"1023"}},
     "machinename"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"machinename",
         "type"=>"string",
         "maxlen"=>"255",
         "regex"=>"^.+$"}},
     "ip"=>
      {:obj=>:element,
       :attributes=>{"name"=>"ip", "optional"=>"yes", "type"=>"ipspec"}},
     "ipv6"=>
      {:obj=>:element,
       :attributes=>{"name"=>"ipv6", "optional"=>"yes", "type"=>"ipspec"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"hip-report",
       "internal"=>"yes",
       "target"=>"mgmt",
       "handler"=>"download_hipreport_handler",
       "help-string"=>"download hip report"}},
   "certificate"=>
    {"certificate-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-name",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"Certificate name"}},
     "include-key"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"include-key",
         "type"=>"bool",
         "help-string"=>"Include private keys?"}},
     "format"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"format",
         "type"=>"enum",
         "help-string"=>"Format of exported file"}},
     "passphrase"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"passphrase",
         "optional"=>"yes",
         "type"=>"string",
         "maxlen"=>"128",
         "regex"=>"^.+$",
         "help-string"=>"Passphrase for export",
         "secret"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"certificate", "handler"=>"download_cert_handler"}},
   "hsm-client-cert"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "type"=>"string",
         "maxlen"=>"256",
         "regex"=>"^\\/?[a-zA-Z0-9\\._\\-][a-zA-Z0-9:\\./_\\-]*$",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"hsm-client-cert",
       "roles"=>"superuser,panorama-admin",
       "handler"=>"download_hsm_cert_handler"}},
   "csv"=>
    {:obj=>:sequence,
     :attributes=>{"name"=>"csv", "handler"=>"download_csv_handler"}},
   "uar"=>
    {:obj=>:sequence,
     :attributes=>{"name"=>"uar", "handler"=>"download_uar_handler"}},
   "techsupport"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"techsupport", "handler"=>"download_techsupport_handler"}},
   "statsdump"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"statsdump", "handler"=>"download_statsdump_handler"}},
   "generic"=>
    {"file"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"file",
         "regex"=>"^[\\*a-zA-Z0-9][\\.\\*a-zA-Z0-9_-]*$",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"Filename"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"generic", "handler"=>"download_file_handler"}},
   "high-availability-key"=>
    {:obj=>:sequence,
     :attributes=>
      {"name"=>"high-availability-key",
       "handler"=>"download_high_availability_key_handler"}},
   "variable-config"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"256",
         "help-string"=>"Template Stack Name"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"variable-config",
       "handler"=>"download_variable_config_handler"}},
   "response-page"=>
    {"ssl-optout-text"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-optout-text",
         "handler"=>"download_ssl_optout_text_handler"}},
     "captive-portal-text"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"captive-portal-text",
         "handler"=>"download_captive_portal_text_handler"}},
     "url-coach-text"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"url-coach-text",
         "handler"=>"download_url_coach_text_handler"}},
     "file-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-page",
         "handler"=>"download_file_block_page_handler"}},
     "file-block-continue-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-continue-page",
         "handler"=>"download_file_block_continue_page_handler"}},
     "data-filter-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"data-filter-block-page",
         "handler"=>"download_data_filter_block_page_handler"}},
     "application-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"application-block-page",
         "handler"=>"download_application_block_page_handler"}},
     "safe-search-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"safe-search-block-page",
         "handler"=>"download_safe_search_block_page_handler"}},
     "url-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"url-block-page",
         "handler"=>"download_url_block_page_handler"}},
     "virus-block-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"virus-block-page",
         "handler"=>"download_virus_block_page_handler"}},
     "ssl-cert-status-page"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-cert-status-page",
         "handler"=>"download_ssl_cert_status_page_handler"}},
     "sslvpn-custom-login-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>"download_sslvpn_login_page_complete_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"sslvpn-custom-login-page",
         "handler"=>"download_sslvpn_login_page_handler"}},
     "global-protect-portal-custom-login-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "download_global_protect_login_page_complete_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-login-page",
         "handler"=>"download_global_protect_login_page_handler"}},
     "global-protect-portal-custom-help-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "download_global_protect_help_page_complete_handler"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-help-page",
         "handler"=>"download_global_protect_help_page_handler"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"response-page", "handler"=>"download_response_page_handler"}},
   "custom-application"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"application name",
         "complete-handler"=>"$$scope/application/entry/@name"}},
     "location"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"location",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"panorama-pushed | private"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-application",
       "handler"=>"download_custom_application_handler"}},
   "custom-threat"=>
    {"name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"threat id"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"spyware | vulnerability"}},
     "location"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"location",
         "type"=>"string",
         "maxlen"=>"128",
         "help-string"=>"panorama-pushed | private"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-threat", "handler"=>"download_custom_threat_handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"download",
     "internal"=>"yes",
     "target"=>"mgmt",
     "help-string"=>"You should never see this"}},
 "test"=>
  {"data-filtering"=>
    {"pattern"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pattern",
         "target"=>"script",
         "handler"=>"echo",
         "type"=>"string",
         "minlen"=>"0",
         "maxlen"=>"256"}},
     "ccn"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"ccn",
         "type"=>"string",
         "help-string"=>"test credit card number"}},
     "ssn"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"ssn",
         "type"=>"string",
         "help-string"=>"test social security number"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"data-filtering", "help-string"=>"Test ccn/ssn match"}},
   "nfs"=>
    {"dynamic-logging-partition"=>
      {"server"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"server",
           "type"=>"multiple",
           "help-string"=>"server IP or FQDN"}},
       "logdirectory"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"logdirectory",
           "maxlen"=>"255",
           "type"=>"string",
           "regex"=>"^([a-zA-Z0-9._/-])+$",
           "help-string"=>"directory to mount"}},
       "protocol"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"protocol",
           "optional"=>"yes",
           "type"=>"enum",
           "default"=>"udp"}},
       "port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"65535",
           "default"=>"0"}},
       "readsize"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"readsize",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"256",
           "max"=>"32768",
           "default"=>"32768"}},
       "writesize"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"writesize",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"256",
           "max"=>"32768",
           "default"=>"32768"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dynamic-logging-partition",
         "target"=>"mgmt",
         "handler"=>"nfs_test",
         "oldhandler"=>"/usr/local/bin/panlogsnfs --runtime --verbose",
         "help-string"=>"test dynamic logging partition"}},
     :obj=>:union,
     :attributes=>{"name"=>"nfs", "help-string"=>"Test nfs mounts"}},
   "scp-server-connection"=>
    {"initiate"=>
      {"hostname"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hostname",
           "type"=>"string",
           "regex"=>"^[a-zA-Z0-9._-]+$",
           "maxlen"=>"255",
           "help-string"=>"scp hostname"}},
       "port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"scp port"}},
       "path"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"path",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"255",
           "help-string"=>"scp path"}},
       "username"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"username",
           "type"=>"string",
           "help-string"=>"scp username",
           "minlen"=>"1",
           "regex"=>"[^']*"}},
       "password"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"password",
           "type"=>"string",
           "help-string"=>"scp password",
           "minlen"=>"0",
           "maxlen"=>"63",
           "regex"=>"[^']*",
           "encrypt"=>"yes",
           "secret"=>"yes"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"initiate",
         "handler"=>"test-scp-server-connection-initiate"}},
     "confirm"=>
      {"hostname"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hostname",
           "type"=>"string",
           "regex"=>"^[a-zA-Z0-9._-]+$",
           "maxlen"=>"255",
           "help-string"=>"scp hostname"}},
       "key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"key",
           "type"=>"string",
           "regex"=>"^[- .a-zA-Z0-9+/=[:space:]]+$",
           "maxlen"=>"1024",
           "help-string"=>"rsa"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"confirm", "handler"=>"test-scp-server-connection-confirm"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"scp-server-connection",
       "target"=>"mgmt",
       "help-string"=>"Test scp server connection"}},
   "deployment-update-schedule"=>
    {"refresh"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"63",
           "help-string"=>"Name of dynamic update schedule",
           "complete-handler"=>
            "$config/devices/entry/deviceconfig/system/deployment-update-schedule/entry/@name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"refresh",
         "handler"=>"test_deployment_update_schedule_refresh"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"deployment-update-schedule",
       "target"=>"mgmt",
       "help-string"=>"Test deployment update schedule operations"}},
   "nptv6"=>
    {"cks-neutral"=>
      {"dest-network"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"dest-network",
           "type"=>"ipspec",
           "ipv6-only"=>"yes",
           "subnet-only"=>"yes",
           "help-string"=>"The outbound IPV6 subnet"}},
       "source-ip"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"source-ip",
           "type"=>"ipspec",
           "ipv6-only"=>"yes",
           "unicast-only"=>"yes",
           "help-string"=>"the IPv6 address to be translated"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cks-neutral",
         "help-string"=>"Calculate checksum neutral value for IPv6 subnet",
         "handler"=>"test_nptv6_cks_neutral"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"nptv6",
       "target"=>"mgmt",
       "help-string"=>"NPTv6 related commands"}},
   "authentication"=>
    {"authentication-profile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"authentication-profile",
         "type"=>"string",
         "help-string"=>"Authentication profile",
         "complete-handler"=>
          "$$config/panorama/authentication-profile/entry/@name"}},
     "username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "type"=>"string",
         "regex"=>
          "^[a-zA-Z0-9_.-][\\a-zA-Z0-9_.-]|[a-zA-Z0-9_.-][@a-zA-Z0-9_.-]+$",
         "minlen"=>"1",
         "maxlen"=>"255",
         "help-string"=>"User name"}},
     "password"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"password",
         "password-prompt"=>"yes",
         "regex"=>"^.*$",
         "type"=>"string",
         "help-string"=>"Enter password on the prompt",
         "secret"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"authentication",
       "target"=>"mgmt",
       "help-string"=>"Test User authentication",
       "handler"=>"test_user_authentication"}},
   "generate-saml-url"=>
    {"management"=>
      {"interface"=>
        {:obj=>:element,
         :attributes=>
          {"type"=>"enum",
           "name"=>"interface",
           "optional"=>"yes",
           "help-string"=>"management interface for admin WebUI"}},
       "authprofile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"authprofile",
           "type"=>"string",
           "help-string"=>"SAML authentication profile",
           "complete-handler"=>
            "$$config/panorama/authentication-profile/entry[method/saml-idp]/@name"}},
       "ip-hostname"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ip-hostname",
           "type"=>"string",
           "complete-handler"=>"show_mgmt_hostname_complete_handler",
           "help-string"=>"ip or hostname with port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"management",
         "optional"=>"yes",
         "help-string"=>"Admin WebUI SAML client"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"generate-saml-url",
       "target"=>"mgmt",
       "help-string"=>"generate test url for saml authentication",
       "handler"=>"test_generate_saml_url"}},
   "http-profile"=>
    {"template"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"template",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"template name"}},
     "vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"vsys name"}},
     "name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"name",
         "type"=>"string",
         "help-string"=>"name of the http profile"}},
     "type"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"type",
         "type"=>"enum",
         "help-string"=>"log type to be tested"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"http-profile",
       "help-string"=>"Test Http profile connection",
       "target"=>"mgmt",
       "handler"=>"test_http_profile"}},
   "http-server"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"vsys name"}},
     "address"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"address",
         "type"=>"string",
         "maxlen"=>"63",
         "regex"=>"^([a-zA-Z0-9:\\.\\_-])+([a-zA-Z0-9:\\_-])$",
         "help-string"=>"IP address or FQDN of the http server"}},
     "protocol"=>
      {:obj=>:element,
       :attributes=>{"name"=>"protocol", "type"=>"enum", "default"=>"HTTPS"}},
     "tls-version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"tls-version",
         "type"=>"enum",
         "optional"=>"yes",
         "default"=>"1.2",
         "help-string"=>"TLS handshake protocol version"}},
     "certificate-profile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-profile",
         "type"=>"string",
         "optional"=>"yes",
         "default"=>"None",
         "help-string"=>
          "Certificate Profile for validating server certificate"}},
     "port"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"port",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"65535",
         "optional"=>"yes",
         "default"=>"443",
         "help-string"=>
          "Port number (Standard HTTP ports HTTP:80, HTTPS:443)"}},
     "username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"username for HTTP basic authentication",
         "minlen"=>"1",
         "maxlen"=>"255",
         "regex"=>"[^']*"}},
     "password"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"password",
         "optional"=>"yes",
         "type"=>"string",
         "minlen"=>"0",
         "maxlen"=>"255",
         "regex"=>"[^']*",
         "encrypt"=>"yes",
         "secret"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"http-server",
       "help-string"=>"Test Http server connection",
       "target"=>"mgmt",
       "handler"=>"test_http_server"}},
   "smtp-server"=>
    {"vsys"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"vsys",
         "optional"=>"yes",
         "type"=>"string",
         "help-string"=>"vsys name"}},
     "display-name"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"display-name",
         "type"=>"string",
         "subtype"=>"object-name",
         "optional"=>"yes"}},
     "from"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"from",
         "type"=>"string",
         "regex"=>
          "^([a-zA-Z0-9_?~^'`.\\+/=|\#$!*%{}\\&-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
         "maxlen"=>"128",
         "help-string"=>"email address (e.g. admin@mycompany.com)",
         "optional"=>"yes"}},
     "to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"to",
         "type"=>"string",
         "regex"=>
          "^([a-zA-Z0-9_?~^'`.\\+/=|\#$!*%{}\\&-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
         "maxlen"=>"128",
         "help-string"=>"email address (e.g. admin@mycompany.com)",
         "optional"=>"yes"}},
     "and-also-to"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"and-also-to",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>
          "^([a-zA-Z0-9_?~^'`.\\+/=|\#$!*%{}\\&-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
         "maxlen"=>"128",
         "help-string"=>"email address (e.g. admin@mycompany.com)"}},
     "gateway"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"gateway",
         "type"=>"string",
         "maxlen"=>"63",
         "regex"=>"^([a-zA-Z0-9:\\.\\_-])+([a-zA-Z0-9:\\_-])$",
         "help-string"=>"IP address or FQDN of the smtp server",
         "optional"=>"yes"}},
     "protocol"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"protocol",
         "optional"=>"yes",
         "type"=>"enum",
         "default"=>"SMTP"}},
     "tls-version"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"tls-version",
         "type"=>"enum",
         "optional"=>"yes",
         "default"=>"1.2",
         "help-string"=>"TLS handshake protocol version"}},
     "auth"=>
      {:obj=>:element,
       :attributes=>{"name"=>"auth", "type"=>"enum", "optional"=>"yes"}},
     "certificate-profile"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"certificate-profile",
         "type"=>"string",
         "optional"=>"yes",
         "default"=>"None",
         "help-string"=>
          "Certificate Profile for validating server certificate"}},
     "port"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"port",
         "type"=>"rangedint",
         "min"=>"1",
         "max"=>"65535",
         "optional"=>"yes",
         "default"=>"25",
         "help-string"=>
          "Port number (Standard EMAIL ports SMTP:25, TLS:587)"}},
     "username"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"username",
         "optional"=>"yes",
         "type"=>"string",
         "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
         "help-string"=>"username for SMTP basic authentication",
         "minlen"=>"0",
         "maxlen"=>"255"}},
     "password"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"password",
         "optional"=>"yes",
         "type"=>"string",
         "minlen"=>"0",
         "maxlen"=>"255",
         "regex"=>"[^']*",
         "encrypt"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"smtp-server",
       "help-string"=>"Test smtp server connection",
       "target"=>"mgmt",
       "handler"=>"test_smtp_server"}},
   "threat-vault"=>
    {"connection"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"connection",
         "handler"=>"test_threatvault_status",
         "help-string"=>"Test threat-vault connection"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"threat-vault",
       "target"=>"mgmt",
       "help-string"=>"Test threat-vault connection"}},
   "user-id"=>
    {"custom-group"=>
      {"group-mapping"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"group-mapping",
           "type"=>"string",
           "help-string"=>"Group-mapping name",
           "complete-handler"=>"$vsys/group-mapping/entry/@name"}},
       "ldap-filter"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ldap-filter",
           "type"=>"string",
           "help-string"=>"Ldap filter for custom group",
           "maxlen"=>"1023",
           "regex"=>".*"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"custom-group",
         "help-string"=>"Test User Id Custom Group",
         "handler"=>"test_custom_group"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"user-id", "target"=>"useridd", "help-string"=>"Test Userid"}},
   "custom-signature-perf"=>
    {"pattern"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pattern", "type"=>"string", "regex"=>".*", "maxlen"=>"127"}},
     "context"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"context",
         "type"=>"string",
         "maxlen"=>"127",
         "complete-handler"=>"show_context_complete_handler"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-signature-perf",
       "target"=>"mgmt",
       "help-string"=>"Test lscan signature",
       "handler"=>"test_custom_signature_perf"}},
   "custom-signature-type"=>
    {"pattern"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"pattern", "type"=>"string", "regex"=>".*", "maxlen"=>"127"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"custom-signature-type",
       "target"=>"mgmt",
       "help-string"=>"Test custom signature type",
       "handler"=>"test_custom_signature_type"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"test",
     "target"=>"device",
     "help-string"=>"verify system settings with test cases"}},
 "scp"=>
  {"import"=>
    {"idp-metadata"=>
      {"profile-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"idp server profile name"}},
       "max-clock-skew"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"max-clock-skew",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"max time offset between saml systems"}},
       "validate-metadata-signature"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"validate-metadata-signature",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>
            "validate the imported metadata signature if present."}},
       "validate-idp-certificate"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"validate-idp-certificate",
           "optional"=>"yes",
           "type"=>"string",
           "help-string"=>"validate idp cert or not"}},
       "metadata-validation-cert-profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"metadata-validation-cert-profile",
           "optional"=>"yes",
           "type"=>"string",
           "complete-handler"=>"$$scope/certificate-profile/entry/@name",
           "help-string"=>
            "validate the certificate used to sign the meatdate with the specified certificate profile"}},
       "admin-use-only"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"admin-use-only",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"profile for admins only"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"idp-metadata", "help-string"=>"import SAML IDP metadata"}},
     "variable-config"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "help-string"=>"Template-stack Name",
           "complete-handler"=>
            "$config/devices/entry[@name='localhost.localdomain']/template-stack/entry/@name"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"variable-config",
         "help-string"=>
          "Use scp to import variable definition config for template-stack"}},
     "cms-license-store"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cms-license-store",
         "roles"=>"superuser",
         "help-string"=>"Use scp to import Panorama License store tar file"}},
     "configuration"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"configuration",
         "roles"=>"superuser",
         "help-string"=>"Use scp to import configuration"}},
     "pan-url-db"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"pan-url-db",
         "prune-on-sdb"=>"cfg.cms.mode=legacy",
         "roles"=>"superuser",
         "help-string"=>"Use scp to import Pan URL DB image"}},
     "ui-translation-mapping"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ui-translation-mapping",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Use scp to import UI translation mapping"}},
     "private-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       "block-private-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"block-private-key",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"Block private key"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"private-key", "help-string"=>"Use scp to import X.509 key"}},
     "keypair"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       "block-private-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"block-private-key",
           "optional"=>"yes",
           "type"=>"bool",
           "help-string"=>"Block private key"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"keypair", "help-string"=>"Use scp to import X.509 key"}},
     "logdb"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"logdb",
         "roles"=>"superuser",
         "help-string"=>"Use scp to import logdb"}},
     "certificate"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "optional"=>"yes",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"certificate",
         "help-string"=>"Use scp to import X.509 certificate"}},
     "license"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"license", "help-string"=>"Use scp to import license file"}},
     "software"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"software",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Use scp to import software package"}},
     "deploy-software"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"deploy-software",
         "help-string"=>"Use scp to import deploy software package"}},
     "plugin"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"plugin", "help-string"=>"Use scp to import plugin package"}},
     "high-availability-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"high-availability-key",
         "help-string"=>
          "Use scp to import high-availability peer encryption key"}},
     "ssl-optout-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-optout-text",
         "help-string"=>"Use scp to import SSL optout text"}},
     "ssl-cert-status-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-cert-status-page",
         "help-string"=>"Use scp to import SSL cert status page"}},
     "captive-portal-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"captive-portal-text",
         "help-string"=>"Use scp to import captive portal text"}},
     "url-coach-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-coach-text",
         "help-string"=>"Use scp to import url coach text"}},
     "application-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"application-block-page",
         "help-string"=>"Use scp to import application block comfort page"}},
     "safe-search-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"safe-search-block-page",
         "help-string"=>"Use scp to import safe search block comfort page"}},
     "hsm-server-cert"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       "hsm-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"hsm-name",
           "type"=>"string",
           "complete-handler"=>
            "$device/deviceconfig/system/hsm-settings/provider/safenet-network/hsm-server/entry/@name",
           "help-string"=>"HSM server name"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hsm-server-cert",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"Import HSM server certificate"}},
     "url-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-block-page",
         "help-string"=>"Use scp to import url block comfort page"}},
     "mfa-login-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mfa-login-page",
         "help-string"=>"Use scp to import MFA login page"}},
     "credential-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"credential-block-page",
         "help-string"=>
          "Use scp to import credential enforcement block comfort page"}},
     "credential-coach-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"credential-coach-text",
         "help-string"=>
          "Use scp to import credential enforcement coach text"}},
     "file-block-continue-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-continue-page",
         "help-string"=>"Use scp to import file block continue page"}},
     "file-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-page",
         "help-string"=>"Use scp to import file block page"}},
     "data-filter-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"data-filter-block-page",
         "help-string"=>"Use scp to import data filter block page"}},
     "virus-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"virus-block-page",
         "help-string"=>"Use scp to import virus block comfort page"}},
     "saml-auth-internal-error-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"saml-auth-internal-error-page",
         "help-string"=>"Use scp to import saml auth internal error page"}},
     "global-protect-portal-custom-login-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-login-page",
         "help-string"=>
          "Use scp to import GlobalProtect portal custom login page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-home-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-home-page",
         "help-string"=>
          "Use scp to import GlobalProtect portal custom home page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-help-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-help-page",
         "help-string"=>
          "Use scp to import GlobalProtect portal custom help page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-welcome-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-welcome-page",
         "help-string"=>
          "Use scp to import GlobalProtect portal custom welcome page",
         "prune-on"=>"vpn-disable-mode"}},
     "content"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"content",
         "help-string"=>"Use scp to import database content"}},
     "anti-virus"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"anti-virus",
         "help-string"=>"Use scp to import anti-virus content"}},
     "wildfire"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Source (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"wildfire",
         "help-string"=>"Use scp to import wildfire content"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"import",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "help-string"=>"Use scp to import files",
       "cli-handler"=>"scp-handler"}},
   "export"=>
    {"mgmt-pcap"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pan/.debug/mgmtpcap/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mgmt-pcap",
         "help-string"=>
          "Use scp to export packet capture from management interface"}},
     "license-token-file"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/licenses/token/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"license-token-file",
         "help-string"=>"Use scp to export deactivate license token file"}},
     "threat-pcap"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "pcap-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pcap-id", "type"=>"string", "help-string"=>"Pcap ID"}},
       "search-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time",
           "type"=>"string",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. \"2006/08/01 10:00:00\")",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"threat-pcap",
         "help-string"=>"Use scp to export threat packet capture"}},
     "certificate"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "optional"=>"yes",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "include-key"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"include-key",
           "type"=>"bool",
           "help-string"=>"Include private keys?"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"certificate",
         "help-string"=>"Use scp to export X.509 certificate"}},
     "ui-translation-mapping"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/locale/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ui-translation-mapping",
         "help-string"=>"Use scp to export UI translation mapping"}},
     "config-bundle"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"config-bundle",
         "roles"=>"superuser,superreader",
         "help-string"=>"Use scp to export configuration bundle"}},
     "pprof-file"=>
      {"management-plane"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "type"=>"string",
             "extended-type"=>"pathname",
             "directory"=>"/var/cores/pprof/"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>"Destination (username@host:path)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"management-plane",
           "help-string"=>"Use scp to export management-plane pprof-file"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"pprof-file", "help-string"=>"Use scp to export pprof-file"}},
     "core-file"=>
      {"management-plane"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "type"=>"string",
             "extended-type"=>"pathname",
             "directory"=>"/var/cores/"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>"Destination (username@host:path)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"management-plane",
           "help-string"=>"Use scp to export control-plane core-file"}},
       "large-corefile"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "type"=>"string",
             "extended-type"=>"pathname",
             "directory"=>"/opt/panlogs/cores/"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>"Destination (username@host:path)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"large-corefile",
           "help-string"=>"Use scp to export large core files in logdb"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"core-file", "help-string"=>"Use scp to export core-file"}},
     "log-file"=>
      {"management-plane"=>
        {"to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>"Destination (username@host:path)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"management-plane",
           "help-string"=>"Use scp to export control-plane log-file"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"log-file", "help-string"=>"Use scp to export log-file"}},
     "device-state"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"device-state",
         "help-string"=>"Use scp to export device-state"}},
     "imported-config"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"imported-config",
         "help-string"=>"Use scp to export imported configuration"}},
     "configuration"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/saved-configs/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"configuration",
         "roles"=>"superuser,superreader",
         "help-string"=>"Use scp to export configuration"}},
     "pdf-reports"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/pdf-reports/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"pdf-reports",
         "help-string"=>"Use scp to export PDF reports"}},
     "web-interface-certificate"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"web-interface-certificate",
         "help-string"=>"Use scp to export web-interface-certificate"}},
     "logdb"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>
            "Destination (username@host:path_to_destination_filename)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"logdb", "help-string"=>"Use scp to export logdb"}},
     "device-telemetry"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/panlogs/tmp/device_telemetry/now/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"device-telemetry",
         "prune-on-sdb"=>"cfg.cms.mode=offlinedb",
         "help-string"=>"Use scp to export device-telemetry collect-now"}},
     "tech-support"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"tech-support",
         "help-string"=>"Use scp to export tech support info"}},
     "telemetry-data"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/tmp/telemetry/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"telemetry-data",
         "help-string"=>"Use scp to export sent telemetry data"}},
     "dnsproxy"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/tmp/dnsproxyd/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dnsproxy",
         "help-string"=>"Use tftp to export dnsproxy file"}},
     "log"=>
      {"traffic"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"traffic"}},
       "threat"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"threat"}},
       "url"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"url"}},
       "data"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"data"}},
       "wildfire"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"wildfire"}},
       "gtp"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"gtp"}},
       "sctp"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"sctp"}},
       "decryption"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"decryption"}},
       "globalprotect"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"globalprotect"}},
       "tunnel"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tunnel"}},
       "userid"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"userid"}},
       "auth"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"auth"}},
       "system"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"system"}},
       "config"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"config"}},
       "alarm"=>
        {"max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "type"=>"string",
             "regex"=>
              "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
             "help-string"=>
              "Destination (username@host:path_to_destination_filename)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"SSH port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"alarm"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"log", "help-string"=>"Use scp to export log in csv format"}},
     "high-availability-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/etc/ha-ssh/export/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"high-availability-key",
         "help-string"=>
          "Use scp to export high-availability peer encryption key"}},
     "variable-config"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "help-string"=>"Template-stack Name",
           "complete-handler"=>
            "$config/devices/entry[@name='localhost.localdomain']/template-stack/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"variable-config",
         "help-string"=>
          "Use scp to export variable definition config for template-stack"}},
     "cms-license-store"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/saved-configs/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cms-license-store",
         "roles"=>"superuser",
         "help-string"=>"Use scp to export Panorama license store tar file"}},
     "ssl-optout-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-optout-text",
         "help-string"=>"Use scp to export ssl optout text"}},
     "global-protect-portal-custom-login-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-login-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-login-page",
         "help-string"=>"Use scp to export global protect login page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-home-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-home-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-home-page",
         "help-string"=>
          "Use scp to export GlobalProtect portal custom home page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-help-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-help-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-help-page",
         "help-string"=>"Use scp to export global protect help page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-welcome-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-welcome-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-welcome-page",
         "help-string"=>"Use scp to export global protect welcome page",
         "prune-on"=>"vpn-disable-mode"}},
     "ssl-cert-status-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-cert-status-page",
         "help-string"=>"Use scp to export SSL cert status page"}},
     "captive-portal-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"captive-portal-text",
         "help-string"=>"Use scp to export captive portal text"}},
     "url-coach-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-coach-text",
         "help-string"=>"Use scp to export url coach text"}},
     "file-block-continue-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-continue-page",
         "help-string"=>"Use scp to export file block comfort page"}},
     "file-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-page",
         "help-string"=>"Use scp to export file block comfort page"}},
     "application-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"application-block-page",
         "help-string"=>"Use scp to export application block comfort page"}},
     "url-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-block-page",
         "help-string"=>"Use scp to export url block comfort page"}},
     "mfa-login-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mfa-login-page",
         "help-string"=>"Use scp to export MFA login page"}},
     "virus-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"virus-block-page",
         "help-string"=>"Use scp to export virus block comfort page"}},
     "debug-pcap"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pan/.debug/pcap/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"debug-pcap",
         "help-string"=>
          "Use scp to export packet capture generated for purpose of debugging daemons"}},
     "hsm-support-info"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/hsm/export/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hsm-support-info",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"Use scp to export hsm support info file"}},
     "hsm-client-cert"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/usr/safenet/lunaclient/cert/client/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to",
           "type"=>"string",
           "regex"=>
            "^([.a-zA-Z0-9_][.a-zA-Z0-9_-]*@[.:\\[\\]a-zA-Z0-9_-]+:[^@]+)$",
           "help-string"=>"Destination (username@host:path)"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"SSH port number on remote host"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"hsm-client-cert",
         "roles"=>"superuser,panorama-admin",
         "help-string"=>"Use scp to export safenet hsm client certificate"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"export",
       "help-string"=>"Use scp to export files",
       "cli-handler"=>"scp-handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"scp",
     "xmlapi-exposed"=>"no",
     "roles"=>
      "superuser,superreader,vsysadmin,deviceadmin,devicereader,panorama-admin",
     "target"=>"cli",
     "help-string"=>"Use scp to import / export files"}},
 "tftp"=>
  {"import"=>
    {"configuration"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"configuration",
         "roles"=>"superuser",
         "help-string"=>"Use tftp to import configuration"}},
     "certificate"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "optional"=>"yes",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"certificate",
         "help-string"=>"Use tftp to import X.509 certificate"}},
     "private-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"private-key",
         "help-string"=>"Use tftp to import ssl private key"}},
     "keypair"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       "passphrase"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"passphrase",
           "type"=>"string",
           "minlen"=>"6",
           "maxlen"=>"31",
           "help-string"=>"Passphrase",
           "secret"=>"yes"}},
       "certificate-name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"certificate-name",
           "type"=>"string",
           "subtype"=>"object-name",
           "maxlen"=>"31",
           "help-string"=>"Name of the certificate object"}},
       "format"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"format",
           "type"=>"enum",
           "help-string"=>"Format of the keypair"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"keypair", "help-string"=>"Use tftp to import X.509 key"}},
     "license"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"license", "help-string"=>"Use tftp to import license file"}},
     "software"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"software",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Use tftp to import software package"}},
     "high-availability-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"high-availability-key",
         "help-string"=>
          "Use tftp to import high-availability peer encryption key"}},
     "ssl-optout-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-optout-text",
         "help-string"=>"Use tftp to import ssl optout text"}},
     "ssl-cert-status-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-cert-status-page",
         "help-string"=>"Use tftp to import ssl cert revoked notify page"}},
     "captive-portal-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"captive-portal-text",
         "help-string"=>"Use tftp to import captive portal text"}},
     "url-coach-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-coach-text",
         "help-string"=>"Use tftp to import url coach text"}},
     "file-block-continue-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-continue-page",
         "help-string"=>
          "Use tftp to import file block continue comfort page"}},
     "file-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-page",
         "help-string"=>"Use tftp to import file block comfort page"}},
     "data-filter-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"data-filter-block-page",
         "help-string"=>"Use tftp to import data filter block comfort page"}},
     "application-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"application-block-page",
         "help-string"=>"Use tftp to import application block comfort page"}},
     "safe-search-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"safe-search-block-page",
         "help-string"=>"Use tftp to import safe search block comfort page"}},
     "url-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-block-page",
         "help-string"=>"Use tftp to import url block comfort page"}},
     "mfa-login-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mfa-login-page",
         "help-string"=>"Use tftp to import MFA login page"}},
     "credential-coach-text"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"credential-coach-text",
         "help-string"=>
          "Use tftp to import credential enforcement coach text"}},
     "credential-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"credential-block-page",
         "help-string"=>
          "Use tftp to import credential enforcement block comfort page"}},
     "virus-block-page"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"virus-block-page",
         "help-string"=>"Use tftp to import virus block comfort page"}},
     "global-protect-portal-custom-login-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-login-page",
         "help-string"=>
          "Use tftp to import GlobalProtect portal custom login page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-home-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-home-page",
         "help-string"=>
          "Use tftp to import GlobalProtect portal custom home page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-help-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-help-page",
         "help-string"=>
          "Use tftp to import GlobalProtect portal custom help page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-welcome-page"=>
      {"profile"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"profile",
           "type"=>"string",
           "subtype"=>"object-name",
           "help-string"=>"For GlobalProtect portal profile"}},
       "from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from", "type"=>"string", "help-string"=>"tftp host"}},
       "file"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"file", "type"=>"string", "help-string"=>"Source path"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-welcome-page",
         "help-string"=>
          "Use tftp to import GlobalProtect portal custom welcome page",
         "prune-on"=>"vpn-disable-mode"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"import",
       "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
       "help-string"=>"Use tftp to import files",
       "cli-handler"=>"tftp-handler"}},
   "export"=>
    {"license-token-file"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/licenses/token/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"license-token-file",
         "help-string"=>"Use tftp to export deactivate license token file"}},
     "config-bundle"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"config-bundle",
         "roles"=>"superuser,superreader",
         "help-string"=>"Use tftp to export configuration bundle"}},
     "core-file"=>
      {"control-plane"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "type"=>"string",
             "extended-type"=>"pathname",
             "directory"=>"/var/cores/"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"tftp server port"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"control-plane",
           "help-string"=>"Use tftp to export control-plane core-file"}},
       "large-corefile"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "type"=>"string",
             "extended-type"=>"pathname",
             "directory"=>"/opt/panlogs/cores/"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"tftp server port"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"large-corefile",
           "help-string"=>"Use tftp to export large core files in logdb"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"core-file", "help-string"=>"Use tftp to export core-file"}},
     "device-state"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"device-state",
         "help-string"=>"Use tftp to export device state"}},
     "threat-pcap"=>
      {"device"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device",
           "type"=>"string",
           "help-string"=>"device serial number",
           "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
       "pcap-id"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pcap-id", "type"=>"string", "help-string"=>"Pcap ID"}},
       "search-time"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"search-time",
           "type"=>"string",
           "help-string"=>"YYYY/MM/DD hh:mm:ss (e.g. \"2006/08/01 10:00:00\")",
           "regex"=>
            "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
           "minlen"=>"12",
           "maxlen"=>"20"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"threat-pcap",
         "help-string"=>"Use tftp to export threat packet capture"}},
     "mgmt-pcap"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pan/.debug/mgmtpcap/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mgmt-pcap",
         "help-string"=>
          "Use tftp to export packet capture from management interface"}},
     "configuration"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/mgmt/saved-configs/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"configuration",
         "roles"=>"superuser,superreader",
         "help-string"=>"Use tftp to export configuration"}},
     "web-interface-certificate"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"web-interface-certificate",
         "help-string"=>"Use tftp to export web-interface-certificate"}},
     "tech-support"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"tech-support",
         "help-string"=>"Use tftp to export tech support info"}},
     "telemetry-data"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/tmp/telemetry/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"telemetry-data",
         "help-string"=>"Use tftp to export sent telemetry data"}},
     "dnsproxy"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/tmp/dnsproxyd/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"dnsproxy",
         "help-string"=>"Use tftp to export dnsproxy file"}},
     "log-file"=>
      {"management-plane"=>
        {"to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"tftp server port"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"management-plane",
           "help-string"=>"Use tftp to export management-plane log-file"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"log-file", "help-string"=>"Use tftp to export log-file"}},
     "high-availability-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/etc/ha-ssh/export/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"high-availability-key",
         "help-string"=>
          "Use tftp to export high-availability peer encryption key"}},
     "ssl-optout-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-optout-text",
         "help-string"=>"Use tftp to export ssl optout text"}},
     "ssl-cert-status-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"ssl-cert-status-page",
         "help-string"=>"Use tftp to export ssl cert revoked notify page"}},
     "captive-portal-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"captive-portal-text",
         "help-string"=>"Use tftp to export captive portal text"}},
     "url-coach-text"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-coach-text",
         "help-string"=>"Use tftp to export url coach text"}},
     "file-block-continue-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-continue-page",
         "help-string"=>
          "Use tftp to export file block continue comfort page"}},
     "file-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"file-block-page",
         "help-string"=>"Use tftp to export file block comfort page"}},
     "application-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"application-block-page",
         "help-string"=>"Use tftp to export application block comfort page"}},
     "url-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"url-block-page",
         "help-string"=>"Use tftp to export url block comfort page"}},
     "mfa-login-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"mfa-login-page",
         "help-string"=>"Use tftp to export MFA login page"}},
     "virus-block-page"=>
      {"to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"virus-block-page",
         "help-string"=>"Use tftp to export virus block comfort page"}},
     "global-protect-portal-custom-login-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-login-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-login-page",
         "help-string"=>"Use tftp to export global protect login page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-home-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-home-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-home-page",
         "help-string"=>
          "Use tftp to export GlobalProtect portal custom home page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-help-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-help-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-help-page",
         "help-string"=>"Use tftp to export global protect help page",
         "prune-on"=>"vpn-disable-mode"}},
     "global-protect-portal-custom-welcome-page"=>
      {"name"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"name",
           "type"=>"string",
           "maxlen"=>"128",
           "help-string"=>"Filename",
           "complete-handler"=>
            "$$scope/response-page/global-protect-portal-custom-welcome-page/entry/@name"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"global-protect-portal-custom-welcome-page",
         "help-string"=>"Use tftp to export global protect welcome page",
         "prune-on"=>"vpn-disable-mode"}},
     "debug-pcap"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pan/.debug/pcap/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"debug-pcap",
         "help-string"=>
          "Use tftp to export packet capture generated for purpose of debugging daemons"}},
     "inbound-proxy-key"=>
      {"from"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"from",
           "type"=>"string",
           "extended-type"=>"pathname",
           "directory"=>"/opt/pancfg/certificates/reverse/"}},
       "to"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"to", "type"=>"string", "help-string"=>"tftp host"}},
       "remote-port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"remote-port",
           "optional"=>"yes",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "help-string"=>"tftp server port"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"inbound-proxy-key",
         "roles"=>"superuser,deviceadmin,panorama-admin",
         "help-string"=>"Use tftp to export  inbound proxy key"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"export",
       "help-string"=>"Use tftp to export files",
       "cli-handler"=>"tftp-handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"tftp",
     "xmlapi-exposed"=>"no",
     "roles"=>
      "superuser,superreader,vsysadmin,deviceadmin,devicereader,panorama-admin",
     "prune-on"=>"fips-mode",
     "target"=>"cli",
     "help-string"=>"Use tftp to import / export files"}},
 "ftp"=>
  {"export"=>
    {"log"=>
      {"traffic"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"traffic"}},
       "threat"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"threat"}},
       "data"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"data"}},
       "url"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"url"}},
       "wildfire"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"wildfire"}},
       "gtp"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"gtp"}},
       "sctp"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"sctp"}},
       "decryption"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"decryption"}},
       "globalprotect"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"globalprotect"}},
       "tunnel"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"tunnel"}},
       "userid"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"userid"}},
       "auth"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([^\\\\]+\\\\)?[^:@]+(:[^@]+)?@[.:\\[\\]a-zA-Z0-9_-]+)$",
             "help-string"=>"Destination [domain\\]username[:password]@host"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"auth"}},
       "system"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"system"}},
       "config"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"config"}},
       "alarm"=>
        {"passive-mode"=>
          {"equal"=>
            {:obj=>:element, :attributes=>{"name"=>"equal", "type"=>"bool"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"passive-mode",
             "optional"=>"yes",
             "help-string"=>"use ftp passive mode"}},
         "start-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"start-time"}},
         "end-time"=>
          {"equal"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"equal",
               "type"=>"string",
               "help-string"=>
                "Datetime YYYY/MM/DD@hh:mm:ss (e.g. 2006/08/01@10:00:00)",
               "regex"=>
                "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
               "minlen"=>"12",
               "maxlen"=>"20"}},
           :obj=>:union,
           :attributes=>{"name"=>"end-time"}},
         "query"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"query", "optional"=>"yes", "type"=>"string"}},
         "max-log-count"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"max-log-count",
             "optional"=>"yes",
             "type"=>"rangedint",
             "max"=>"1048576",
             "help-string"=>"max number of logs to export"}},
         "to"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to",
             "secret"=>"yes",
             "type"=>"string",
             "regex"=>
              "^(([.a-zA-Z0-9_-]+:[^@]+@[.:\\[\\]a-zA-Z0-9_-]+)|([.a-zA-Z0-9_-]+@[.:\\[\\]a-zA-Z0-9_-]+))$",
             "help-string"=>
              "Destination (username:password@host) or (username@host)"}},
         "remote-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"remote-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"FTP port number on remote host"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"alarm"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"log", "help-string"=>"Use ftp to export log in csv format"}},
     :obj=>:union,
     :attributes=>
      {"name"=>"export",
       "help-string"=>"Use ftp to export files",
       "cli-handler"=>"ftp-handler"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"ftp",
     "xmlapi-exposed"=>"no",
     "roles"=>
      "superuser,superreader,vsysadmin,deviceadmin,devicereader,panorama-admin",
     "prune-on"=>"fips-mode",
     "target"=>"cli",
     "help-string"=>"Use ftp to export files"}},
 "less"=>
  {"mp-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"mp-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/pan/"}},
   "plugins-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"plugins-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/opt/plugins/var/log/pan/"}},
   "mp-backtrace"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"mp-backtrace",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/cores/crashinfo/"}},
   "webserver-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"webserver-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/nginx/"}},
   "appweb-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"appweb-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/appweb/"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"less",
     "roles"=>"superuser,superreader,deviceadmin,panorama-admin",
     "cli-handler"=>"less-handler",
     "target"=>"cli",
     "help-string"=>"Examine debug file content"}},
 "grep"=>
  {"invert-match"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"invert-match",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>
        "Invert the sense of matching, to select non-matching lines"}},
   "line-number"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"line-number",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Prefix each line of output with the line number"}},
   "ignore-case"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ignore-case",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Ignore case distinctions"}},
   "no-filename"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-filename",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Suppress the prefixing of filenames on output"}},
   "count"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"count",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print a count of matching  lines for each input file"}},
   "max-count"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"max-count",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>"Stop reading a file after NUM matching lines"}},
   "context"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"context",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>"Print NUM lines of output context"}},
   "before-context"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"before-context",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>
        "Print NUM lines of leading context before matching lines"}},
   "after-context"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"after-context",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>
        "Print NUM lines of trailing context after matching lines"}},
   "pattern"=>
    {:obj=>:element, :attributes=>{"name"=>"pattern", "type"=>"string"}},
   "mp-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"mp-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/pan/"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"grep",
     "roles"=>"superuser,superreader,deviceadmin,panorama-admin",
     "cli-handler"=>"grep-handler",
     "target"=>"cli",
     "help-string"=>"Searches file for lines containing a pattern match"}},
 "tail"=>
  {"follow"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"follow",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"output appended data as the file grows"}},
   "lines"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"lines",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>"output the last N lines, instead of the last 10"}},
   "mp-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"mp-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/pan/"}},
   "plugins-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"plugins-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/opt/plugins/var/log/pan/"}},
   "webserver-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"webserver-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/nginx/"}},
   "appweb-log"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"appweb-log",
       "type"=>"string",
       "extended-type"=>"pathname",
       "directory"=>"/var/log/appweb/"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"tail",
     "roles"=>"superuser,superreader,deviceadmin,panorama-admin",
     "cli-handler"=>"tail-handler",
     "target"=>"cli",
     "help-string"=>"Print the last 10 lines of debug file content"}},
 "ssh"=>
  {"inet"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"inet",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Force to IPv4 destination"}},
   "port"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"port",
       "type"=>"rangedint",
       "min"=>"0",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>"Port to connect to on the remote host"}},
   "source"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"source",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"Source address for ssh session"}},
   "v1"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"v1",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Force ssh to try protocol version 1 only",
       "prune-on"=>"fips-mode"}},
   "v2"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"v2",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Force ssh to try protocol version 2 only"}},
   "host"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"host",
       "type"=>"string",
       "help-string"=>"Hostname or IP address of remote host",
       "regex"=>"^[^-]"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"ssh",
     "cli-handler"=>"ssh-handler",
     "target"=>"cli",
     "help-string"=>"Start a secure shell to another host"}},
 "cms-traceroute"=>
  {"ipv4"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ipv4",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Use IPv4"}},
   "ipv6"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ipv6",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Use IPv6"}},
   "first-ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"first-ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"time-to-live used in the first outgoing probe packet"}},
   "max-ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"max-ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"Set the max time-to-live (max number of hops)"}},
   "port"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"port",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>
        "Set the base port number used in probes (default udp/33434 tcp/80 icmp/1)"}},
   "tos"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"tos",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"IP type-of-service value (0..255)"}},
   "wait"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"wait",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"99999",
       "optional"=>"yes",
       "help-string"=>"Set number of seconds to wait for a response"}},
   "pause"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"pause",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"2000000000",
       "optional"=>"yes",
       "help-string"=>
        "Set the time (in milliseconds) to pause between probes"}},
   "do-not-fragment"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"do-not-fragment",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Set the `don't fragment' bit"}},
   "debug-socket"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"debug-socket",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Enable socket level debugging"}},
   "gateway"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"gateway",
       "type"=>"ipspec",
       "optional"=>"yes",
       "help-string"=>"Specify a loose source route gateway (8 maximum)"}},
   "no-resolve"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-resolve",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't attempt to print addresses symbolically"}},
   "bypass-routing"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"bypass-routing",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Bypass routing tables and send directly to a host"}},
   "source"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"source",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>
        "Use specified source address in outgoing probe packets"}},
   "host"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"host",
       "type"=>"string",
       "help-string"=>"Hostname or IP address of remote host",
       "regex"=>"^[^-]"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"cms-traceroute",
     "xmlapi-exposed"=>"no",
     "handler"=>"cms_traceroute_handler",
     "target"=>"mgmt",
     "help-string"=>"Print the route packets take to network host"}},
 "traceroute"=>
  {"ipv4"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ipv4",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Use IPv4"}},
   "ipv6"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ipv6",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Use IPv6"}},
   "first-ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"first-ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"time-to-live used in the first outgoing probe packet"}},
   "max-ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"max-ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"Set the max time-to-live (max number of hops)"}},
   "port"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"port",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"65535",
       "optional"=>"yes",
       "help-string"=>
        "Set the base port number used in probes (default udp/33434 tcp/80 icmp/1)"}},
   "tos"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"tos",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"IP type-of-service value (0..255)"}},
   "wait"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"wait",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"99999",
       "optional"=>"yes",
       "help-string"=>"Set number of seconds to wait for a response"}},
   "pause"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"pause",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"2000000000",
       "optional"=>"yes",
       "help-string"=>
        "Set the time (in milliseconds) to pause between probes"}},
   "do-not-fragment"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"do-not-fragment",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Set the `don't fragment' bit"}},
   "debug-socket"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"debug-socket",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Enable socket level debugging"}},
   "gateway"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"gateway",
       "type"=>"ipspec",
       "optional"=>"yes",
       "help-string"=>"Specify a loose source route gateway (8 maximum)"}},
   "no-resolve"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-resolve",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't attempt to print addresses symbolically"}},
   "bypass-routing"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"bypass-routing",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Bypass routing tables and send directly to a host"}},
   "source"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"source",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>
        "Use specified source address in outgoing probe packets"}},
   "host"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"host",
       "type"=>"string",
       "help-string"=>"Hostname or IP address of remote host",
       "regex"=>"^[^-*~]"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"traceroute",
     "xmlapi-exposed"=>"no",
     "cli-handler"=>"traceroute-handler",
     "target"=>"cli",
     "help-string"=>"Print the route packets take to network host"}},
 "cms-ping"=>
  {"bypass-routing"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"bypass-routing",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Bypass routing table, use specified interface"}},
   "count"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"count",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"50",
       "default"=>"5",
       "optional"=>"yes",
       "help-string"=>"Number of requests to send (1..20 packets)"}},
   "do-not-fragment"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"do-not-fragment",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't fragment echo request packets (IPv4)"}},
   "inet6"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"inet6",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Force to IPv6 destination"}},
   "interval"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"interval",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"2",
       "optional"=>"yes",
       "help-string"=>"Delay between requests (seconds)"}},
   "source"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"source",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"Source address of echo request"}},
   "no-resolve"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-resolve",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't attempt to print addresses symbolically"}},
   "pattern"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"pattern",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"Hexadecimal fill pattern"}},
   "size"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"size",
       "type"=>"rangedint",
       "min"=>"0",
       "max"=>"65468",
       "optional"=>"yes",
       "help-string"=>"Size of request packets (0..65468 bytes)"}},
   "tos"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"tos",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"IP type-of-service value (0..255)"}},
   "ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>
        "IP time-to-live value (IPv6 hop-limit value) (0..255 hops)"}},
   "verbose"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"verbose",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Display detailed output"}},
   "host"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"host",
       "type"=>"string",
       "help-string"=>"Hostname or IP address of remote host",
       "regex"=>"^[^-]"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"cms-ping",
     "handler"=>"cms_ping_handler",
     "target"=>"mgmt",
     "help-string"=>"Ping hosts and networks"}},
 "ping"=>
  {"bypass-routing"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"bypass-routing",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Bypass routing table, use specified interface"}},
   "count"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"count",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"2000000000",
       "optional"=>"yes",
       "help-string"=>"Number of requests to send (1..2000000000 packets)"}},
   "do-not-fragment"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"do-not-fragment",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't fragment echo request packets (IPv4)"}},
   "inet6"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"inet6",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Force to IPv6 destination"}},
   "interval"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"interval",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"2000000000",
       "optional"=>"yes",
       "help-string"=>"Delay between requests (seconds)"}},
   "source"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"source",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"Source address of echo request"}},
   "no-resolve"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-resolve",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't attempt to print addresses symbolically"}},
   "pattern"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"pattern",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>"Hexadecimal fill pattern"}},
   "size"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"size",
       "type"=>"rangedint",
       "min"=>"0",
       "max"=>"65468",
       "optional"=>"yes",
       "help-string"=>"Size of request packets (0..65468 bytes)"}},
   "tos"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"tos",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>"IP type-of-service value (0..255)"}},
   "ttl"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"ttl",
       "type"=>"rangedint",
       "min"=>"1",
       "max"=>"255",
       "optional"=>"yes",
       "help-string"=>
        "IP time-to-live value (IPv6 hop-limit value) (0..255 hops)"}},
   "verbose"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"verbose",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Display detailed output"}},
   "host"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"host",
       "type"=>"string",
       "help-string"=>"Hostname or IP address of remote host",
       "regex"=>"^[^-*~]"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"ping",
     "xmlapi-exposed"=>"no",
     "cli-handler"=>"ping-handler",
     "target"=>"cli",
     "help-string"=>"Ping hosts and networks"}},
 "view-pcap"=>
  {"follow"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"follow",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Monitor pcap file in real time"}},
   "link-header"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"link-header",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print the link-level header on each dump line"}},
   "no-dns-lookup"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-dns-lookup",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't convert host addresses to names"}},
   "no-port-lookup"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-port-lookup",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't convert protocol and port numbers to names"}},
   "no-qualification"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-qualification",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't print domain name qualification of host names"}},
   "absolute-seq"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"absolute-seq",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print absolute TCP sequence numbers"}},
   "no-timestamp"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"no-timestamp",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Don't print a timestamp"}},
   "unformatted-timestamp"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"unformatted-timestamp",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print an unformatted timestamp"}},
   "delta"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"delta",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>
        "Print a delta (in micro-seconds) between current and previous line"}},
   "timestamp"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"timestamp",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print a timestamp proceeded by date"}},
   "undecoded-NFS"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"undecoded-NFS",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print undecoded NFS handles"}},
   "verbose"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"verbose",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Verbose output"}},
   "verbose+"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"verbose+",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Even more verbose output"}},
   "verbose++"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"verbose++",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Lots of verbose output"}},
   "hex"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"hex",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print each packet (minus link header) in hex"}},
   "hex-link"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"hex-link",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>"Print each packet (including link header) in hex"}},
   "hex-ascii"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"hex-ascii",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>
        "Print each packet (minus link header) in hex and ASCII"}},
   "hex-ascii-link"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"hex-ascii-link",
       "type"=>"bool",
       "optional"=>"yes",
       "help-string"=>
        "Print each packet (including link header) in hex and ASCII"}},
   "threat"=>
    {"serial"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"serial",
         "type"=>"string",
         "help-string"=>"device serial number"}},
     "threat-pcap-id"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"threat-pcap-id",
         "type"=>"string",
         "help-string"=>"pcap id"}},
     "search-time"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"search-time",
         "type"=>"string",
         "help-string"=>
          "Datetime YYYY/MM/DD hh:mm:ss (e.g. \"2006/08/01 10:00:00\")",
         "regex"=>
          "2[0-9][0-9][0-9]/([0][1-9]|[1][0-2])/([0-2][0-9]|[3][0-1]) ([01][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])",
         "minlen"=>"12",
         "maxlen"=>"20"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"threat", "type"=>"string", "help-string"=>"pcap id"}},
   "mgmt-pcap"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"mgmt-pcap",
       "type"=>"string",
       "extended-type"=>"pathname",
       "help-string"=>"packet capture generated from management interface",
       "directory"=>"/opt/pan/.debug/mgmtpcap/"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"view-pcap",
     "cli-handler"=>"viewpcap-handler",
     "target"=>"cli",
     "help-string"=>"Examine packet capture file content"}},
 "tcpdump"=>
  {"snaplen"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"snaplen",
       "type"=>"rangedint",
       "optional"=>"yes",
       "min"=>"0",
       "max"=>"65535",
       "help-string"=>
        "Snarf snaplen bytes of data from each packet. (0 means use the required length to catch whole packets)"}},
   "interface"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"interface",
       "type"=>"enum",
       "optional"=>"yes",
       "help-string"=>"Select interface to dump"}},
   "filter"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"filter",
       "type"=>"string",
       "optional"=>"yes",
       "help-string"=>
        "tcpdump filters - e.g. \"src net 67.207.148.0/24 and not port 22\""}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"tcpdump",
     "cli-handler"=>"tcpdump-handler",
     "target"=>"cli",
     "help-string"=>"capture packets on management interface"}},
 "deep-search"=>
  {"address"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"address",
       "type"=>"string",
       "maxlen"=>"64",
       "help-string"=>"ip address, ip address/netmask or object name"}},
   "application"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"application",
       "type"=>"string",
       "maxlen"=>"128",
       "help-string"=>"application name"}},
   "version"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"version",
       "type"=>"string",
       "help-string"=>"content version number"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"deep-search",
     "internal"=>"yes",
     "target"=>"mgmt",
     "handler"=>"deep_search_handler",
     "help-string"=>"where used deep search"}},
 "xpath-to-cache-key"=>
  {"xpath"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"xpath",
       "type"=>"string",
       "regex"=>".*",
       "maxlen"=>"1024",
       "help-string"=>"xpath to get key for"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"xpath-to-cache-key",
     "internal"=>"yes",
     "target"=>"mgmt",
     "handler"=>"cache_key_map_handler",
     "help-string"=>"xpath to completion cache key mapping"}},
 "find"=>
  {"command"=>
    {"keyword"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"keyword",
         "type"=>"string",
         "optional"=>"yes",
         "help-string"=>"CLI keyword"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"command"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"find",
     "context"=>"both",
     "cli-handler"=>"find-handler",
     "target"=>"cli",
     "help-string"=>"Find CLI commands with keyword"}},
 "validate"=>
  {"full"=>{:obj=>:sequence, :attributes=>{"name"=>"full", "optional"=>"yes"}},
   "partial"=>
    {"admin"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
     "shared-object"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
     "device-and-network"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
     "shared-object-write"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object-write",
         "internal"=>"yes",
         "type"=>"enum",
         "optional"=>"yes"}},
     "no-device-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
     "device-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
     "no-template"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
     "template"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template", "optional"=>"yes"}},
     "no-template-stack"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
     "template-stack"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
     "no-log-collector"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
     "log-collector"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
     "no-log-collector-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
     "log-collector-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
     "no-wildfire-appliance"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
     "wildfire-appliance"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
     "no-wildfire-appliance-cluster"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
     "wildfire-appliance-cluster"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"partial", "optional"=>"yes"}},
   :obj=>:union,
   :attributes=>
    {"name"=>"validate",
     "roles"=>"superuser,deviceadmin,panorama-admin,vsysadmin",
     "context"=>"configuration-mode",
     "target"=>"mgmt",
     "handler"=>"validate_handler",
     "help-string"=>"Validate current set of changes",
     "optional"=>"yes"}},
 "commit"=>
  {"force"=>
    {"partial"=>
      {"admin"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"member",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
       "shared-object"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
       "device-and-network"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
       "shared-object-write"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"shared-object-write",
           "internal"=>"yes",
           "type"=>"enum",
           "optional"=>"yes"}},
       "no-device-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
       "device-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
       "no-template"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
       "template"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template", "optional"=>"yes"}},
       "no-template-stack"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
       "template-stack"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "no-log-collector"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
       "log-collector"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
       "no-log-collector-group"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
       "log-collector-group"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
       "no-wildfire-appliance"=>
        {:obj=>:sequence,
         :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
       "wildfire-appliance"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
       "no-wildfire-appliance-cluster"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
       "wildfire-appliance-cluster"=>
        {"member"=>
          {:obj=>:element,
           :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"partial", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"force"}},
   "partial"=>
    {"admin"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
     "shared-object"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
     "device-and-network"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
     "shared-object-write"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object-write",
         "internal"=>"yes",
         "type"=>"enum",
         "optional"=>"yes"}},
     "no-device-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
     "device-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
     "no-template"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
     "template"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template", "optional"=>"yes"}},
     "no-template-stack"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
     "template-stack"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
     "no-log-collector"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
     "log-collector"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
     "no-log-collector-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
     "log-collector-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
     "no-wildfire-appliance"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
     "wildfire-appliance"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
     "no-wildfire-appliance-cluster"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
     "wildfire-appliance-cluster"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"partial", "optional"=>"yes"}},
   "description"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"description",
       "optional"=>"yes",
       "type"=>"string",
       "maxlen"=>"512",
       "help-string"=>"Enter commit description"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"commit",
     "roles"=>"superuser,deviceadmin,panorama-admin,vsysadmin",
     "context"=>"configuration-mode",
     "cli-handler"=>"cli-commit-handler",
     "target"=>"cli",
     "help-string"=>"Commit current set of changes"}},
 "replace"=>
  {"device"=>
    {"old"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"old",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"old device serial number",
         "complete-handler"=>"$$config/mgt-config/devices/entry/@name"}},
     "new"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"new",
         "type"=>"string",
         "max-length"=>"63",
         "help-string"=>"new device serial number"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"device",
       "handler"=>"replace_device_handler",
       "help-string"=>"replace device serial number"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"replace",
     "roles"=>"superuser,panorama-admin",
     "target"=>"mgmt",
     "help-string"=>"replace device serial number"}},
 "commit-and-push"=>
  {"partial"=>
    {"admin"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"member",
           "type"=>"string",
           "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
           "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"admin", "optional"=>"yes", "default"=>"all"}},
     "shared-object"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object", "type"=>"enum", "optional"=>"yes"}},
     "device-and-network"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"device-and-network", "type"=>"enum", "optional"=>"yes"}},
     "shared-object-write"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"shared-object-write",
         "internal"=>"yes",
         "type"=>"enum",
         "optional"=>"yes"}},
     "no-device-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-device-group", "optional"=>"yes"}},
     "device-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"device-group", "optional"=>"yes"}},
     "no-template"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template", "optional"=>"yes"}},
     "template"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template", "optional"=>"yes"}},
     "no-template-stack"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-template-stack", "optional"=>"yes"}},
     "template-stack"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
     "no-log-collector"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector", "optional"=>"yes"}},
     "log-collector"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector", "optional"=>"yes"}},
     "no-log-collector-group"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-log-collector-group", "optional"=>"yes"}},
     "log-collector-group"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"log-collector-group", "optional"=>"yes"}},
     "no-wildfire-appliance"=>
      {:obj=>:sequence,
       :attributes=>{"name"=>"no-wildfire-appliance", "optional"=>"yes"}},
     "wildfire-appliance"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance", "optional"=>"yes"}},
     "no-wildfire-appliance-cluster"=>
      {:obj=>:sequence,
       :attributes=>
        {"name"=>"no-wildfire-appliance-cluster", "optional"=>"yes"}},
     "wildfire-appliance-cluster"=>
      {"member"=>
        {:obj=>:element,
         :attributes=>{"name"=>"member", "type"=>"string", "maxlen"=>"63"}},
       :obj=>:array,
       :attributes=>{"name"=>"wildfire-appliance-cluster", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>{"name"=>"partial", "optional"=>"yes"}},
   "description"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"description",
       "optional"=>"yes",
       "type"=>"string",
       "maxlen"=>"512",
       "help-string"=>"Enter commit description"}},
   "push-to"=>
    {"log-collector-config"=>
      {"log-collector-group"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "complete-handler"=>
                "$config/devices/entry/log-collector-group/entry/@name",
               "maxlen"=>"64",
               "help-string"=>"log collector group name"}},
           "description"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"description",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"512",
               "help-string"=>"Enter commit description"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"log-collector-group", "help-string"=>"device group name"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"log-collector-config", "optional"=>"yes"}},
     "wildfire-appliance-config"=>
      {"wildfire-appliance"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "complete-handler"=>"wf_appliance_standalone_complete_handler",
               "help-string"=>"wildfire appliance name"}},
           "description"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"description",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"512",
               "help-string"=>"Enter commit description"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance",
           "help-string"=>"wildfire appliance name"}},
       "wildfire-appliance-cluster"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "complete-handler"=>
                "$config/devices/entry/wildfire-appliance-cluster/entry/@name",
               "maxlen"=>"64",
               "help-string"=>"wildfire appliance cluster name"}},
           "description"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"description",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"512",
               "help-string"=>"Enter commit description"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"wildfire-appliance-cluster",
           "help-string"=>"wildfire appliance cluster name"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"wildfire-appliance-config", "optional"=>"yes"}},
     "shared-policy"=>
      {"device-group"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "maxlen"=>"64",
               "help-string"=>"Device group name"}},
           "devices"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "subtype"=>"object-name",
                   "maxlen"=>"64",
                   "help-string"=>"Device serial no"}},
               "vsys"=>
                {"member"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"member",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>"vsys name"}},
                 :obj=>:array,
                 :attributes=>{"name"=>"vsys", "optional"=>"yes"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>
              {"name"=>"devices",
               "help-string"=>"list of devices",
               "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"device-group",
           "help-string"=>"device group name",
           "complete-handler"=>
            "$config/devices/entry/device-group/entry/@name"}},
       "merge-with-candidate-cfg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"merge-with-candidate-cfg",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"yes",
           "help-string"=>"Merge with candidate configuration"}},
       "include-template"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"include-template",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"yes",
           "help-string"=>"Include relevant template"}},
       "force-template-values"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"force-template-values",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Force template values by removing overridden objects on device"}},
       "validate-only"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"validate-only",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Validate changes on selected devices without commit"}},
       "description"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"description",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"512",
           "help-string"=>"Enter commit description"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"shared-policy", "optional"=>"yes"}},
     "device-config"=>
      {"template"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "maxlen"=>"64",
               "help-string"=>"Template name"}},
           "device"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "maxlen"=>"63",
                 "help-string"=>"device name"}},
             :obj=>:array,
             :attributes=>{"name"=>"device", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>
          {"name"=>"template",
           "optional"=>"yes",
           "complete-handler"=>"$config/devices/entry/template/entry/@name"}},
       "merge-with-candidate-cfg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"merge-with-candidate-cfg",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>"Merge with device candidate configuration"}},
       "force-template-values"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"force-template-values",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Force template values by removing overridden objects on device"}},
       "validate-only"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"validate-only",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Validate changes on selected devices without commit"}},
       "description"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"description",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"512",
           "help-string"=>"Enter commit description"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"device-config", "optional"=>"yes"}},
     "template-stack-config"=>
      {"template-stack"=>
        {"entry"=>
          {"name"=>
            {:obj=>:"attr-req",
             :attributes=>
              {"name"=>"name",
               "type"=>"string",
               "subtype"=>"object-name",
               "complete-handler"=>
                "$config/devices/entry/template-stack/entry/@name",
               "maxlen"=>"64",
               "help-string"=>"template stack name"}},
           "device"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "maxlen"=>"63",
                 "help-string"=>"device name"}},
             :obj=>:array,
             :attributes=>{"name"=>"device", "optional"=>"yes"}},
           :obj=>:sequence,
           :attributes=>{"name"=>"entry"}},
         :obj=>:array,
         :attributes=>{"name"=>"template-stack", "optional"=>"yes"}},
       "merge-with-candidate-cfg"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"merge-with-candidate-cfg",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>"Merge with device candidate configuration"}},
       "force-template-values"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"force-template-values",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Force template values by removing overridden objects on device"}},
       "validate-only"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"validate-only",
           "type"=>"bool",
           "optional"=>"yes",
           "default"=>"no",
           "help-string"=>
            "Validate changes on selected devices without commit"}},
       "description"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"description",
           "optional"=>"yes",
           "type"=>"string",
           "maxlen"=>"512",
           "help-string"=>"Enter commit description"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"template-stack-config", "optional"=>"yes"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"push-to", "help-string"=>"Shared policy commit operations"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"commit-and-push",
     "internal"=>"yes",
     "roles"=>"superuser,deviceadmin,panorama-admin",
     "target"=>"mgmt",
     "context"=>"configuration-mode",
     "handler"=>"commit_and_push",
     "help-string"=>"Commit-and-push current set of changes"}},
 "request-batch"=>
  {"op-command"=>
    {"test"=>
      {"security-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from", "optional"=>"yes", "type"=>"multiple"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "help-string"=>"destination IP address"}},
         "destination-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Destination port"}},
         "source-user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source-user",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Source User"}},
         "protocol"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"protocol",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"255",
             "help-string"=>"IP protocol value"}},
         "show-all"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"show-all",
             "optional"=>"yes",
             "type"=>"bool",
             "help-string"=>
              "show all potential match rules until first allow rule"}},
         "application"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"application",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_app_completer_handler",
             "maxlen"=>"32",
             "help-string"=>"Application name"}},
         "category"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"category",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64",
             "complete-handler"=>"show_url_category_completer_handler",
             "help-string"=>"Category name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"security-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test security policy match"}},
       "qos-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from", "optional"=>"yes", "type"=>"multiple"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "help-string"=>"destination IP address"}},
         "destination-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Destination port"}},
         "source-user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source-user",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Source User"}},
         "protocol"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"protocol",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"255",
             "help-string"=>"IP protocol value"}},
         "application"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"application",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_app_completer_handler",
             "maxlen"=>"32",
             "help-string"=>"Application name"}},
         "category"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"category",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"64",
             "complete-handler"=>"show_url_category_completer_handler",
             "help-string"=>"Category name"}},
         "codepoint-type"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"codepoint-type", "optional"=>"yes", "type"=>"enum"}},
         "codepoint-value"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"codepoint-value",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"63",
             "help-string"=>
              "Codepoint value- DSCP range [0-63] ToS range [0-7]"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"qos-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test qos policy match"}},
       "authentication-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from", "optional"=>"yes", "type"=>"multiple"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"destination IP address"}},
         "category"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"category",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_url_category_completer_handler",
             "maxlen"=>"64",
             "help-string"=>"Category name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"authentication-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test authentication policy match"}},
       "decryption-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from", "optional"=>"yes", "type"=>"multiple"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "type"=>"ipspec",
             "optional"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "type"=>"ipspec",
             "optional"=>"yes",
             "help-string"=>"destination IP address"}},
         "category"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"category",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_url_category_completer_handler",
             "maxlen"=>"64",
             "help-string"=>"Category name"}},
         "application"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"application",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_app_completer_handler",
             "maxlen"=>"32",
             "help-string"=>"Application name"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"decryption-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test ssl policy match"}},
       "nat-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from", "optional"=>"yes", "type"=>"multiple"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "help-string"=>"destination IP address"}},
         "source-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Source port"}},
         "destination-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Destination port"}},
         "protocol"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"protocol",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"255",
             "help-string"=>"IP protocol value"}},
         "to-interface"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-interface",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"63",
             "help-string"=>"Egress interface to use"}},
         "ha-device-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ha-device-id",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"1",
             "help-string"=>"HA Active-Active device ID"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"nat-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test nat policy match"}},
       "pbf-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"32",
             "help-string"=>"From zone"}},
         "from-interface"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-interface",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"32",
             "help-string"=>"From interface"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"destination IP address"}},
         "destination-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Destination port"}},
         "source-user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source-user",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Source User"}},
         "protocol"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"protocol",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"255",
             "help-string"=>"IP protocol value"}},
         "application"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"application",
             "optional"=>"yes",
             "type"=>"string",
             "complete-handler"=>"show_app_completer_handler",
             "maxlen"=>"32",
             "help-string"=>"Application name"}},
         "ha-device-id"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"ha-device-id",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"0",
             "max"=>"1",
             "help-string"=>"HA Active-Active device ID"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"pbf-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test Policy Based forwarding match"}},
       "dos-policy-match"=>
        {"from"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"32",
             "help-string"=>"From zone"}},
         "to"=>
          {:obj=>:element,
           :attributes=>{"name"=>"to", "optional"=>"yes", "type"=>"multiple"}},
         "from-interface"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"from-interface",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"32",
             "help-string"=>"From interface"}},
         "to-interface"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"to-interface",
             "optional"=>"yes",
             "type"=>"string",
             "maxlen"=>"32",
             "help-string"=>"To interface"}},
         "source"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source",
             "optional"=>"yes",
             "type"=>"ipspec",
             "unicast-only"=>"yes",
             "help-string"=>"source IP address"}},
         "destination"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination",
             "optional"=>"yes",
             "type"=>"ipspec",
             "help-string"=>"destination IP address"}},
         "destination-port"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"destination-port",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"65535",
             "help-string"=>"Destination port"}},
         "source-user"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"source-user",
             "optional"=>"yes",
             "type"=>"string",
             "regex"=>"^[^;|`&'\"<>[:cntrl:]]+$",
             "maxlen"=>"64",
             "help-string"=>"Source User"}},
         "protocol"=>
          {:obj=>:element,
           :attributes=>
            {"name"=>"protocol",
             "optional"=>"yes",
             "type"=>"rangedint",
             "min"=>"1",
             "max"=>"255",
             "help-string"=>"IP protocol value"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"dos-policy-match",
           "needvsys"=>"yes",
           "help-string"=>"Test DoS Policy match"}},
       "routing"=>
        {"fib-lookup"=>
          {"ip"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"ip",
               "type"=>"ipspec",
               "unicast-only"=>"yes",
               "help-string"=>"Destination IP address"}},
           "virtual-router"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"virtual-router",
               "type"=>"string",
               "help-string"=>"within virtual-router"}},
           "ecmp"=>
            {"source-ip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"source-ip",
                 "optional"=>"yes",
                 "type"=>"ipspec",
                 "unicast-only"=>"yes",
                 "help-string"=>
                  "Source IP address used for ECMP path selection"}},
             "source-port"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"source-port",
                 "optional"=>"yes",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"65535",
                 "help-string"=>"Source port used for ECMP path selection"}},
             "destination-ip"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"destination-ip",
                 "optional"=>"yes",
                 "type"=>"ipspec",
                 "unicast-only"=>"yes",
                 "help-string"=>
                  "Destination IP address used for ECMP path selection"}},
             "destination-port"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"destination-port",
                 "optional"=>"yes",
                 "type"=>"rangedint",
                 "min"=>"1",
                 "max"=>"65535",
                 "help-string"=>
                  "Destination port used for ECMP path selection"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"ecmp",
               "optional"=>"yes",
               "help-string"=>"ECMP path selection parameters"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"fib-lookup",
             "help-string"=>
              "perform route lookup within active route table (fib)"}},
         "mfib-lookup"=>
          {"group"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"group",
               "type"=>"ipspec",
               "multicast-only"=>"yes",
               "ipv4-only"=>"yes",
               "help-string"=>"Multicast group address"}},
           "source"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"source",
               "type"=>"ipspec",
               "optional"=>"yes",
               "unicast-only"=>"yes",
               "ipv4-only"=>"yes",
               "help-string"=>"Multicast source address"}},
           "virtual-router"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"virtual-router",
               "type"=>"string",
               "help-string"=>"within virtual-router"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"mfib-lookup",
             "help-string"=>
              "perform multicast route lookup within active multicast route table (mfib)"}},
         "bgp"=>
          {"virtual-router"=>
            {"entry"=>
              {"name"=>
                {:obj=>:"attr-req",
                 :attributes=>
                  {"name"=>"name",
                   "type"=>"string",
                   "help-string"=>"virtual-router name"}},
               "refresh"=>
                {"peer"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"peer",
                     "help-string"=>"filter by BGP peer",
                     "type"=>"string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"refresh",
                   "help-string"=>"trigger BGP peer resend all routes"}},
               "restart"=>
                {"peer"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"peer",
                     "help-string"=>"filter by BGP peer",
                     "type"=>"string"}},
                 "self"=>
                  {:obj=>:sequence,
                   :attributes=>{"name"=>"self", "help-string"=>"for self"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"restart",
                   "help-string"=>"restart BGP connection with peer"}},
               :obj=>:sequence,
               :attributes=>{"name"=>"entry"}},
             :obj=>:array,
             :attributes=>{"name"=>"virtual-router"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"bgp",
             "roles"=>"superuser,deviceadmin",
             "target"=>"routed",
             "help-string"=>"restart BGP session"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"routing", "help-string"=>"verify routing settings"}},
       "wildfire"=>
        {"registration"=>
          {"channel"=>
            {:obj=>:element,
             :attributes=>
              {"type"=>"enum",
               "optional"=>"yes",
               "name"=>"channel",
               "help-string"=>"wildfire channel (Public/Private)"}},
           :obj=>:sequence,
           :attributes=>
            {"name"=>"registration",
             "help-string"=>"test wildfire cloud registration and connection",
             "confirm"=>
              "This test may take a few minutes to finish. Do you want to continue?"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"wildfire",
           "timeout"=>"180",
           "help-string"=>"Test wildfire"}},
       "threat-vault"=>
        {"connection"=>
          {:obj=>:sequence,
           :attributes=>
            {"name"=>"connection",
             "help-string"=>"Test threat-vault connection"}},
         :obj=>:sequence,
         :attributes=>
          {"name"=>"threat-vault",
           "help-string"=>"Test threat-vault connection"}},
       :obj=>:sequence,
       :attributes=>{"name"=>"test"}},
     "show"=>
      {"logging-status"=>
        {:obj=>:sequence,
         :attributes=>
          {"name"=>"logging-status",
           "help-string"=>"Show logging status and info"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"show", "handler"=>"run_test_on_devices_handler"}},
     "request"=>
      {"system"=>
        {"external-list"=>
          {"list-capacities"=>
            {:obj=>:sequence,
             :attributes=>
              {"name"=>"list-capacities",
               "help-string"=>"List Capacities of IP, Domain and URL"}},
           "global-find"=>
            {"string"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"string",
                 "type"=>"string",
                 "maxlen"=>"256",
                 "help-string"=>"Find this string"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"global-find", "help-string"=>"Returns EDL object"}},
           "show-mp"=>
            {"type"=>
              {"predefined-ip"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "subtype"=>"object-name",
                     "help-string"=>"Name of predefined ip list.",
                     "complete-handler"=>
                      "$$predefined/ip-block-list-v2/entry/@name"}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"predefined-ip",
                   "help-string"=>"Predefined IP List"}},
               "ip"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "subtype"=>"object-name",
                     "help-string"=>
                      "Name of list. Please ensure target-vsys is set.",
                     "complete-handler"=>
                      "$$shareandvsys/external-list/entry[type/ip]/@name"}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"ip", "help-string"=>"IP list type"}},
               "domain"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "subtype"=>"object-name",
                     "help-string"=>
                      "Name of list. Please ensure target-vsys is set.",
                     "complete-handler"=>
                      "$$shareandvsys/external-list/entry[type/domain]/@name"}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"domain", "help-string"=>"Domain list type"}},
               "predefined-url"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "subtype"=>"object-name",
                     "help-string"=>"Name of predefined url list.",
                     "complete-handler"=>
                      "$$predefined/url-predefined/entry/@name"}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"predefined-url",
                   "help-string"=>"Predefined URL List"}},
               "url"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "subtype"=>"object-name",
                     "help-string"=>
                      "Name of list. Please ensure target-vsys is set.",
                     "complete-handler"=>
                      "$$shareandvsys/external-list/entry[type/url]/@name"}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"url", "help-string"=>"URL list type"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"type",
                 "maxlen"=>"63",
                 "help-string"=>"Ip/Domain/Url/Predefined-IP list"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"show-mp",
               "help-string"=>
                "MP op-command to show IPs/Domains/URLs in an external list "}},
           "show"=>
            {"type"=>
              {"predefined-ip"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "help-string"=>"Name of predefined ip list."}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"predefined-ip",
                   "help-string"=>"Predefined IP List"}},
               "ip"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>"Name of list."}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"ip", "help-string"=>"IP list type"}},
               "domain"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>"Name of list."}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"domain", "help-string"=>"Domain list type"}},
               "predefined-url"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "help-string"=>"Name of predefined url list."}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"predefined-url",
                   "help-string"=>"Predefined URL List"}},
               "url"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>"Name of list."}},
                 "anchor"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"anchor",
                     "optional"=>"yes",
                     "default"=>"1",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"starting from"}},
                 "num-records"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"num-records",
                     "optional"=>"yes",
                     "default"=>"100",
                     "type"=>"rangedint",
                     "min"=>"1",
                     "max"=>"4294967295",
                     "internal"=>"yes",
                     "help-string"=>"number of records"}},
                 "find"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"find",
                     "type"=>"string",
                     "maxlen"=>"256",
                     "optional"=>"yes",
                     "help-string"=>"Search this string"}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"url", "help-string"=>"URL list type"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"type",
                 "maxlen"=>"63",
                 "help-string"=>"Ip/Domain/Url/Predefined-IP list"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"show",
               "help-string"=>"Print IPs/Domains/URLs in an external list"}},
           "refresh"=>
            {"type"=>
              {"ip"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>"Name of list."}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"ip", "help-string"=>"IP list type"}},
               "domain"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "subtype"=>"object-name",
                     "help-string"=>"Name of list."}},
                 :obj=>:sequence,
                 :attributes=>
                  {"name"=>"domain", "help-string"=>"Domain list type"}},
               "url"=>
                {"name"=>
                  {:obj=>:element,
                   :attributes=>
                    {"name"=>"name",
                     "type"=>"string",
                     "maxlen"=>"63",
                     "help-string"=>
                      "Name of list. Please ensure target-vsys is set."}},
                 :obj=>:sequence,
                 :attributes=>{"name"=>"url", "help-string"=>"URL list type"}},
               :obj=>:sequence,
               :attributes=>
                {"name"=>"type",
                 "maxlen"=>"63",
                 "help-string"=>"Ip/Domain/Url list"}},
             :obj=>:sequence,
             :attributes=>
              {"name"=>"refresh", "help-string"=>"refresh external-lists"}},
           "url-test"=>
            {:obj=>:element,
             :attributes=>
              {"name"=>"url-test",
               "optional"=>"yes",
               "type"=>"string",
               "maxlen"=>"255",
               "regex"=>"^[^[:cntrl:]]+$",
               "help-string"=>"test accessibility for url",
               "default"=>"no"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"external-list",
             "help-string"=>"Perform external-list refresh/sanity functions"}},
         :obj=>:union,
         :attributes=>
          {"name"=>"system",
           "roles"=>"superuser,deviceadmin,panorama-admin",
           "help-string"=>"Perform system-level operations"}},
       :obj=>:union,
       :attributes=>
        {"name"=>"request",
         "handler"=>"run_test_on_devices_handler",
         "help-string"=>"Make system-level requests"}},
     "cms-ping"=>
      {"bypass-routing"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"bypass-routing",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Bypass routing table, use specified interface"}},
       "count"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"count",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"50",
           "default"=>"5",
           "optional"=>"yes",
           "help-string"=>
            "Number of requests to send (1..2000000000 packets)"}},
       "do-not-fragment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"do-not-fragment",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Don't fragment echo request packets (IPv4)"}},
       "inet6"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"inet6",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Force to IPv6 destination"}},
       "interval"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"interval",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"2000000000",
           "optional"=>"yes",
           "help-string"=>"Delay between requests (seconds)"}},
       "source"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"source",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Source address of echo request"}},
       "no-resolve"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"no-resolve",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Don't attempt to print addresses symbolically"}},
       "pattern"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pattern",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>"Hexadecimal fill pattern"}},
       "size"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"size",
           "type"=>"rangedint",
           "min"=>"0",
           "max"=>"65468",
           "optional"=>"yes",
           "help-string"=>"Size of request packets (0..65468 bytes)"}},
       "tos"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"tos",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"255",
           "optional"=>"yes",
           "help-string"=>"IP type-of-service value (0..255)"}},
       "ttl"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ttl",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"255",
           "optional"=>"yes",
           "help-string"=>
            "IP time-to-live value (IPv6 hop-limit value) (0..255 hops)"}},
       "verbose"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"verbose",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Display detailed output"}},
       "host"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"host",
           "type"=>"string",
           "help-string"=>"Hostname or IP address of remote host",
           "regex"=>"^[^-]"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cms-ping",
         "xmlapi-exposed"=>"no",
         "handler"=>"run_test_on_devices_handler",
         "help-string"=>"Ping hosts and networks"}},
     "cms-traceroute"=>
      {"ipv4"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ipv4",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Use IPv4"}},
       "ipv6"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"ipv6",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Use IPv6"}},
       "first-ttl"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"first-ttl",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"255",
           "optional"=>"yes",
           "help-string"=>
            "time-to-live used in the first outgoing probe packet"}},
       "max-ttl"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"max-ttl",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"255",
           "optional"=>"yes",
           "help-string"=>"Set the max time-to-live (max number of hops)"}},
       "port"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"port",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"65535",
           "optional"=>"yes",
           "help-string"=>
            "Set the base port number used in probes (default udp/33434 tcp/80 icmp/1)"}},
       "tos"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"tos",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"255",
           "optional"=>"yes",
           "help-string"=>"IP type-of-service value (0..255)"}},
       "wait"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"wait",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"99999",
           "optional"=>"yes",
           "help-string"=>"Set number of seconds to wait for a response"}},
       "pause"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"pause",
           "type"=>"rangedint",
           "min"=>"1",
           "max"=>"2000000000",
           "optional"=>"yes",
           "help-string"=>
            "Set the time (in milliseconds) to pause between probes"}},
       "do-not-fragment"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"do-not-fragment",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Set the `don't fragment' bit"}},
       "debug-socket"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"debug-socket",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Enable socket level debugging"}},
       "gateway"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"gateway",
           "type"=>"ipspec",
           "optional"=>"yes",
           "help-string"=>"Specify a loose source route gateway (8 maximum)"}},
       "no-resolve"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"no-resolve",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>"Don't attempt to print addresses symbolically"}},
       "bypass-routing"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"bypass-routing",
           "type"=>"bool",
           "optional"=>"yes",
           "help-string"=>
            "Bypass routing tables and send directly to a host"}},
       "source"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"source",
           "type"=>"string",
           "optional"=>"yes",
           "help-string"=>
            "Use specified source address in outgoing probe packets"}},
       "host"=>
        {:obj=>:element,
         :attributes=>
          {"name"=>"host",
           "type"=>"string",
           "help-string"=>"Hostname or IP address of remote host",
           "regex"=>"^[^-]"}},
       :obj=>:sequence,
       :attributes=>
        {"name"=>"cms-traceroute",
         "xmlapi-exposed"=>"no",
         "handler"=>"run_test_on_devices_handler",
         "help-string"=>"Print the route packets take to network host"}},
     "device"=>
      {"entry"=>
        {"name"=>
          {:obj=>:"attr-req",
           :attributes=>
            {"name"=>"name",
             "type"=>"string",
             "help-string"=>"serial number"}},
         "vsys"=>
          {"list"=>
            {"member"=>
              {:obj=>:element,
               :attributes=>
                {"name"=>"member",
                 "type"=>"string",
                 "help-string"=>"vsys name"}},
             :obj=>:array,
             :attributes=>{"name"=>"list", "optional"=>"yes"}},
           :obj=>:union,
           :attributes=>
            {"name"=>"vsys", "optional"=>"yes", "help-string"=>"vsys"}},
         :obj=>:sequence,
         :attributes=>{"name"=>"entry"}},
       :obj=>:array,
       :attributes=>{"name"=>"device", "help-string"=>"devices"}},
     :obj=>:sequence,
     :attributes=>
      {"name"=>"op-command", "handler"=>"run_test_on_devices_handler"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"request-batch",
     "roles"=>"superuser,vsysadmin,deviceadmin,panorama-admin",
     "target"=>"mgmt",
     "help-string"=>"run test command on devices"}},
 "modify-access-domain"=>
  {"device"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"device",
       "type"=>"string",
       "maxlen"=>"31",
       "regex"=>"^[0-9A-Z]+$"}},
   "auto-push"=>
    {:obj=>:element,
     :attributes=>{"name"=>"auto-push", "type"=>"bool", "optional"=>"yes"}},
   "template"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"template",
       "type"=>"string",
       "optional"=>"yes",
       "minlen"=>"1",
       "maxlen"=>"31"}},
   "template-stack"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"template-stack",
       "type"=>"string",
       "optional"=>"yes",
       "minlen"=>"1",
       "maxlen"=>"31"}},
   "log-collector-group"=>
    {:obj=>:element,
     :attributes=>
      {"name"=>"log-collector-group",
       "type"=>"string",
       "optional"=>"yes",
       "maxlen"=>"31",
       "regex"=>"^[a-zA-Z0-9\\ _-]+$"}},
   "collectors"=>
    {"member"=>
      {:obj=>:element,
       :attributes=>
        {"name"=>"member",
         "type"=>"string",
         "maxlen"=>"64",
         "regex"=>"^([0-9a-zA-Z:./_-])+$"}},
     :obj=>:array,
     :attributes=>{"name"=>"collectors", "optional"=>"yes"}},
   :obj=>:sequence,
   :attributes=>
    {"name"=>"modify-access-domain",
     "target"=>"mgmt",
     "handler"=>"modify_ado_handler",
     "internal"=>"yes"}}}
    end
  end
end
